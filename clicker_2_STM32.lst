;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/16/2017 10:03:32 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x1EB50000  	7861
0x0008	0x1E890000  	7817
0x000C	0x1E890000  	7817
0x0010	0x1E890000  	7817
0x0014	0x1E890000  	7817
0x0018	0x1E890000  	7817
0x001C	0x1E890000  	7817
0x0020	0x1E890000  	7817
0x0024	0x1E890000  	7817
0x0028	0x1E890000  	7817
0x002C	0x1E890000  	7817
0x0030	0x1E890000  	7817
0x0034	0x1E890000  	7817
0x0038	0x1E890000  	7817
0x003C	0x1E890000  	7817
0x0040	0x1E890000  	7817
0x0044	0x1E890000  	7817
0x0048	0x1E890000  	7817
0x004C	0x1E890000  	7817
0x0050	0x1E890000  	7817
0x0054	0x1E890000  	7817
0x0058	0x1E890000  	7817
0x005C	0x1E890000  	7817
0x0060	0x1E890000  	7817
0x0064	0x1E890000  	7817
0x0068	0x1E890000  	7817
0x006C	0x1E890000  	7817
0x0070	0x1E890000  	7817
0x0074	0x1E890000  	7817
0x0078	0x1E890000  	7817
0x007C	0x1E890000  	7817
0x0080	0x1E890000  	7817
0x0084	0x1E890000  	7817
0x0088	0x1E890000  	7817
0x008C	0x1E890000  	7817
0x0090	0x1E890000  	7817
0x0094	0x1E890000  	7817
0x0098	0x1E890000  	7817
0x009C	0x1E890000  	7817
0x00A0	0x1E890000  	7817
0x00A4	0x1E890000  	7817
0x00A8	0x1E890000  	7817
0x00AC	0x1E890000  	7817
0x00B0	0x1E890000  	7817
0x00B4	0x1E890000  	7817
0x00B8	0x1E890000  	7817
0x00BC	0x1E890000  	7817
0x00C0	0x1E890000  	7817
0x00C4	0x1E890000  	7817
0x00C8	0x1E890000  	7817
0x00CC	0x1E890000  	7817
0x00D0	0x1E890000  	7817
0x00D4	0x1E890000  	7817
0x00D8	0x1E890000  	7817
0x00DC	0x1E890000  	7817
0x00E0	0x1E890000  	7817
0x00E4	0x1E890000  	7817
0x00E8	0x1E890000  	7817
0x00EC	0x1E890000  	7817
0x00F0	0x1E890000  	7817
0x00F4	0x1E890000  	7817
0x00F8	0x1E890000  	7817
0x00FC	0x1E890000  	7817
0x0100	0x1E890000  	7817
0x0104	0x1E890000  	7817
0x0108	0x1E890000  	7817
0x010C	0x1E890000  	7817
0x0110	0x1E890000  	7817
0x0114	0x1E890000  	7817
0x0118	0x1E890000  	7817
0x011C	0x1E890000  	7817
0x0120	0x1E890000  	7817
0x0124	0x1E890000  	7817
0x0128	0x1E890000  	7817
0x012C	0x1E890000  	7817
0x0130	0x1E890000  	7817
0x0134	0x1E890000  	7817
0x0138	0x1E890000  	7817
0x013C	0x1E890000  	7817
0x0140	0x1E890000  	7817
0x0144	0x1E890000  	7817
0x0148	0x1E890000  	7817
0x014C	0x1E890000  	7817
0x0150	0x1E890000  	7817
0x0154	0x1E890000  	7817
0x0158	0x1E890000  	7817
0x015C	0x1E890000  	7817
0x0160	0x1E890000  	7817
0x0164	0x1E890000  	7817
0x0168	0x1E890000  	7817
0x016C	0x1E890000  	7817
0x0170	0x1E890000  	7817
0x0174	0x1E890000  	7817
0x0178	0x1E890000  	7817
0x017C	0x1E890000  	7817
0x0180	0x1E890000  	7817
0x0184	0x1E890000  	7817
; end of ____SysVT
_main:
;clicker_2_STM32.c, 308 :: 		void main() {
0x1EB4	0xF000F834  BL	7968
0x1EB8	0xF7FFFFD0  BL	7772
0x1EBC	0xF000FAFE  BL	9404
0x1EC0	0xF7FFFFE6  BL	7824
0x1EC4	0xF000FABA  BL	9276
;clicker_2_STM32.c, 310 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_12 | _GPIO_PINMASK_15);
0x1EC8	0xF2490100  MOVW	R1, #36864
0x1ECC	0x4811    LDR	R0, [PC, #68]
0x1ECE	0xF7FFFFB7  BL	_GPIO_Digital_Output+0
;clicker_2_STM32.c, 311 :: 		LD1 = 0;
0x1ED2	0x2100    MOVS	R1, #0
0x1ED4	0xB249    SXTB	R1, R1
0x1ED6	0x4810    LDR	R0, [PC, #64]
0x1ED8	0x6001    STR	R1, [R0, #0]
;clicker_2_STM32.c, 312 :: 		LD2 = 0;
0x1EDA	0x4810    LDR	R0, [PC, #64]
0x1EDC	0x6001    STR	R1, [R0, #0]
;clicker_2_STM32.c, 314 :: 		init_uart4();
0x1EDE	0xF7FFFDCB  BL	_init_uart4+0
;clicker_2_STM32.c, 315 :: 		init_i2c2();
0x1EE2	0xF7FFFF9D  BL	_init_i2c2+0
;clicker_2_STM32.c, 317 :: 		if (checkMPU6050() == 1) {
0x1EE6	0xF7FFFA63  BL	_checkMPU6050+0
0x1EEA	0x2801    CMP	R0, #1
0x1EEC	0xD100    BNE	L_main23
;clicker_2_STM32.c, 318 :: 		return;
0x1EEE	0xE00F    B	L_end_main
;clicker_2_STM32.c, 319 :: 		}
L_main23:
;clicker_2_STM32.c, 321 :: 		if (selfTestMPU6050() == 1) {
0x1EF0	0xF7FFFDE6  BL	_selfTestMPU6050+0
0x1EF4	0x2801    CMP	R0, #1
0x1EF6	0xD100    BNE	L_main24
;clicker_2_STM32.c, 322 :: 		return;
0x1EF8	0xE00A    B	L_end_main
;clicker_2_STM32.c, 323 :: 		}
L_main24:
;clicker_2_STM32.c, 325 :: 		calculateAccelAndGyroBiases();
0x1EFA	0xF7FFFB25  BL	_calculateAccelAndGyroBiases+0
;clicker_2_STM32.c, 327 :: 		initMPU6050();
0x1EFE	0xF7FFFA99  BL	_initMPU6050+0
;clicker_2_STM32.c, 329 :: 		LD1 = 1;
0x1F02	0x2101    MOVS	R1, #1
0x1F04	0xB249    SXTB	R1, R1
0x1F06	0x4804    LDR	R0, [PC, #16]
0x1F08	0x6001    STR	R1, [R0, #0]
;clicker_2_STM32.c, 330 :: 		LD2 = 1;
0x1F0A	0x4804    LDR	R0, [PC, #16]
0x1F0C	0x6001    STR	R1, [R0, #0]
;clicker_2_STM32.c, 331 :: 		while(1);
L_main25:
0x1F0E	0xE7FE    B	L_main25
;clicker_2_STM32.c, 332 :: 		}
L_end_main:
L__main_end_loop:
0x1F10	0xE7FE    B	L__main_end_loop
0x1F12	0xBF00    NOP
0x1F14	0x10004002  	GPIOE_BASE+0
0x1F18	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x1F1C	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
; end of _main
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1E40	0xB081    SUB	SP, SP, #4
0x1E42	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x1E46	0x4A04    LDR	R2, [PC, #16]
0x1E48	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1E4A	0xF7FFF92F  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x1E4E	0xF8DDE000  LDR	LR, [SP, #0]
0x1E52	0xB001    ADD	SP, SP, #4
0x1E54	0x4770    BX	LR
0x1E56	0xBF00    NOP
0x1E58	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x10AC	0xB084    SUB	SP, SP, #16
0x10AE	0xF8CDE000  STR	LR, [SP, #0]
0x10B2	0xB28D    UXTH	R5, R1
0x10B4	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x10B6	0x4B86    LDR	R3, [PC, #536]
0x10B8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x10BC	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x10BE	0x4618    MOV	R0, R3
0x10C0	0xF7FFFDBE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x10C4	0xF1B50FFF  CMP	R5, #255
0x10C8	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x10CA	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x10CC	0x4B81    LDR	R3, [PC, #516]
0x10CE	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x10D2	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x10D4	0x4B80    LDR	R3, [PC, #512]
0x10D6	0x429E    CMP	R6, R3
0x10D8	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x10DA	0xF2455355  MOVW	R3, #21845
0x10DE	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x10E2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x10E4	0x1D3D    ADDS	R5, R7, #4
0x10E6	0x682C    LDR	R4, [R5, #0]
0x10E8	0xF06F03FF  MVN	R3, #255
0x10EC	0xEA040303  AND	R3, R4, R3, LSL #0
0x10F0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x10F2	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x10F6	0x682C    LDR	R4, [R5, #0]
0x10F8	0xF64F73FF  MOVW	R3, #65535
0x10FC	0xEA440303  ORR	R3, R4, R3, LSL #0
0x1100	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x1102	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x1104	0x2E42    CMP	R6, #66
0x1106	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x1108	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x110A	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x110C	0xF64F73FF  MOVW	R3, #65535
0x1110	0x429D    CMP	R5, R3
0x1112	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x1114	0x4B70    LDR	R3, [PC, #448]
0x1116	0x429E    CMP	R6, R3
0x1118	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x111A	0xF04F3355  MOV	R3, #1431655765
0x111E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x1120	0x1D3C    ADDS	R4, R7, #4
0x1122	0x2300    MOVS	R3, #0
0x1124	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x1126	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x112A	0xF04F33FF  MOV	R3, #-1
0x112E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x1130	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x1132	0x2E42    CMP	R6, #66
0x1134	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x1136	0x2300    MOVS	R3, #0
0x1138	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x113A	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x113C	0xF0060301  AND	R3, R6, #1
0x1140	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x1142	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x1144	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x1146	0xF0060308  AND	R3, R6, #8
0x114A	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x114C	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x114E	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x1150	0xF0060304  AND	R3, R6, #4
0x1154	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x1156	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x1158	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x115A	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x115C	0xF4062301  AND	R3, R6, #528384
0x1160	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x1162	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x1164	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x1166	0xF4066300  AND	R3, R6, #2048
0x116A	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x116C	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x116E	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x1170	0xF4066380  AND	R3, R6, #1024
0x1174	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x1176	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x1178	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x117A	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x117C	0xF0060320  AND	R3, R6, #32
0x1180	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x1182	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x1184	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x1186	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x1188	0xF4067380  AND	R3, R6, #256
0x118C	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x118E	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x1190	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x1192	0xF0060380  AND	R3, R6, #128
0x1196	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x1198	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x119A	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x119C	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x119E	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x11A2	0x9201    STR	R2, [SP, #4]
0x11A4	0xFA1FF985  UXTH	R9, R5
0x11A8	0x46B0    MOV	R8, R6
0x11AA	0x4606    MOV	R6, R0
0x11AC	0x4618    MOV	R0, R3
0x11AE	0x460A    MOV	R2, R1
0x11B0	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x11B2	0xF1BA0F10  CMP	R10, #16
0x11B6	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x11BA	0xF04F0301  MOV	R3, #1
0x11BE	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x11C2	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x11C6	0x42A3    CMP	R3, R4
0x11C8	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x11CC	0xEA4F044A  LSL	R4, R10, #1
0x11D0	0xF04F0303  MOV	R3, #3
0x11D4	0x40A3    LSLS	R3, R4
0x11D6	0x43DC    MVN	R4, R3
0x11D8	0x683B    LDR	R3, [R7, #0]
0x11DA	0x4023    ANDS	R3, R4
0x11DC	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x11DE	0xEA4F034A  LSL	R3, R10, #1
0x11E2	0xFA06F403  LSL	R4, R6, R3
0x11E6	0x683B    LDR	R3, [R7, #0]
0x11E8	0x4323    ORRS	R3, R4
0x11EA	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x11EC	0xF008030C  AND	R3, R8, #12
0x11F0	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x11F2	0xF2070508  ADDW	R5, R7, #8
0x11F6	0xEA4F044A  LSL	R4, R10, #1
0x11FA	0xF04F0303  MOV	R3, #3
0x11FE	0x40A3    LSLS	R3, R4
0x1200	0x43DC    MVN	R4, R3
0x1202	0x682B    LDR	R3, [R5, #0]
0x1204	0x4023    ANDS	R3, R4
0x1206	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x1208	0xF2070508  ADDW	R5, R7, #8
0x120C	0xEA4F034A  LSL	R3, R10, #1
0x1210	0xFA02F403  LSL	R4, R2, R3
0x1214	0x682B    LDR	R3, [R5, #0]
0x1216	0x4323    ORRS	R3, R4
0x1218	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x121A	0x1D3D    ADDS	R5, R7, #4
0x121C	0xFA1FF48A  UXTH	R4, R10
0x1220	0xF04F0301  MOV	R3, #1
0x1224	0x40A3    LSLS	R3, R4
0x1226	0x43DC    MVN	R4, R3
0x1228	0x682B    LDR	R3, [R5, #0]
0x122A	0x4023    ANDS	R3, R4
0x122C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x122E	0x1D3D    ADDS	R5, R7, #4
0x1230	0xFA1FF48A  UXTH	R4, R10
0x1234	0xB28B    UXTH	R3, R1
0x1236	0xFA03F404  LSL	R4, R3, R4
0x123A	0xB2A4    UXTH	R4, R4
0x123C	0x682B    LDR	R3, [R5, #0]
0x123E	0x4323    ORRS	R3, R4
0x1240	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x1242	0xF207050C  ADDW	R5, R7, #12
0x1246	0xFA1FF38A  UXTH	R3, R10
0x124A	0x005C    LSLS	R4, R3, #1
0x124C	0xB2A4    UXTH	R4, R4
0x124E	0xF04F0303  MOV	R3, #3
0x1252	0x40A3    LSLS	R3, R4
0x1254	0x43DC    MVN	R4, R3
0x1256	0x682B    LDR	R3, [R5, #0]
0x1258	0x4023    ANDS	R3, R4
0x125A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x125C	0xF207050C  ADDW	R5, R7, #12
0x1260	0xEA4F034A  LSL	R3, R10, #1
0x1264	0xFA00F403  LSL	R4, R0, R3
0x1268	0x682B    LDR	R3, [R5, #0]
0x126A	0x4323    ORRS	R3, R4
0x126C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x126E	0xF0080308  AND	R3, R8, #8
0x1272	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x1274	0xF4080370  AND	R3, R8, #15728640
0x1278	0x0D1B    LSRS	R3, R3, #20
0x127A	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x127E	0xF1BA0F07  CMP	R10, #7
0x1282	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x1284	0xF2070324  ADDW	R3, R7, #36
0x1288	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x128A	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x128E	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x1290	0xF2070320  ADDW	R3, R7, #32
0x1294	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x1296	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x1298	0x00AC    LSLS	R4, R5, #2
0x129A	0xF04F030F  MOV	R3, #15
0x129E	0x40A3    LSLS	R3, R4
0x12A0	0x43DC    MVN	R4, R3
0x12A2	0x9B02    LDR	R3, [SP, #8]
0x12A4	0x681B    LDR	R3, [R3, #0]
0x12A6	0xEA030404  AND	R4, R3, R4, LSL #0
0x12AA	0x9B02    LDR	R3, [SP, #8]
0x12AC	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x12AE	0xF89D400C  LDRB	R4, [SP, #12]
0x12B2	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x12B4	0x409C    LSLS	R4, R3
0x12B6	0x9B02    LDR	R3, [SP, #8]
0x12B8	0x681B    LDR	R3, [R3, #0]
0x12BA	0xEA430404  ORR	R4, R3, R4, LSL #0
0x12BE	0x9B02    LDR	R3, [SP, #8]
0x12C0	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x12C2	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x12C6	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x12C8	0xF8DDE000  LDR	LR, [SP, #0]
0x12CC	0xB004    ADD	SP, SP, #16
0x12CE	0x4770    BX	LR
0x12D0	0xFC00FFFF  	#-1024
0x12D4	0x0000FFFF  	#-65536
0x12D8	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0C40	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x0C42	0x491E    LDR	R1, [PC, #120]
0x0C44	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0C48	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0C4A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0C4C	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0C4E	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0C50	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0C52	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x0C54	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0C56	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0C58	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0C5A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0C5C	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0C5E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0C60	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0C62	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0C64	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0C66	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0C68	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0C6A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0C6C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x0C6E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0C72	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0C74	0x4912    LDR	R1, [PC, #72]
0x0C76	0x4288    CMP	R0, R1
0x0C78	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x0C7A	0x4912    LDR	R1, [PC, #72]
0x0C7C	0x4288    CMP	R0, R1
0x0C7E	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x0C80	0x4911    LDR	R1, [PC, #68]
0x0C82	0x4288    CMP	R0, R1
0x0C84	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x0C86	0x4911    LDR	R1, [PC, #68]
0x0C88	0x4288    CMP	R0, R1
0x0C8A	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x0C8C	0x4910    LDR	R1, [PC, #64]
0x0C8E	0x4288    CMP	R0, R1
0x0C90	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x0C92	0x4910    LDR	R1, [PC, #64]
0x0C94	0x4288    CMP	R0, R1
0x0C96	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x0C98	0x490F    LDR	R1, [PC, #60]
0x0C9A	0x4288    CMP	R0, R1
0x0C9C	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x0C9E	0x490F    LDR	R1, [PC, #60]
0x0CA0	0x4288    CMP	R0, R1
0x0CA2	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x0CA4	0x490E    LDR	R1, [PC, #56]
0x0CA6	0x4288    CMP	R0, R1
0x0CA8	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0CAA	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x0CAC	0x490D    LDR	R1, [PC, #52]
0x0CAE	0x6809    LDR	R1, [R1, #0]
0x0CB0	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0CB4	0x490B    LDR	R1, [PC, #44]
0x0CB6	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0CB8	0xB001    ADD	SP, SP, #4
0x0CBA	0x4770    BX	LR
0x0CBC	0xFC00FFFF  	#-1024
0x0CC0	0x00004002  	#1073872896
0x0CC4	0x04004002  	#1073873920
0x0CC8	0x08004002  	#1073874944
0x0CCC	0x0C004002  	#1073875968
0x0CD0	0x10004002  	#1073876992
0x0CD4	0x14004002  	#1073878016
0x0CD8	0x18004002  	#1073879040
0x0CDC	0x1C004002  	#1073880064
0x0CE0	0x20004002  	#1073881088
0x0CE4	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_init_uart4:
;clicker_2_STM32.c, 56 :: 		void init_uart4() {
0x1A78	0xB081    SUB	SP, SP, #4
0x1A7A	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 57 :: 		UART4_Init_Advanced(9600, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_UART4_PA01);
0x1A7E	0x480E    LDR	R0, [PC, #56]
0x1A80	0xB401    PUSH	(R0)
0x1A82	0xF2400300  MOVW	R3, #0
0x1A86	0xF2400200  MOVW	R2, #0
0x1A8A	0xF2400100  MOVW	R1, #0
0x1A8E	0xF2425080  MOVW	R0, #9600
0x1A92	0xF7FFFC41  BL	_UART4_Init_Advanced+0
0x1A96	0xB001    ADD	SP, SP, #4
;clicker_2_STM32.c, 58 :: 		Delay_ms(200);
0x1A98	0xF24117FE  MOVW	R7, #4606
0x1A9C	0xF2C0077A  MOVT	R7, #122
L_init_uart40:
0x1AA0	0x1E7F    SUBS	R7, R7, #1
0x1AA2	0xD1FD    BNE	L_init_uart40
0x1AA4	0xBF00    NOP
0x1AA6	0xBF00    NOP
0x1AA8	0xBF00    NOP
0x1AAA	0xBF00    NOP
0x1AAC	0xBF00    NOP
;clicker_2_STM32.c, 59 :: 		}
L_end_init_uart4:
0x1AAE	0xF8DDE000  LDR	LR, [SP, #0]
0x1AB2	0xB001    ADD	SP, SP, #4
0x1AB4	0x4770    BX	LR
0x1AB6	0xBF00    NOP
0x1AB8	0x22800000  	__GPIO_MODULE_UART4_PA01+0
; end of _init_uart4
_UART4_Init_Advanced:
;__Lib_UART_123_45_6.c, 422 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1318	0xB081    SUB	SP, SP, #4
0x131A	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x131E	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 424 :: 		
0x1320	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1322	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1324	0xB408    PUSH	(R3)
0x1326	0xB293    UXTH	R3, R2
0x1328	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x132A	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x132C	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x132E	0xF7FFFAD9  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x1332	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 425 :: 		
L_end_UART4_Init_Advanced:
0x1334	0xF8DDE000  LDR	LR, [SP, #0]
0x1338	0xB001    ADD	SP, SP, #4
0x133A	0x4770    BX	LR
0x133C	0x4C004000  	UART4_SR+0
; end of _UART4_Init_Advanced
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x08E4	0xB08B    SUB	SP, SP, #44
0x08E6	0xF8CDE000  STR	LR, [SP, #0]
0x08EA	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x08EC	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x08F0	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x08F2	0xAC06    ADD	R4, SP, #24
0x08F4	0xF8AD3004  STRH	R3, [SP, #4]
0x08F8	0xF8AD2008  STRH	R2, [SP, #8]
0x08FC	0x9103    STR	R1, [SP, #12]
0x08FE	0x9004    STR	R0, [SP, #16]
0x0900	0x4620    MOV	R0, R4
0x0902	0xF7FFFF9B  BL	_RCC_GetClocksFrequency+0
0x0906	0x9804    LDR	R0, [SP, #16]
0x0908	0x9903    LDR	R1, [SP, #12]
0x090A	0xF8BD2008  LDRH	R2, [SP, #8]
0x090E	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x0912	0x4C71    LDR	R4, [PC, #452]
0x0914	0x42A0    CMP	R0, R4
0x0916	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x0918	0x2501    MOVS	R5, #1
0x091A	0xB26D    SXTB	R5, R5
0x091C	0x4C6F    LDR	R4, [PC, #444]
0x091E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x0920	0x4D6F    LDR	R5, [PC, #444]
0x0922	0x4C70    LDR	R4, [PC, #448]
0x0924	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x0926	0x4D70    LDR	R5, [PC, #448]
0x0928	0x4C70    LDR	R4, [PC, #448]
0x092A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x092C	0x4D70    LDR	R5, [PC, #448]
0x092E	0x4C71    LDR	R4, [PC, #452]
0x0930	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x0932	0x4D71    LDR	R5, [PC, #452]
0x0934	0x4C71    LDR	R4, [PC, #452]
0x0936	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x0938	0x9C09    LDR	R4, [SP, #36]
0x093A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x093C	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x093E	0x4C70    LDR	R4, [PC, #448]
0x0940	0x42A0    CMP	R0, R4
0x0942	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x0944	0x2501    MOVS	R5, #1
0x0946	0xB26D    SXTB	R5, R5
0x0948	0x4C6E    LDR	R4, [PC, #440]
0x094A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x094C	0x4D6E    LDR	R5, [PC, #440]
0x094E	0x4C65    LDR	R4, [PC, #404]
0x0950	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x0952	0x4D6E    LDR	R5, [PC, #440]
0x0954	0x4C65    LDR	R4, [PC, #404]
0x0956	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x0958	0x4D6D    LDR	R5, [PC, #436]
0x095A	0x4C66    LDR	R4, [PC, #408]
0x095C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x095E	0x4D6D    LDR	R5, [PC, #436]
0x0960	0x4C66    LDR	R4, [PC, #408]
0x0962	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x0964	0x9C08    LDR	R4, [SP, #32]
0x0966	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x0968	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x096A	0x4C6B    LDR	R4, [PC, #428]
0x096C	0x42A0    CMP	R0, R4
0x096E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x0970	0x2501    MOVS	R5, #1
0x0972	0xB26D    SXTB	R5, R5
0x0974	0x4C69    LDR	R4, [PC, #420]
0x0976	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x0978	0x4D69    LDR	R5, [PC, #420]
0x097A	0x4C5A    LDR	R4, [PC, #360]
0x097C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x097E	0x4D69    LDR	R5, [PC, #420]
0x0980	0x4C5A    LDR	R4, [PC, #360]
0x0982	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x0984	0x4D68    LDR	R5, [PC, #416]
0x0986	0x4C5B    LDR	R4, [PC, #364]
0x0988	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x098A	0x4D68    LDR	R5, [PC, #416]
0x098C	0x4C5B    LDR	R4, [PC, #364]
0x098E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x0990	0x9C08    LDR	R4, [SP, #32]
0x0992	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x0994	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x0996	0x4C66    LDR	R4, [PC, #408]
0x0998	0x42A0    CMP	R0, R4
0x099A	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x099C	0x2501    MOVS	R5, #1
0x099E	0xB26D    SXTB	R5, R5
0x09A0	0x4C64    LDR	R4, [PC, #400]
0x09A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x09A4	0x4D64    LDR	R5, [PC, #400]
0x09A6	0x4C4F    LDR	R4, [PC, #316]
0x09A8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x09AA	0x4D64    LDR	R5, [PC, #400]
0x09AC	0x4C4F    LDR	R4, [PC, #316]
0x09AE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x09B0	0x4D63    LDR	R5, [PC, #396]
0x09B2	0x4C50    LDR	R4, [PC, #320]
0x09B4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x09B6	0x4D63    LDR	R5, [PC, #396]
0x09B8	0x4C50    LDR	R4, [PC, #320]
0x09BA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x09BC	0x9C08    LDR	R4, [SP, #32]
0x09BE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x09C0	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x09C2	0x4C61    LDR	R4, [PC, #388]
0x09C4	0x42A0    CMP	R0, R4
0x09C6	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x09C8	0x2501    MOVS	R5, #1
0x09CA	0xB26D    SXTB	R5, R5
0x09CC	0x4C5F    LDR	R4, [PC, #380]
0x09CE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x09D0	0x4D5F    LDR	R5, [PC, #380]
0x09D2	0x4C44    LDR	R4, [PC, #272]
0x09D4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x09D6	0x4D5F    LDR	R5, [PC, #380]
0x09D8	0x4C44    LDR	R4, [PC, #272]
0x09DA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x09DC	0x4D5E    LDR	R5, [PC, #376]
0x09DE	0x4C45    LDR	R4, [PC, #276]
0x09E0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x09E2	0x4D5E    LDR	R5, [PC, #376]
0x09E4	0x4C45    LDR	R4, [PC, #276]
0x09E6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x09E8	0x9C08    LDR	R4, [SP, #32]
0x09EA	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x09EC	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x09EE	0x4C5C    LDR	R4, [PC, #368]
0x09F0	0x42A0    CMP	R0, R4
0x09F2	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x09F4	0x2501    MOVS	R5, #1
0x09F6	0xB26D    SXTB	R5, R5
0x09F8	0x4C5A    LDR	R4, [PC, #360]
0x09FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x09FC	0x4D5A    LDR	R5, [PC, #360]
0x09FE	0x4C39    LDR	R4, [PC, #228]
0x0A00	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x0A02	0x4D5A    LDR	R5, [PC, #360]
0x0A04	0x4C39    LDR	R4, [PC, #228]
0x0A06	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x0A08	0x4D59    LDR	R5, [PC, #356]
0x0A0A	0x4C3A    LDR	R4, [PC, #232]
0x0A0C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x0A0E	0x4D59    LDR	R5, [PC, #356]
0x0A10	0x4C3A    LDR	R4, [PC, #232]
0x0A12	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x0A14	0x9C09    LDR	R4, [SP, #36]
0x0A16	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x0A18	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x0A1C	0xF8AD2008  STRH	R2, [SP, #8]
0x0A20	0x9103    STR	R1, [SP, #12]
0x0A22	0x9004    STR	R0, [SP, #16]
0x0A24	0x4630    MOV	R0, R6
0x0A26	0xF7FFFEE5  BL	_GPIO_Alternate_Function_Enable+0
0x0A2A	0x9804    LDR	R0, [SP, #16]
0x0A2C	0x9903    LDR	R1, [SP, #12]
0x0A2E	0xF8BD2008  LDRH	R2, [SP, #8]
0x0A32	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x0A36	0xF2000510  ADDW	R5, R0, #16
0x0A3A	0x2400    MOVS	R4, #0
0x0A3C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x0A3E	0xF2000510  ADDW	R5, R0, #16
0x0A42	0x682C    LDR	R4, [R5, #0]
0x0A44	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x0A46	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x0A48	0xF200050C  ADDW	R5, R0, #12
0x0A4C	0x2400    MOVS	R4, #0
0x0A4E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x0A50	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x0A52	0xF4426280  ORR	R2, R2, #1024
0x0A56	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x0A58	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x0A5A	0xF200050C  ADDW	R5, R0, #12
0x0A5E	0x682C    LDR	R4, [R5, #0]
0x0A60	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x0A62	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x0A64	0xF200060C  ADDW	R6, R0, #12
0x0A68	0x2501    MOVS	R5, #1
0x0A6A	0x6834    LDR	R4, [R6, #0]
0x0A6C	0xF365344D  BFI	R4, R5, #13, #1
0x0A70	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x0A72	0xF200060C  ADDW	R6, R0, #12
0x0A76	0x2501    MOVS	R5, #1
0x0A78	0x6834    LDR	R4, [R6, #0]
0x0A7A	0xF36504C3  BFI	R4, R5, #3, #1
0x0A7E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x0A80	0xF200060C  ADDW	R6, R0, #12
0x0A84	0x2501    MOVS	R5, #1
0x0A86	0x6834    LDR	R4, [R6, #0]
0x0A88	0xF3650482  BFI	R4, R5, #2, #1
0x0A8C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x0A8E	0xF2000514  ADDW	R5, R0, #20
0x0A92	0x2400    MOVS	R4, #0
0x0A94	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x0A96	0x9D05    LDR	R5, [SP, #20]
0x0A98	0x2419    MOVS	R4, #25
0x0A9A	0x4365    MULS	R5, R4, R5
0x0A9C	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x0A9E	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x0AA2	0x2464    MOVS	R4, #100
0x0AA4	0xFBB7F4F4  UDIV	R4, R7, R4
0x0AA8	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x0AAA	0x0935    LSRS	R5, R6, #4
0x0AAC	0x2464    MOVS	R4, #100
0x0AAE	0x436C    MULS	R4, R5, R4
0x0AB0	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x0AB2	0x0124    LSLS	R4, R4, #4
0x0AB4	0xF2040532  ADDW	R5, R4, #50
0x0AB8	0x2464    MOVS	R4, #100
0x0ABA	0xFBB5F4F4  UDIV	R4, R5, R4
0x0ABE	0xF004040F  AND	R4, R4, #15
0x0AC2	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x0AC6	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x0ACA	0xB2A4    UXTH	R4, R4
0x0ACC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x0ACE	0xF8DDE000  LDR	LR, [SP, #0]
0x0AD2	0xB00B    ADD	SP, SP, #44
0x0AD4	0x4770    BX	LR
0x0AD6	0xBF00    NOP
0x0AD8	0x10004001  	USART1_SR+0
0x0ADC	0x08904247  	RCC_APB2ENR+0
0x0AE0	0xFFFFFFFF  	_UART1_Write+0
0x0AE4	0x00882000  	_UART_Wr_Ptr+0
0x0AE8	0xFFFFFFFF  	_UART1_Read+0
0x0AEC	0x008C2000  	_UART_Rd_Ptr+0
0x0AF0	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0AF4	0x00902000  	_UART_Rdy_Ptr+0
0x0AF8	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0AFC	0x00942000  	_UART_Tx_Idle_Ptr+0
0x0B00	0x44004000  	USART2_SR+0
0x0B04	0x08444247  	RCC_APB1ENR+0
0x0B08	0xFFFFFFFF  	_UART2_Write+0
0x0B0C	0xFFFFFFFF  	_UART2_Read+0
0x0B10	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0B14	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0B18	0x48004000  	USART3_SR+0
0x0B1C	0x08484247  	RCC_APB1ENR+0
0x0B20	0xFFFFFFFF  	_UART3_Write+0
0x0B24	0xFFFFFFFF  	_UART3_Read+0
0x0B28	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0B2C	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0B30	0x4C004000  	UART4_SR+0
0x0B34	0x084C4247  	RCC_APB1ENR+0
0x0B38	0xFFFFFFFF  	_UART4_Write+0
0x0B3C	0xFFFFFFFF  	_UART4_Read+0
0x0B40	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0B44	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0B48	0x50004000  	UART5_SR+0
0x0B4C	0x08504247  	RCC_APB1ENR+0
0x0B50	0xFFFFFFFF  	_UART5_Write+0
0x0B54	0xFFFFFFFF  	_UART5_Read+0
0x0B58	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0B5C	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x0B60	0x14004001  	USART6_SR+0
0x0B64	0x08944247  	RCC_APB2ENR+0
0x0B68	0xFFFFFFFF  	_UART6_Write+0
0x0B6C	0xFFFFFFFF  	_UART6_Read+0
0x0B70	0xFFFFFFFF  	_UART6_Data_Ready+0
0x0B74	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x083C	0xB082    SUB	SP, SP, #8
0x083E	0xF8CDE000  STR	LR, [SP, #0]
0x0842	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x0844	0x4619    MOV	R1, R3
0x0846	0x9101    STR	R1, [SP, #4]
0x0848	0xF7FFFCCA  BL	_Get_Fosc_kHz+0
0x084C	0xF24031E8  MOVW	R1, #1000
0x0850	0xFB00F201  MUL	R2, R0, R1
0x0854	0x9901    LDR	R1, [SP, #4]
0x0856	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x0858	0x4917    LDR	R1, [PC, #92]
0x085A	0x6809    LDR	R1, [R1, #0]
0x085C	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x0860	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x0862	0x4916    LDR	R1, [PC, #88]
0x0864	0x1889    ADDS	R1, R1, R2
0x0866	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0868	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x086A	0x1D1A    ADDS	R2, R3, #4
0x086C	0x6819    LDR	R1, [R3, #0]
0x086E	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0870	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x0872	0x4911    LDR	R1, [PC, #68]
0x0874	0x6809    LDR	R1, [R1, #0]
0x0876	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x087A	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x087C	0x490F    LDR	R1, [PC, #60]
0x087E	0x1889    ADDS	R1, R1, R2
0x0880	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0882	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x0884	0xF2030208  ADDW	R2, R3, #8
0x0888	0x1D19    ADDS	R1, R3, #4
0x088A	0x6809    LDR	R1, [R1, #0]
0x088C	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x088E	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x0890	0x4909    LDR	R1, [PC, #36]
0x0892	0x6809    LDR	R1, [R1, #0]
0x0894	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x0898	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x089A	0x4908    LDR	R1, [PC, #32]
0x089C	0x1889    ADDS	R1, R1, R2
0x089E	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x08A0	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x08A2	0xF203020C  ADDW	R2, R3, #12
0x08A6	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x08A8	0x6809    LDR	R1, [R1, #0]
0x08AA	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08AC	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x08AE	0xF8DDE000  LDR	LR, [SP, #0]
0x08B2	0xB002    ADD	SP, SP, #8
0x08B4	0x4770    BX	LR
0x08B6	0xBF00    NOP
0x08B8	0x38084002  	RCC_CFGR+0
0x08BC	0x004C2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x01E0	0x4801    LDR	R0, [PC, #4]
0x01E2	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x01E4	0x4770    BX	LR
0x01E6	0xBF00    NOP
0x01E8	0x00742000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x07F4	0xB083    SUB	SP, SP, #12
0x07F6	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x07FA	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x07FC	0x00A1    LSLS	R1, R4, #2
0x07FE	0x1841    ADDS	R1, R0, R1
0x0800	0x6809    LDR	R1, [R1, #0]
0x0802	0xF1B13FFF  CMP	R1, #-1
0x0806	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0808	0xF2000134  ADDW	R1, R0, #52
0x080C	0x00A3    LSLS	R3, R4, #2
0x080E	0x18C9    ADDS	R1, R1, R3
0x0810	0x6809    LDR	R1, [R1, #0]
0x0812	0x460A    MOV	R2, R1
0x0814	0x18C1    ADDS	R1, R0, R3
0x0816	0x6809    LDR	R1, [R1, #0]
0x0818	0x9001    STR	R0, [SP, #4]
0x081A	0xF8AD4008  STRH	R4, [SP, #8]
0x081E	0x4608    MOV	R0, R1
0x0820	0x4611    MOV	R1, R2
0x0822	0xF7FFFCF1  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x0826	0xF8BD4008  LDRH	R4, [SP, #8]
0x082A	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x082C	0x1C64    ADDS	R4, R4, #1
0x082E	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0830	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0832	0xF8DDE000  LDR	LR, [SP, #0]
0x0836	0xB003    ADD	SP, SP, #12
0x0838	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0208	0xB083    SUB	SP, SP, #12
0x020A	0xF8CDE000  STR	LR, [SP, #0]
0x020E	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x0210	0xF00403FF  AND	R3, R4, #255
0x0214	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0216	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x0218	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x021C	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x021E	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x0220	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0224	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x0226	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0228	0x4A2D    LDR	R2, [PC, #180]
0x022A	0x9202    STR	R2, [SP, #8]
0x022C	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x022E	0x4A2D    LDR	R2, [PC, #180]
0x0230	0x9202    STR	R2, [SP, #8]
0x0232	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x0234	0x4A2C    LDR	R2, [PC, #176]
0x0236	0x9202    STR	R2, [SP, #8]
0x0238	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x023A	0x4A2C    LDR	R2, [PC, #176]
0x023C	0x9202    STR	R2, [SP, #8]
0x023E	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x0240	0x4A2B    LDR	R2, [PC, #172]
0x0242	0x9202    STR	R2, [SP, #8]
0x0244	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x0246	0x4A2B    LDR	R2, [PC, #172]
0x0248	0x9202    STR	R2, [SP, #8]
0x024A	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x024C	0x4A2A    LDR	R2, [PC, #168]
0x024E	0x9202    STR	R2, [SP, #8]
0x0250	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x0252	0x4A2A    LDR	R2, [PC, #168]
0x0254	0x9202    STR	R2, [SP, #8]
0x0256	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x0258	0x4A29    LDR	R2, [PC, #164]
0x025A	0x9202    STR	R2, [SP, #8]
0x025C	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x025E	0x2800    CMP	R0, #0
0x0260	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x0262	0x2801    CMP	R0, #1
0x0264	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x0266	0x2802    CMP	R0, #2
0x0268	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x026A	0x2803    CMP	R0, #3
0x026C	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x026E	0x2804    CMP	R0, #4
0x0270	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x0272	0x2805    CMP	R0, #5
0x0274	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0276	0x2806    CMP	R0, #6
0x0278	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x027A	0x2807    CMP	R0, #7
0x027C	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x027E	0x2808    CMP	R0, #8
0x0280	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x0282	0x2201    MOVS	R2, #1
0x0284	0xB212    SXTH	R2, R2
0x0286	0xFA02F20C  LSL	R2, R2, R12
0x028A	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x028E	0x9802    LDR	R0, [SP, #8]
0x0290	0x460A    MOV	R2, R1
0x0292	0xF8BD1004  LDRH	R1, [SP, #4]
0x0296	0xF000FF09  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x029A	0x9A02    LDR	R2, [SP, #8]
0x029C	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x02A0	0xF1BC0F07  CMP	R12, #7
0x02A4	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x02A6	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x02A8	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x02AA	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x02AE	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x02B0	0x9101    STR	R1, [SP, #4]
0x02B2	0x4601    MOV	R1, R0
0x02B4	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x02B6	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x02B8	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x02BA	0x0083    LSLS	R3, R0, #2
0x02BC	0xF04F020F  MOV	R2, #15
0x02C0	0x409A    LSLS	R2, R3
0x02C2	0x43D3    MVN	R3, R2
0x02C4	0x680A    LDR	R2, [R1, #0]
0x02C6	0x401A    ANDS	R2, R3
0x02C8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x02CA	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x02CC	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x02D0	0x680A    LDR	R2, [R1, #0]
0x02D2	0x431A    ORRS	R2, R3
0x02D4	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x02D6	0xF8DDE000  LDR	LR, [SP, #0]
0x02DA	0xB003    ADD	SP, SP, #12
0x02DC	0x4770    BX	LR
0x02DE	0xBF00    NOP
0x02E0	0x00004002  	#1073872896
0x02E4	0x04004002  	#1073873920
0x02E8	0x08004002  	#1073874944
0x02EC	0x0C004002  	#1073875968
0x02F0	0x10004002  	#1073876992
0x02F4	0x14004002  	#1073878016
0x02F8	0x18004002  	#1073879040
0x02FC	0x1C004002  	#1073880064
0x0300	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_init_i2c2:
;clicker_2_STM32.c, 62 :: 		void init_i2c2() {
0x1E20	0xB081    SUB	SP, SP, #4
0x1E22	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 63 :: 		I2C2_Init_Advanced(100000, &_GPIO_MODULE_I2C2_PB10_11);
0x1E26	0x4904    LDR	R1, [PC, #16]
0x1E28	0x4804    LDR	R0, [PC, #16]
0x1E2A	0xF7FFFA89  BL	_I2C2_Init_Advanced+0
;clicker_2_STM32.c, 64 :: 		}
L_end_init_i2c2:
0x1E2E	0xF8DDE000  LDR	LR, [SP, #0]
0x1E32	0xB001    ADD	SP, SP, #4
0x1E34	0x4770    BX	LR
0x1E36	0xBF00    NOP
0x1E38	0x22EC0000  	__GPIO_MODULE_I2C2_PB10_11+0
0x1E3C	0x86A00001  	#100000
; end of _init_i2c2
_I2C2_Init_Advanced:
;__Lib_I2C_123.c, 338 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x1340	0xB081    SUB	SP, SP, #4
0x1342	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 339 :: 		
0x1346	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1348	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x134A	0x4803    LDR	R0, [PC, #12]
0x134C	0xF7FFFD44  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 340 :: 		
L_end_I2C2_Init_Advanced:
0x1350	0xF8DDE000  LDR	LR, [SP, #0]
0x1354	0xB001    ADD	SP, SP, #4
0x1356	0x4770    BX	LR
0x1358	0x58004000  	I2C2_CR1+0
; end of _I2C2_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_123.c, 388 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0DD8	0xB088    SUB	SP, SP, #32
0x0DDA	0xF8CDE000  STR	LR, [SP, #0]
0x0DDE	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_123.c, 390 :: 		
;__Lib_I2C_123.c, 397 :: 		
0x0DE0	0x4B5E    LDR	R3, [PC, #376]
0x0DE2	0x4298    CMP	R0, R3
0x0DE4	0xD10D    BNE	L_I2Cx_Init_Advanced61
;__Lib_I2C_123.c, 398 :: 		
0x0DE6	0x2401    MOVS	R4, #1
0x0DE8	0xB264    SXTB	R4, R4
0x0DEA	0x4B5D    LDR	R3, [PC, #372]
0x0DEC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 399 :: 		
0x0DEE	0x4C5D    LDR	R4, [PC, #372]
0x0DF0	0x4B5D    LDR	R3, [PC, #372]
0x0DF2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 400 :: 		
0x0DF4	0x4C5D    LDR	R4, [PC, #372]
0x0DF6	0x4B5E    LDR	R3, [PC, #376]
0x0DF8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 401 :: 		
0x0DFA	0x4C5E    LDR	R4, [PC, #376]
0x0DFC	0x4B5E    LDR	R3, [PC, #376]
0x0DFE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 402 :: 		
0x0E00	0xE020    B	L_I2Cx_Init_Advanced62
L_I2Cx_Init_Advanced61:
;__Lib_I2C_123.c, 403 :: 		
0x0E02	0x4B5E    LDR	R3, [PC, #376]
0x0E04	0x4298    CMP	R0, R3
0x0E06	0xD10D    BNE	L_I2Cx_Init_Advanced63
;__Lib_I2C_123.c, 404 :: 		
0x0E08	0x2401    MOVS	R4, #1
0x0E0A	0xB264    SXTB	R4, R4
0x0E0C	0x4B5C    LDR	R3, [PC, #368]
0x0E0E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 405 :: 		
0x0E10	0x4C5C    LDR	R4, [PC, #368]
0x0E12	0x4B55    LDR	R3, [PC, #340]
0x0E14	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 406 :: 		
0x0E16	0x4C5C    LDR	R4, [PC, #368]
0x0E18	0x4B55    LDR	R3, [PC, #340]
0x0E1A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 407 :: 		
0x0E1C	0x4C5B    LDR	R4, [PC, #364]
0x0E1E	0x4B56    LDR	R3, [PC, #344]
0x0E20	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 408 :: 		
0x0E22	0xE00F    B	L_I2Cx_Init_Advanced64
L_I2Cx_Init_Advanced63:
0x0E24	0x4B5A    LDR	R3, [PC, #360]
0x0E26	0x4298    CMP	R0, R3
0x0E28	0xD10C    BNE	L_I2Cx_Init_Advanced65
;__Lib_I2C_123.c, 409 :: 		
0x0E2A	0x2401    MOVS	R4, #1
0x0E2C	0xB264    SXTB	R4, R4
0x0E2E	0x4B59    LDR	R3, [PC, #356]
0x0E30	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 410 :: 		
0x0E32	0x4C59    LDR	R4, [PC, #356]
0x0E34	0x4B4C    LDR	R3, [PC, #304]
0x0E36	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 411 :: 		
0x0E38	0x4C58    LDR	R4, [PC, #352]
0x0E3A	0x4B4D    LDR	R3, [PC, #308]
0x0E3C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 412 :: 		
0x0E3E	0x4C58    LDR	R4, [PC, #352]
0x0E40	0x4B4D    LDR	R3, [PC, #308]
0x0E42	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 413 :: 		
L_I2Cx_Init_Advanced65:
L_I2Cx_Init_Advanced64:
L_I2Cx_Init_Advanced62:
;__Lib_I2C_123.c, 414 :: 		
0x0E44	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0E46	0x9002    STR	R0, [SP, #8]
0x0E48	0x4610    MOV	R0, R2
0x0E4A	0xF7FFFCD3  BL	_GPIO_Alternate_Function_Enable+0
0x0E4E	0x9802    LDR	R0, [SP, #8]
0x0E50	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 419 :: 		
0x0E52	0x1D03    ADDS	R3, R0, #4
0x0E54	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_123.c, 421 :: 		
0x0E56	0xB29C    UXTH	R4, R3
0x0E58	0xF06F033F  MVN	R3, #63
0x0E5C	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0E60	0xB29D    UXTH	R5, R3
;__Lib_I2C_123.c, 423 :: 		
0x0E62	0xAB03    ADD	R3, SP, #12
0x0E64	0x9001    STR	R0, [SP, #4]
0x0E66	0x4618    MOV	R0, R3
0x0E68	0xF7FFFCE8  BL	_RCC_GetClocksFrequency+0
0x0E6C	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_123.c, 424 :: 		
; pclk1 start address is: 28 (R7)
0x0E6E	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_123.c, 426 :: 		
0x0E70	0x9C05    LDR	R4, [SP, #20]
0x0E72	0x4B4C    LDR	R3, [PC, #304]
0x0E74	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0E78	0xB299    UXTH	R1, R3
;__Lib_I2C_123.c, 427 :: 		
0x0E7A	0xB29B    UXTH	R3, R3
0x0E7C	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0E80	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_123.c, 429 :: 		
0x0E82	0x1D03    ADDS	R3, R0, #4
0x0E84	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 433 :: 		
0x0E86	0x2400    MOVS	R4, #0
0x0E88	0x6803    LDR	R3, [R0, #0]
0x0E8A	0xF3640300  BFI	R3, R4, #0, #1
0x0E8E	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 436 :: 		
; tmpreg start address is: 8 (R2)
0x0E90	0x2200    MOVS	R2, #0
;__Lib_I2C_123.c, 439 :: 		
0x0E92	0x4B45    LDR	R3, [PC, #276]
0x0E94	0x429E    CMP	R6, R3
0x0E96	0xD812    BHI	L_I2Cx_Init_Advanced66
;__Lib_I2C_123.c, 442 :: 		
0x0E98	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0E9A	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0E9E	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 444 :: 		
0x0EA0	0x2C04    CMP	R4, #4
0x0EA2	0xD202    BCS	L__I2Cx_Init_Advanced72
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 447 :: 		
; result start address is: 12 (R3)
0x0EA4	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0EA6	0x461C    MOV	R4, R3
;__Lib_I2C_123.c, 448 :: 		
0x0EA8	0xE7FF    B	L_I2Cx_Init_Advanced67
L__I2Cx_Init_Advanced72:
;__Lib_I2C_123.c, 444 :: 		
;__Lib_I2C_123.c, 448 :: 		
L_I2Cx_Init_Advanced67:
;__Lib_I2C_123.c, 450 :: 		
; result start address is: 16 (R4)
0x0EAA	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x0EAE	0xB29A    UXTH	R2, R3
;__Lib_I2C_123.c, 452 :: 		
0x0EB0	0xF2000420  ADDW	R4, R0, #32
0x0EB4	0x1C4B    ADDS	R3, R1, #1
0x0EB6	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x0EB8	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_123.c, 453 :: 		
0x0EBA	0xB291    UXTH	R1, R2
0x0EBC	0xE03F    B	L_I2Cx_Init_Advanced68
L_I2Cx_Init_Advanced66:
;__Lib_I2C_123.c, 458 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0EBE	0x2303    MOVS	R3, #3
0x0EC0	0xFB06F403  MUL	R4, R6, R3
0x0EC4	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x0EC8	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_123.c, 461 :: 		
0x0ECC	0x2319    MOVS	R3, #25
0x0ECE	0xFB06F503  MUL	R5, R6, R3
0x0ED2	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x0ED6	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_123.c, 463 :: 		
0x0EDA	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_123.c, 465 :: 		
0x0EDE	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_123.c, 467 :: 		
0x0EE2	0x1B3C    SUB	R4, R7, R4
0x0EE4	0x1AFB    SUB	R3, R7, R3
0x0EE6	0x429C    CMP	R4, R3
0x0EE8	0xD205    BCS	L_I2Cx_Init_Advanced69
;__Lib_I2C_123.c, 468 :: 		
0x0EEA	0x2303    MOVS	R3, #3
0x0EEC	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0EEE	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0EF2	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 469 :: 		
; result end address is: 16 (R4)
0x0EF4	0xE006    B	L_I2Cx_Init_Advanced70
L_I2Cx_Init_Advanced69:
;__Lib_I2C_123.c, 471 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0EF6	0x2319    MOVS	R3, #25
0x0EF8	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0EFA	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0EFE	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 472 :: 		
0x0F00	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 473 :: 		
L_I2Cx_Init_Advanced70:
;__Lib_I2C_123.c, 476 :: 		
; result start address is: 16 (R4)
0x0F04	0xF64073FF  MOVW	R3, #4095
0x0F08	0xEA040303  AND	R3, R4, R3, LSL #0
0x0F0C	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced73
;__Lib_I2C_123.c, 479 :: 		
0x0F0E	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 480 :: 		
0x0F12	0xE7FF    B	L_I2Cx_Init_Advanced71
L__I2Cx_Init_Advanced73:
;__Lib_I2C_123.c, 476 :: 		
;__Lib_I2C_123.c, 480 :: 		
L_I2Cx_Init_Advanced71:
;__Lib_I2C_123.c, 482 :: 		
; result start address is: 16 (R4)
0x0F14	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x0F18	0xB29B    UXTH	R3, R3
0x0F1A	0x431A    ORRS	R2, R3
0x0F1C	0xB292    UXTH	R2, R2
;__Lib_I2C_123.c, 484 :: 		
0x0F1E	0xF2000520  ADDW	R5, R0, #32
0x0F22	0xF240132C  MOVW	R3, #300
0x0F26	0xFB01F403  MUL	R4, R1, R3
0x0F2A	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x0F2C	0xF24033E8  MOVW	R3, #1000
0x0F30	0xFBB4F3F3  UDIV	R3, R4, R3
0x0F34	0xB29B    UXTH	R3, R3
0x0F36	0x1C5B    ADDS	R3, R3, #1
0x0F38	0xB29B    UXTH	R3, R3
0x0F3A	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x0F3C	0xB291    UXTH	R1, R2
;__Lib_I2C_123.c, 485 :: 		
L_I2Cx_Init_Advanced68:
;__Lib_I2C_123.c, 487 :: 		
; tmpreg start address is: 4 (R1)
0x0F3E	0xF200031C  ADDW	R3, R0, #28
0x0F42	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_123.c, 489 :: 		
0x0F44	0x2300    MOVS	R3, #0
0x0F46	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 490 :: 		
0x0F48	0x2401    MOVS	R4, #1
0x0F4A	0x6803    LDR	R3, [R0, #0]
0x0F4C	0xF3640300  BFI	R3, R4, #0, #1
0x0F50	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 491 :: 		
L_end_I2Cx_Init_Advanced:
0x0F52	0xF8DDE000  LDR	LR, [SP, #0]
0x0F56	0xB008    ADD	SP, SP, #32
0x0F58	0x4770    BX	LR
0x0F5A	0xBF00    NOP
0x0F5C	0x54004000  	I2C1_CR1+0
0x0F60	0x08544247  	RCC_APB1ENR+0
0x0F64	0xFFFFFFFF  	_I2C1_Start+0
0x0F68	0x00782000  	_I2C_Start_Ptr+0
0x0F6C	0xFFFFFFFF  	_I2C1_Read+0
0x0F70	0x007C2000  	_I2C_Read_Ptr+0
0x0F74	0xFFFFFFFF  	_I2C1_Write+0
0x0F78	0x00802000  	_I2C_Write_Ptr+0
0x0F7C	0x58004000  	I2C2_CR1+0
0x0F80	0x08584247  	RCC_APB1ENR+0
0x0F84	0x0FAD0000  	_I2C2_Start+0
0x0F88	0x08C10000  	_I2C2_Read+0
0x0F8C	0x0B790000  	_I2C2_Write+0
0x0F90	0x5C004000  	I2C3_CR1+0
0x0F94	0x085C4247  	RCC_APB1ENR+0
0x0F98	0xFFFFFFFF  	_I2C3_Start+0
0x0F9C	0xFFFFFFFF  	_I2C3_Read+0
0x0FA0	0xFFFFFFFF  	_I2C3_Write+0
0x0FA4	0x4240000F  	#1000000
0x0FA8	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_checkMPU6050:
;clicker_2_STM32.c, 96 :: 		int checkMPU6050() {
0x13B0	0xB081    SUB	SP, SP, #4
0x13B2	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 97 :: 		if (readByte(WHO_AM_I) !=  'h') { // Ascii for 'h' is 0x68
0x13B6	0x2075    MOVS	R0, #117
0x13B8	0xF7FFFFD0  BL	_readByte+0
0x13BC	0x2868    CMP	R0, #104
0x13BE	0xD005    BEQ	L_checkMPU60502
;clicker_2_STM32.c, 98 :: 		UART4_Write_Text("Failed to read 'WHO AM I' from MPU6050\r\n");
0x13C0	0x4807    LDR	R0, [PC, #28]
0x13C2	0xF7FFFFE7  BL	_UART4_Write_Text+0
;clicker_2_STM32.c, 99 :: 		return 1;
0x13C6	0x2001    MOVS	R0, #1
0x13C8	0xB200    SXTH	R0, R0
0x13CA	0xE004    B	L_end_checkMPU6050
;clicker_2_STM32.c, 100 :: 		}
L_checkMPU60502:
;clicker_2_STM32.c, 102 :: 		UART4_Write_Text("Read 'WHO AM I' from MPU6050\r\n");
0x13CC	0x4805    LDR	R0, [PC, #20]
0x13CE	0xF7FFFFE1  BL	_UART4_Write_Text+0
;clicker_2_STM32.c, 103 :: 		return 0;
0x13D2	0x2000    MOVS	R0, #0
0x13D4	0xB200    SXTH	R0, R0
;clicker_2_STM32.c, 104 :: 		}
L_end_checkMPU6050:
0x13D6	0xF8DDE000  LDR	LR, [SP, #0]
0x13DA	0xB001    ADD	SP, SP, #4
0x13DC	0x4770    BX	LR
0x13DE	0xBF00    NOP
0x13E0	0x00002000  	?lstr1_clicker_2_STM32+0
0x13E4	0x00292000  	?lstr2_clicker_2_STM32+0
; end of _checkMPU6050
_readByte:
;clicker_2_STM32.c, 66 :: 		unsigned char readByte(unsigned char registerAddress) {
; registerAddress start address is: 0 (R0)
0x135C	0xB082    SUB	SP, SP, #8
0x135E	0xF8CDE000  STR	LR, [SP, #0]
; registerAddress end address is: 0 (R0)
; registerAddress start address is: 0 (R0)
;clicker_2_STM32.c, 68 :: 		read_data[0] = registerAddress;
0x1362	0xA901    ADD	R1, SP, #4
0x1364	0x7008    STRB	R0, [R1, #0]
; registerAddress end address is: 0 (R0)
;clicker_2_STM32.c, 70 :: 		I2C2_Start();
0x1366	0xF7FFFE21  BL	_I2C2_Start+0
;clicker_2_STM32.c, 71 :: 		I2C2_Write(MPU6050_ADDRESS, read_data, 1, END_MODE_RESTART);
0x136A	0xA901    ADD	R1, SP, #4
0x136C	0xF2400300  MOVW	R3, #0
0x1370	0x2201    MOVS	R2, #1
0x1372	0x2068    MOVS	R0, #104
0x1374	0xF7FFFC00  BL	_I2C2_Write+0
;clicker_2_STM32.c, 72 :: 		I2C2_Read(MPU6050_ADDRESS, read_data, 1, END_MODE_STOP);
0x1378	0xA901    ADD	R1, SP, #4
0x137A	0xF2400301  MOVW	R3, #1
0x137E	0x2201    MOVS	R2, #1
0x1380	0x2068    MOVS	R0, #104
0x1382	0xF7FFFA9D  BL	_I2C2_Read+0
;clicker_2_STM32.c, 74 :: 		return read_data[0];
0x1386	0xA901    ADD	R1, SP, #4
0x1388	0x7809    LDRB	R1, [R1, #0]
0x138A	0xB2C8    UXTB	R0, R1
;clicker_2_STM32.c, 75 :: 		}
L_end_readByte:
0x138C	0xF8DDE000  LDR	LR, [SP, #0]
0x1390	0xB002    ADD	SP, SP, #8
0x1392	0x4770    BX	LR
; end of _readByte
_I2C2_Start:
;__Lib_I2C_123.c, 330 :: 		
0x0FAC	0xB081    SUB	SP, SP, #4
0x0FAE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 331 :: 		
0x0FB2	0x4803    LDR	R0, [PC, #12]
0x0FB4	0xF7FFF9A6  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 332 :: 		
L_end_I2C2_Start:
0x0FB8	0xF8DDE000  LDR	LR, [SP, #0]
0x0FBC	0xB001    ADD	SP, SP, #4
0x0FBE	0x4770    BX	LR
0x0FC0	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_I2Cx_Start:
;__Lib_I2C_123.c, 157 :: 		
; I2C_BASE start address is: 0 (R0)
0x0304	0xB081    SUB	SP, SP, #4
0x0306	0xF8CDE000  STR	LR, [SP, #0]
0x030A	0x4604    MOV	R4, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 16 (R4)
;__Lib_I2C_123.c, 158 :: 		
0x030C	0x4620    MOV	R0, R4
0x030E	0xF7FFFF6D  BL	__Lib_I2C_123_I2Cx_Wait_For_Idle+0
;__Lib_I2C_123.c, 161 :: 		
0x0312	0x2201    MOVS	R2, #1
0x0314	0x6821    LDR	R1, [R4, #0]
0x0316	0xF3622108  BFI	R1, R2, #8, #1
0x031A	0x6021    STR	R1, [R4, #0]
;__Lib_I2C_123.c, 163 :: 		
0x031C	0xF2040114  ADDW	R1, R4, #20
0x0320	0x680A    LDR	R2, [R1, #0]
0x0322	0xF3C22140  UBFX	R1, R2, #9, #1
0x0326	0xB111    CBZ	R1, L_I2Cx_Start2
; I2C_BASE end address is: 16 (R4)
;__Lib_I2C_123.c, 164 :: 		
0x0328	0xF64F70FF  MOVW	R0, #65535
0x032C	0xE006    B	L_end_I2Cx_Start
;__Lib_I2C_123.c, 165 :: 		
L_I2Cx_Start2:
;__Lib_I2C_123.c, 166 :: 		
; I2C_BASE start address is: 16 (R4)
L_I2Cx_Start3:
; I2C_BASE end address is: 16 (R4)
; I2C_BASE start address is: 16 (R4)
0x032E	0x4905    LDR	R1, [PC, #20]
0x0330	0x4620    MOV	R0, R4
0x0332	0xF7FFFF43  BL	_ChekXForEvent+0
0x0336	0xB900    CBNZ	R0, L_I2Cx_Start4
;__Lib_I2C_123.c, 167 :: 		
; I2C_BASE end address is: 16 (R4)
0x0338	0xE7F9    B	L_I2Cx_Start3
L_I2Cx_Start4:
;__Lib_I2C_123.c, 168 :: 		
0x033A	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 169 :: 		
L_end_I2Cx_Start:
0x033C	0xF8DDE000  LDR	LR, [SP, #0]
0x0340	0xB001    ADD	SP, SP, #4
0x0342	0x4770    BX	LR
0x0344	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_123_I2Cx_Wait_For_Idle:
;__Lib_I2C_123.c, 147 :: 		
; I2C_BASE start address is: 0 (R0)
0x01EC	0xB081    SUB	SP, SP, #4
0x01EE	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
0x01F2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 148 :: 		
L___Lib_I2C_123_I2Cx_Wait_For_Idle0:
; I2C_BASE start address is: 12 (R3)
0x01F4	0x4618    MOV	R0, R3
0x01F6	0xF7FFFFC7  BL	_I2Cx_Is_Idle+0
0x01FA	0xB900    CBNZ	R0, L___Lib_I2C_123_I2Cx_Wait_For_Idle1
;__Lib_I2C_123.c, 149 :: 		
; I2C_BASE end address is: 12 (R3)
0x01FC	0xE7FA    B	L___Lib_I2C_123_I2Cx_Wait_For_Idle0
L___Lib_I2C_123_I2Cx_Wait_For_Idle1:
;__Lib_I2C_123.c, 150 :: 		
L_end_I2Cx_Wait_For_Idle:
0x01FE	0xF8DDE000  LDR	LR, [SP, #0]
0x0202	0xB001    ADD	SP, SP, #4
0x0204	0x4770    BX	LR
; end of __Lib_I2C_123_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_123.c, 142 :: 		
; I2C_BASE start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 143 :: 		
0x018A	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x018E	0x680A    LDR	R2, [R1, #0]
0x0190	0xF3C20140  UBFX	R1, R2, #1, #1
0x0194	0xF0810101  EOR	R1, R1, #1
0x0198	0xB2C9    UXTB	R1, R1
0x019A	0xB2C8    UXTB	R0, R1
;__Lib_I2C_123.c, 144 :: 		
L_end_I2Cx_Is_Idle:
0x019C	0xB001    ADD	SP, SP, #4
0x019E	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_123.c, 152 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x01BC	0xB081    SUB	SP, SP, #4
0x01BE	0xF8CDE000  STR	LR, [SP, #0]
0x01C2	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_123.c, 153 :: 		
; I2C_BASE end address is: 0 (R0)
0x01C4	0xF7FFFFEC  BL	_I2Cx_Get_Status+0
0x01C8	0xEA000203  AND	R2, R0, R3, LSL #0
0x01CC	0x429A    CMP	R2, R3
0x01CE	0xF2400200  MOVW	R2, #0
0x01D2	0xD100    BNE	L__ChekXForEvent82
0x01D4	0x2201    MOVS	R2, #1
L__ChekXForEvent82:
; Event end address is: 12 (R3)
0x01D6	0xB2D0    UXTB	R0, R2
;__Lib_I2C_123.c, 154 :: 		
L_end_ChekXForEvent:
0x01D8	0xF8DDE000  LDR	LR, [SP, #0]
0x01DC	0xB001    ADD	SP, SP, #4
0x01DE	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_123.c, 129 :: 		
; I2C_BASE start address is: 0 (R0)
0x01A0	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 132 :: 		
0x01A2	0xF2000114  ADDW	R1, R0, #20
0x01A6	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_123.c, 133 :: 		
0x01A8	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01AC	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_123.c, 135 :: 		
0x01AE	0x0409    LSLS	R1, R1, #16
0x01B0	0xEA420101  ORR	R1, R2, R1, LSL #0
0x01B4	0x4608    MOV	R0, R1
;__Lib_I2C_123.c, 136 :: 		
L_end_I2Cx_Get_Status:
0x01B6	0xB001    ADD	SP, SP, #4
0x01B8	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Write:
;__Lib_I2C_123.c, 351 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0B78	0xB081    SUB	SP, SP, #4
0x0B7A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 352 :: 		
0x0B7E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0B80	0x4613    MOV	R3, R2
0x0B82	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0B84	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0B86	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0B88	0xF7FFFC84  BL	_I2Cx_Write+0
0x0B8C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 353 :: 		
L_end_I2C2_Write:
0x0B8E	0xF8DDE000  LDR	LR, [SP, #0]
0x0B92	0xB001    ADD	SP, SP, #4
0x0B94	0x4770    BX	LR
0x0B96	0xBF00    NOP
0x0B98	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_I2Cx_Write:
;__Lib_I2C_123.c, 175 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0494	0xB081    SUB	SP, SP, #4
0x0496	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x049A	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 177 :: 		
0x049C	0xF2000510  ADDW	R5, R0, #16
0x04A0	0x004C    LSLS	R4, R1, #1
0x04A2	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x04A4	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
0x04A6	0x4634    MOV	R4, R6
0x04A8	0x4606    MOV	R6, R0
0x04AA	0x4690    MOV	R8, R2
0x04AC	0x461F    MOV	R7, R3
;__Lib_I2C_123.c, 178 :: 		
L_I2Cx_Write5:
; END_mode start address is: 16 (R4)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
0x04AE	0x4922    LDR	R1, [PC, #136]
0x04B0	0x4630    MOV	R0, R6
0x04B2	0xF7FFFE83  BL	_ChekXForEvent+0
0x04B6	0xB900    CBNZ	R0, L_I2Cx_Write6
;__Lib_I2C_123.c, 179 :: 		
0x04B8	0xE7F9    B	L_I2Cx_Write5
L_I2Cx_Write6:
;__Lib_I2C_123.c, 180 :: 		
; i start address is: 0 (R0)
0x04BA	0x2000    MOVS	R0, #0
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 16 (R4)
; I2C_BASE end address is: 24 (R6)
0x04BC	0x4621    MOV	R1, R4
L_I2Cx_Write7:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x04BE	0x1E7C    SUBS	R4, R7, #1
0x04C0	0x42A0    CMP	R0, R4
0x04C2	0xD212    BCS	L_I2Cx_Write8
;__Lib_I2C_123.c, 181 :: 		
0x04C4	0xF2060510  ADDW	R5, R6, #16
0x04C8	0xEB080400  ADD	R4, R8, R0, LSL #0
0x04CC	0x7824    LDRB	R4, [R4, #0]
0x04CE	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x04D0	0x4681    MOV	R9, R0
0x04D2	0x460D    MOV	R5, R1
;__Lib_I2C_123.c, 182 :: 		
L_I2Cx_Write10:
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 36 (R9)
0x04D4	0x4919    LDR	R1, [PC, #100]
0x04D6	0x4630    MOV	R0, R6
0x04D8	0xF7FFFE70  BL	_ChekXForEvent+0
0x04DC	0xB900    CBNZ	R0, L_I2Cx_Write11
;__Lib_I2C_123.c, 183 :: 		
0x04DE	0xE7F9    B	L_I2Cx_Write10
L_I2Cx_Write11:
;__Lib_I2C_123.c, 180 :: 		
0x04E0	0xF1090401  ADD	R4, R9, #1
; i end address is: 36 (R9)
; i start address is: 0 (R0)
0x04E4	0x4620    MOV	R0, R4
;__Lib_I2C_123.c, 184 :: 		
0x04E6	0x4629    MOV	R1, R5
; END_mode end address is: 20 (R5)
; count end address is: 28 (R7)
0x04E8	0xE7E9    B	L_I2Cx_Write7
L_I2Cx_Write8:
;__Lib_I2C_123.c, 186 :: 		
; END_mode start address is: 4 (R1)
0x04EA	0xF2060510  ADDW	R5, R6, #16
0x04EE	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x04F2	0x7824    LDRB	R4, [R4, #0]
0x04F4	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x04F6	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 187 :: 		
L_I2Cx_Write12:
; END_mode start address is: 16 (R4)
; I2C_BASE start address is: 24 (R6)
0x04F8	0x4911    LDR	R1, [PC, #68]
0x04FA	0x4630    MOV	R0, R6
0x04FC	0xF7FFFE5E  BL	_ChekXForEvent+0
0x0500	0xB900    CBNZ	R0, L_I2Cx_Write13
;__Lib_I2C_123.c, 188 :: 		
0x0502	0xE7F9    B	L_I2Cx_Write12
L_I2Cx_Write13:
;__Lib_I2C_123.c, 189 :: 		
0x0504	0x2C01    CMP	R4, #1
0x0506	0xD105    BNE	L_I2Cx_Write14
; END_mode end address is: 16 (R4)
;__Lib_I2C_123.c, 190 :: 		
0x0508	0x2501    MOVS	R5, #1
0x050A	0x6834    LDR	R4, [R6, #0]
0x050C	0xF3652449  BFI	R4, R5, #9, #1
0x0510	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0512	0xE00B    B	L_I2Cx_Write15
L_I2Cx_Write14:
;__Lib_I2C_123.c, 192 :: 		
; I2C_BASE start address is: 24 (R6)
0x0514	0x2501    MOVS	R5, #1
0x0516	0x6834    LDR	R4, [R6, #0]
0x0518	0xF3652408  BFI	R4, R5, #8, #1
0x051C	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x051E	0x4634    MOV	R4, R6
;__Lib_I2C_123.c, 193 :: 		
L_I2Cx_Write16:
; I2C_BASE start address is: 16 (R4)
0x0520	0x4908    LDR	R1, [PC, #32]
0x0522	0x4620    MOV	R0, R4
0x0524	0xF7FFFE4A  BL	_ChekXForEvent+0
0x0528	0xB900    CBNZ	R0, L_I2Cx_Write17
;__Lib_I2C_123.c, 194 :: 		
; I2C_BASE end address is: 16 (R4)
0x052A	0xE7F9    B	L_I2Cx_Write16
L_I2Cx_Write17:
;__Lib_I2C_123.c, 195 :: 		
L_I2Cx_Write15:
;__Lib_I2C_123.c, 196 :: 		
0x052C	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 197 :: 		
L_end_I2Cx_Write:
0x052E	0xF8DDE000  LDR	LR, [SP, #0]
0x0532	0xB001    ADD	SP, SP, #4
0x0534	0x4770    BX	LR
0x0536	0xBF00    NOP
0x0538	0x00820007  	#458882
0x053C	0x00800007  	#458880
0x0540	0x00840007  	#458884
0x0544	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Read:
;__Lib_I2C_123.c, 347 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x08C0	0xB081    SUB	SP, SP, #4
0x08C2	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 348 :: 		
0x08C6	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x08C8	0x4613    MOV	R3, R2
0x08CA	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x08CC	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x08CE	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x08D0	0xF7FFFE3A  BL	_I2Cx_Read+0
0x08D4	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 349 :: 		
L_end_I2C2_Read:
0x08D6	0xF8DDE000  LDR	LR, [SP, #0]
0x08DA	0xB001    ADD	SP, SP, #4
0x08DC	0x4770    BX	LR
0x08DE	0xBF00    NOP
0x08E0	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_I2Cx_Read:
;__Lib_I2C_123.c, 201 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0548	0xB082    SUB	SP, SP, #8
0x054A	0xF8CDE000  STR	LR, [SP, #0]
0x054E	0x461F    MOV	R7, R3
0x0550	0xB2CB    UXTB	R3, R1
0x0552	0x4601    MOV	R1, R0
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 12 (R3)
; buf start address is: 8 (R2)
; count start address is: 28 (R7)
; END_mode start address is: 24 (R6)
0x0554	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_123.c, 203 :: 		
; i start address is: 32 (R8)
0x0556	0xF04F0800  MOV	R8, #0
;__Lib_I2C_123.c, 204 :: 		
0x055A	0xE129    B	L_I2Cx_Read18
; count end address is: 28 (R7)
;__Lib_I2C_123.c, 205 :: 		
L_I2Cx_Read20:
;__Lib_I2C_123.c, 206 :: 		
0x055C	0xF2010510  ADDW	R5, R1, #16
0x0560	0x005C    LSLS	R4, R3, #1
0x0562	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x0564	0xF0440401  ORR	R4, R4, #1
0x0568	0xB2A4    UXTH	R4, R4
0x056A	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x056C	0x4633    MOV	R3, R6
0x056E	0x4616    MOV	R6, R2
0x0570	0x4642    MOV	R2, R8
;__Lib_I2C_123.c, 207 :: 		
L_I2Cx_Read21:
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x0572	0xF2010414  ADDW	R4, R1, #20
0x0576	0x6825    LDR	R5, [R4, #0]
0x0578	0xF3C50440  UBFX	R4, R5, #1, #1
0x057C	0xB904    CBNZ	R4, L_I2Cx_Read22
;__Lib_I2C_123.c, 208 :: 		
0x057E	0xE7F8    B	L_I2Cx_Read21
L_I2Cx_Read22:
;__Lib_I2C_123.c, 209 :: 		
0x0580	0x2500    MOVS	R5, #0
0x0582	0x680C    LDR	R4, [R1, #0]
0x0584	0xF365248A  BFI	R4, R5, #10, #1
0x0588	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 210 :: 		
0x058A	0xF2010414  ADDW	R4, R1, #20
0x058E	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 211 :: 		
0x0590	0xBF00    NOP
;__Lib_I2C_123.c, 212 :: 		
0x0592	0xF2010418  ADDW	R4, R1, #24
0x0596	0x6824    LDR	R4, [R4, #0]
0x0598	0x0424    LSLS	R4, R4, #16
0x059A	0xEA400404  ORR	R4, R0, R4, LSL #0
0x059E	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 213 :: 		
0x05A0	0x2B01    CMP	R3, #1
0x05A2	0xD105    BNE	L_I2Cx_Read23
;__Lib_I2C_123.c, 214 :: 		
0x05A4	0x2501    MOVS	R5, #1
0x05A6	0x680C    LDR	R4, [R1, #0]
0x05A8	0xF3652449  BFI	R4, R5, #9, #1
0x05AC	0x600C    STR	R4, [R1, #0]
0x05AE	0xE004    B	L_I2Cx_Read24
L_I2Cx_Read23:
;__Lib_I2C_123.c, 216 :: 		
0x05B0	0x2501    MOVS	R5, #1
0x05B2	0x680C    LDR	R4, [R1, #0]
0x05B4	0xF3652408  BFI	R4, R5, #8, #1
0x05B8	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 217 :: 		
L_I2Cx_Read24:
;__Lib_I2C_123.c, 218 :: 		
0x05BA	0x4690    MOV	R8, R2
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
0x05BC	0x461F    MOV	R7, R3
0x05BE	0x4634    MOV	R4, R6
0x05C0	0x460E    MOV	R6, R1
L_I2Cx_Read25:
; i end address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 16 (R4)
; END_mode start address is: 28 (R7)
; i start address is: 32 (R8)
0x05C2	0x4981    LDR	R1, [PC, #516]
0x05C4	0x4630    MOV	R0, R6
0x05C6	0xF7FFFDF9  BL	_ChekXForEvent+0
0x05CA	0xB900    CBNZ	R0, L_I2Cx_Read26
;__Lib_I2C_123.c, 219 :: 		
0x05CC	0xE7F9    B	L_I2Cx_Read25
L_I2Cx_Read26:
;__Lib_I2C_123.c, 220 :: 		
0x05CE	0xEB040508  ADD	R5, R4, R8, LSL #0
; buf end address is: 16 (R4)
; i end address is: 32 (R8)
0x05D2	0xF2060410  ADDW	R4, R6, #16
0x05D6	0x6824    LDR	R4, [R4, #0]
0x05D8	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 221 :: 		
0x05DA	0x2F01    CMP	R7, #1
0x05DC	0xD107    BNE	L_I2Cx_Read27
; I2C_BASE end address is: 24 (R6)
; END_mode end address is: 28 (R7)
0x05DE	0x4630    MOV	R0, R6
;__Lib_I2C_123.c, 222 :: 		
L_I2Cx_Read28:
; I2C_BASE start address is: 0 (R0)
0x05E0	0x6805    LDR	R5, [R0, #0]
0x05E2	0xF3C52440  UBFX	R4, R5, #9, #1
0x05E6	0x2C00    CMP	R4, #0
0x05E8	0xD100    BNE	L_I2Cx_Read29
;__Lib_I2C_123.c, 223 :: 		
; I2C_BASE end address is: 0 (R0)
0x05EA	0xE7F9    B	L_I2Cx_Read28
L_I2Cx_Read29:
;__Lib_I2C_123.c, 224 :: 		
0x05EC	0xE006    B	L_I2Cx_Read30
L_I2Cx_Read27:
;__Lib_I2C_123.c, 226 :: 		
; I2C_BASE start address is: 24 (R6)
0x05EE	0x4630    MOV	R0, R6
L_I2Cx_Read31:
; I2C_BASE end address is: 24 (R6)
; I2C_BASE start address is: 0 (R0)
0x05F0	0x6805    LDR	R5, [R0, #0]
0x05F2	0xF3C52400  UBFX	R4, R5, #8, #1
0x05F6	0x2C00    CMP	R4, #0
0x05F8	0xD100    BNE	L_I2Cx_Read32
;__Lib_I2C_123.c, 227 :: 		
; I2C_BASE end address is: 0 (R0)
0x05FA	0xE7F9    B	L_I2Cx_Read31
L_I2Cx_Read32:
;__Lib_I2C_123.c, 228 :: 		
L_I2Cx_Read30:
;__Lib_I2C_123.c, 229 :: 		
0x05FC	0xE0DF    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 231 :: 		
L_I2Cx_Read33:
;__Lib_I2C_123.c, 232 :: 		
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; slave_address start address is: 12 (R3)
0x05FE	0x2501    MOVS	R5, #1
0x0600	0x680C    LDR	R4, [R1, #0]
0x0602	0xF365248A  BFI	R4, R5, #10, #1
0x0606	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 233 :: 		
0x0608	0x2501    MOVS	R5, #1
0x060A	0x680C    LDR	R4, [R1, #0]
0x060C	0xF36524CB  BFI	R4, R5, #11, #1
0x0610	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 234 :: 		
0x0612	0xF2010510  ADDW	R5, R1, #16
0x0616	0x005C    LSLS	R4, R3, #1
0x0618	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x061A	0xF0440401  ORR	R4, R4, #1
0x061E	0xB2A4    UXTH	R4, R4
0x0620	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x0622	0x4643    MOV	R3, R8
;__Lib_I2C_123.c, 235 :: 		
L_I2Cx_Read34:
; i start address is: 12 (R3)
; END_mode start address is: 24 (R6)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0624	0xF2010414  ADDW	R4, R1, #20
0x0628	0x6825    LDR	R5, [R4, #0]
0x062A	0xF3C50440  UBFX	R4, R5, #1, #1
0x062E	0xB904    CBNZ	R4, L_I2Cx_Read35
;__Lib_I2C_123.c, 236 :: 		
0x0630	0xE7F8    B	L_I2Cx_Read34
L_I2Cx_Read35:
;__Lib_I2C_123.c, 237 :: 		
0x0632	0xF2010414  ADDW	R4, R1, #20
0x0636	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 238 :: 		
0x0638	0xBF00    NOP
;__Lib_I2C_123.c, 239 :: 		
0x063A	0xF2010418  ADDW	R4, R1, #24
0x063E	0x6824    LDR	R4, [R4, #0]
0x0640	0x0424    LSLS	R4, R4, #16
0x0642	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 240 :: 		
0x0644	0x2500    MOVS	R5, #0
0x0646	0x680C    LDR	R4, [R1, #0]
0x0648	0xF365248A  BFI	R4, R5, #10, #1
0x064C	0x600C    STR	R4, [R1, #0]
; i end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x064E	0x9601    STR	R6, [SP, #4]
0x0650	0x461E    MOV	R6, R3
0x0652	0x9B01    LDR	R3, [SP, #4]
;__Lib_I2C_123.c, 241 :: 		
L_I2Cx_Read36:
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x0654	0xF2010414  ADDW	R4, R1, #20
0x0658	0x6825    LDR	R5, [R4, #0]
0x065A	0xF3C50480  UBFX	R4, R5, #2, #1
0x065E	0xB904    CBNZ	R4, L_I2Cx_Read37
;__Lib_I2C_123.c, 242 :: 		
0x0660	0xE7F8    B	L_I2Cx_Read36
L_I2Cx_Read37:
;__Lib_I2C_123.c, 243 :: 		
0x0662	0x2B01    CMP	R3, #1
0x0664	0xD105    BNE	L_I2Cx_Read38
;__Lib_I2C_123.c, 244 :: 		
0x0666	0x2501    MOVS	R5, #1
0x0668	0x680C    LDR	R4, [R1, #0]
0x066A	0xF3652449  BFI	R4, R5, #9, #1
0x066E	0x600C    STR	R4, [R1, #0]
0x0670	0xE004    B	L_I2Cx_Read39
L_I2Cx_Read38:
;__Lib_I2C_123.c, 246 :: 		
0x0672	0x2501    MOVS	R5, #1
0x0674	0x680C    LDR	R4, [R1, #0]
0x0676	0xF3652408  BFI	R4, R5, #8, #1
0x067A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 247 :: 		
L_I2Cx_Read39:
;__Lib_I2C_123.c, 248 :: 		
0x067C	0x1995    ADDS	R5, R2, R6
0x067E	0xF2010410  ADDW	R4, R1, #16
0x0682	0x6824    LDR	R4, [R4, #0]
0x0684	0x702C    STRB	R4, [R5, #0]
0x0686	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_123.c, 249 :: 		
0x0688	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x068A	0xF2010410  ADDW	R4, R1, #16
0x068E	0x6824    LDR	R4, [R4, #0]
0x0690	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 250 :: 		
0x0692	0x2B01    CMP	R3, #1
0x0694	0xD106    BNE	L_I2Cx_Read40
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 251 :: 		
L_I2Cx_Read41:
; I2C_BASE start address is: 4 (R1)
0x0696	0x680D    LDR	R5, [R1, #0]
0x0698	0xF3C52440  UBFX	R4, R5, #9, #1
0x069C	0xB904    CBNZ	R4, L_I2Cx_Read42
;__Lib_I2C_123.c, 252 :: 		
0x069E	0xE7FA    B	L_I2Cx_Read41
L_I2Cx_Read42:
;__Lib_I2C_123.c, 253 :: 		
0x06A0	0x4608    MOV	R0, R1
0x06A2	0xE005    B	L_I2Cx_Read43
L_I2Cx_Read40:
;__Lib_I2C_123.c, 255 :: 		
L_I2Cx_Read44:
; I2C_BASE end address is: 4 (R1)
; I2C_BASE start address is: 4 (R1)
0x06A4	0x680D    LDR	R5, [R1, #0]
0x06A6	0xF3C52400  UBFX	R4, R5, #8, #1
0x06AA	0xB904    CBNZ	R4, L_I2Cx_Read45
;__Lib_I2C_123.c, 256 :: 		
0x06AC	0xE7FA    B	L_I2Cx_Read44
L_I2Cx_Read45:
;__Lib_I2C_123.c, 257 :: 		
0x06AE	0x4608    MOV	R0, R1
L_I2Cx_Read43:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 259 :: 		
; I2C_BASE start address is: 0 (R0)
0x06B0	0x2500    MOVS	R5, #0
0x06B2	0x6804    LDR	R4, [R0, #0]
0x06B4	0xF36524CB  BFI	R4, R5, #11, #1
0x06B8	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 261 :: 		
0x06BA	0xE080    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 263 :: 		
L_I2Cx_Read46:
;__Lib_I2C_123.c, 264 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x06BC	0x2501    MOVS	R5, #1
0x06BE	0x680C    LDR	R4, [R1, #0]
0x06C0	0xF365248A  BFI	R4, R5, #10, #1
0x06C4	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 265 :: 		
0x06C6	0xF2010510  ADDW	R5, R1, #16
0x06CA	0x005C    LSLS	R4, R3, #1
0x06CC	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x06CE	0xF0440401  ORR	R4, R4, #1
0x06D2	0xB2A4    UXTH	R4, R4
0x06D4	0x602C    STR	R4, [R5, #0]
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x06D6	0x460D    MOV	R5, R1
0x06D8	0x4614    MOV	R4, R2
0x06DA	0x46B9    MOV	R9, R7
0x06DC	0x46B0    MOV	R8, R6
;__Lib_I2C_123.c, 266 :: 		
L_I2Cx_Read47:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
0x06DE	0x493B    LDR	R1, [PC, #236]
0x06E0	0x4628    MOV	R0, R5
0x06E2	0xF7FFFD6B  BL	_ChekXForEvent+0
0x06E6	0xB900    CBNZ	R0, L_I2Cx_Read48
;__Lib_I2C_123.c, 267 :: 		
0x06E8	0xE7F9    B	L_I2Cx_Read47
L_I2Cx_Read48:
;__Lib_I2C_123.c, 268 :: 		
; i start address is: 4 (R1)
0x06EA	0x2100    MOVS	R1, #0
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 20 (R5)
; buf end address is: 16 (R4)
0x06EC	0x4623    MOV	R3, R4
0x06EE	0x462A    MOV	R2, R5
;__Lib_I2C_123.c, 269 :: 		
L_I2Cx_Read49:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x06F0	0xF1A90403  SUB	R4, R9, #3
0x06F4	0x42A1    CMP	R1, R4
0x06F6	0xD214    BCS	L_I2Cx_Read50
; buf end address is: 12 (R3)
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x06F8	0x468A    MOV	R10, R1
0x06FA	0x4617    MOV	R7, R2
0x06FC	0x461E    MOV	R6, R3
;__Lib_I2C_123.c, 270 :: 		
L_I2Cx_Read51:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x06FE	0x4932    LDR	R1, [PC, #200]
0x0700	0x4638    MOV	R0, R7
0x0702	0xF7FFFD5B  BL	_ChekXForEvent+0
0x0706	0xB900    CBNZ	R0, L_I2Cx_Read52
;__Lib_I2C_123.c, 271 :: 		
0x0708	0xE7F9    B	L_I2Cx_Read51
L_I2Cx_Read52:
;__Lib_I2C_123.c, 272 :: 		
0x070A	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x070E	0xF2070410  ADDW	R4, R7, #16
0x0712	0x6824    LDR	R4, [R4, #0]
0x0714	0x702C    STRB	R4, [R5, #0]
0x0716	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x071A	0x4621    MOV	R1, R4
;__Lib_I2C_123.c, 273 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x071C	0x4633    MOV	R3, R6
0x071E	0x463A    MOV	R2, R7
0x0720	0xE7E6    B	L_I2Cx_Read49
L_I2Cx_Read50:
;__Lib_I2C_123.c, 274 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0722	0x9301    STR	R3, [SP, #4]
; END_mode end address is: 32 (R8)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x0724	0x460B    MOV	R3, R1
0x0726	0x4616    MOV	R6, R2
0x0728	0x4642    MOV	R2, R8
0x072A	0x9901    LDR	R1, [SP, #4]
L_I2Cx_Read53:
; buf end address is: 12 (R3)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x072C	0xF2060414  ADDW	R4, R6, #20
0x0730	0x6825    LDR	R5, [R4, #0]
0x0732	0xF3C50480  UBFX	R4, R5, #2, #1
0x0736	0xB904    CBNZ	R4, L_I2Cx_Read54
;__Lib_I2C_123.c, 275 :: 		
0x0738	0xE7F8    B	L_I2Cx_Read53
L_I2Cx_Read54:
;__Lib_I2C_123.c, 276 :: 		
0x073A	0x2500    MOVS	R5, #0
0x073C	0x6834    LDR	R4, [R6, #0]
0x073E	0xF365248A  BFI	R4, R5, #10, #1
0x0742	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_123.c, 277 :: 		
0x0744	0x18CD    ADDS	R5, R1, R3
0x0746	0xF2060410  ADDW	R4, R6, #16
0x074A	0x6824    LDR	R4, [R4, #0]
0x074C	0x702C    STRB	R4, [R5, #0]
0x074E	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
; END_mode end address is: 8 (R2)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0750	0x4613    MOV	R3, R2
0x0752	0x4602    MOV	R2, R0
;__Lib_I2C_123.c, 278 :: 		
L_I2Cx_Read55:
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 12 (R3)
0x0754	0xF2060414  ADDW	R4, R6, #20
0x0758	0x6825    LDR	R5, [R4, #0]
0x075A	0xF3C50480  UBFX	R4, R5, #2, #1
0x075E	0xB904    CBNZ	R4, L_I2Cx_Read56
;__Lib_I2C_123.c, 279 :: 		
0x0760	0xE7F8    B	L_I2Cx_Read55
L_I2Cx_Read56:
;__Lib_I2C_123.c, 280 :: 		
0x0762	0x2B01    CMP	R3, #1
0x0764	0xD107    BNE	L_I2Cx_Read57
; END_mode end address is: 12 (R3)
;__Lib_I2C_123.c, 281 :: 		
0x0766	0x2501    MOVS	R5, #1
0x0768	0x6834    LDR	R4, [R6, #0]
0x076A	0xF3652449  BFI	R4, R5, #9, #1
0x076E	0x6034    STR	R4, [R6, #0]
0x0770	0x4610    MOV	R0, R2
0x0772	0x4632    MOV	R2, R6
0x0774	0xE010    B	L_I2Cx_Read58
L_I2Cx_Read57:
;__Lib_I2C_123.c, 283 :: 		
0x0776	0x2501    MOVS	R5, #1
0x0778	0x6834    LDR	R4, [R6, #0]
0x077A	0xF3652408  BFI	R4, R5, #8, #1
0x077E	0x6034    STR	R4, [R6, #0]
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0780	0x4635    MOV	R5, R6
0x0782	0x4616    MOV	R6, R2
0x0784	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 284 :: 		
L_I2Cx_Read59:
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
; i start address is: 24 (R6)
0x0786	0x4912    LDR	R1, [PC, #72]
0x0788	0x4628    MOV	R0, R5
0x078A	0xF7FFFD17  BL	_ChekXForEvent+0
0x078E	0xB900    CBNZ	R0, L_I2Cx_Read60
;__Lib_I2C_123.c, 285 :: 		
0x0790	0xE7F9    B	L_I2Cx_Read59
L_I2Cx_Read60:
;__Lib_I2C_123.c, 286 :: 		
0x0792	0x4621    MOV	R1, R4
; i end address is: 24 (R6)
; buf end address is: 16 (R4)
0x0794	0x462A    MOV	R2, R5
0x0796	0x4630    MOV	R0, R6
L_I2Cx_Read58:
; I2C_BASE end address is: 20 (R5)
;__Lib_I2C_123.c, 287 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0798	0x180D    ADDS	R5, R1, R0
0x079A	0xF2020410  ADDW	R4, R2, #16
0x079E	0x6824    LDR	R4, [R4, #0]
0x07A0	0x702C    STRB	R4, [R5, #0]
0x07A2	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_123.c, 288 :: 		
0x07A4	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x07A6	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x07AA	0x6824    LDR	R4, [R4, #0]
0x07AC	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 289 :: 		
0x07AE	0xE006    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 291 :: 		
L_I2Cx_Read18:
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x07B0	0x2F01    CMP	R7, #1
0x07B2	0xF43FAED3  BEQ	L_I2Cx_Read20
0x07B6	0x2F02    CMP	R7, #2
0x07B8	0xF43FAF21  BEQ	L_I2Cx_Read33
; i end address is: 32 (R8)
0x07BC	0xE77E    B	L_I2Cx_Read46
; slave_address end address is: 12 (R3)
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read19:
;__Lib_I2C_123.c, 292 :: 		
L_end_I2Cx_Read:
0x07BE	0xF8DDE000  LDR	LR, [SP, #0]
0x07C2	0xB002    ADD	SP, SP, #8
0x07C4	0x4770    BX	LR
0x07C6	0xBF00    NOP
0x07C8	0x00400003  	#196672
0x07CC	0x00020003  	#196610
0x07D0	0x00010003  	#196609
; end of _I2Cx_Read
_UART4_Write_Text:
;__Lib_UART_123_45_6.c, 90 :: 		
; uart_text start address is: 0 (R0)
0x1394	0xB081    SUB	SP, SP, #4
0x1396	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 91 :: 		
0x139A	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x139C	0x4803    LDR	R0, [PC, #12]
0x139E	0xF7FFFBFD  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 92 :: 		
L_end_UART4_Write_Text:
0x13A2	0xF8DDE000  LDR	LR, [SP, #0]
0x13A6	0xB001    ADD	SP, SP, #4
0x13A8	0x4770    BX	LR
0x13AA	0xBF00    NOP
0x13AC	0x4C004000  	UART4_SR+0
; end of _UART4_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0B9C	0xB081    SUB	SP, SP, #4
0x0B9E	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x0BA2	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x0BA4	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0BA6	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0BA8	0x4605    MOV	R5, R0
0x0BAA	0xB2D8    UXTB	R0, R3
0x0BAC	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0BAE	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0BB0	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0BB2	0x4628    MOV	R0, R5
0x0BB4	0xF7FFFE0E  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x0BB8	0x1C72    ADDS	R2, R6, #1
0x0BBA	0xB2D2    UXTB	R2, R2
0x0BBC	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x0BBE	0x18A2    ADDS	R2, R4, R2
0x0BC0	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0BC2	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0BC4	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x0BC6	0xF8DDE000  LDR	LR, [SP, #0]
0x0BCA	0xB001    ADD	SP, SP, #4
0x0BCC	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x07D4	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x07D6	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x07DA	0x4601    MOV	R1, R0
0x07DC	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x07E0	0x680B    LDR	R3, [R1, #0]
0x07E2	0xF3C312C0  UBFX	R2, R3, #7, #1
0x07E6	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x07E8	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x07EA	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x07EC	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x07EE	0xB001    ADD	SP, SP, #4
0x07F0	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_selfTestMPU6050:
;clicker_2_STM32.c, 107 :: 		int selfTestMPU6050() {
0x1AC0	0xB082    SUB	SP, SP, #8
0x1AC2	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 114 :: 		writeByte(ACCEL_CONFIG, 0xF0);
0x1AC6	0x21F0    MOVS	R1, #240
0x1AC8	0x201C    MOVS	R0, #28
0x1ACA	0xF7FFFACF  BL	_writeByte+0
;clicker_2_STM32.c, 115 :: 		writeByte(GYRO_CONFIG, 0xE0);
0x1ACE	0x21E0    MOVS	R1, #224
0x1AD0	0x201B    MOVS	R0, #27
0x1AD2	0xF7FFFACB  BL	_writeByte+0
;clicker_2_STM32.c, 116 :: 		Delay_ms(250);
0x1AD6	0xF249677E  MOVW	R7, #38526
0x1ADA	0xF2C00798  MOVT	R7, #152
0x1ADE	0xBF00    NOP
0x1AE0	0xBF00    NOP
L_selfTestMPU60503:
0x1AE2	0x1E7F    SUBS	R7, R7, #1
0x1AE4	0xD1FD    BNE	L_selfTestMPU60503
0x1AE6	0xBF00    NOP
0x1AE8	0xBF00    NOP
0x1AEA	0xBF00    NOP
;clicker_2_STM32.c, 119 :: 		rdx = readByte(SELF_TEST_X);
0x1AEC	0x200D    MOVS	R0, #13
0x1AEE	0xF7FFFC35  BL	_readByte+0
; rdx start address is: 48 (R12)
0x1AF2	0xFA5FFC80  UXTB	R12, R0
;clicker_2_STM32.c, 120 :: 		rdy = readByte(SELF_TEST_Y);
0x1AF6	0x200E    MOVS	R0, #14
0x1AF8	0xF7FFFC30  BL	_readByte+0
; rdy start address is: 44 (R11)
0x1AFC	0xFA5FFB80  UXTB	R11, R0
;clicker_2_STM32.c, 121 :: 		rdz = readByte(SELF_TEST_Z);
0x1B00	0x200F    MOVS	R0, #15
0x1B02	0xF7FFFC2B  BL	_readByte+0
; rdz start address is: 16 (R4)
0x1B06	0xB2C4    UXTB	R4, R0
;clicker_2_STM32.c, 122 :: 		rda = readByte(SELF_TEST_A);
0x1B08	0xF88D4004  STRB	R4, [SP, #4]
0x1B0C	0x2010    MOVS	R0, #16
0x1B0E	0xF7FFFC25  BL	_readByte+0
0x1B12	0xF89D4004  LDRB	R4, [SP, #4]
;clicker_2_STM32.c, 125 :: 		stax = ((rdx >> 3) & 0x1C) | ((rda >> 4) & 0x03);
0x1B16	0xEA4F01DC  LSR	R1, R12, #3
0x1B1A	0xB2C9    UXTB	R1, R1
0x1B1C	0xF001021C  AND	R2, R1, #28
0x1B20	0xB2D2    UXTB	R2, R2
0x1B22	0x0901    LSRS	R1, R0, #4
0x1B24	0xB2C9    UXTB	R1, R1
0x1B26	0xF0010103  AND	R1, R1, #3
0x1B2A	0xB2C9    UXTB	R1, R1
0x1B2C	0xEA420301  ORR	R3, R2, R1, LSL #0
0x1B30	0xB2DB    UXTB	R3, R3
; stax start address is: 24 (R6)
0x1B32	0xB2DE    UXTB	R6, R3
;clicker_2_STM32.c, 126 :: 		stay = ((rdy >> 3) & 0x1C) | ((rda >> 2) & 0x03);
0x1B34	0xEA4F01DB  LSR	R1, R11, #3
0x1B38	0xB2C9    UXTB	R1, R1
0x1B3A	0xF001021C  AND	R2, R1, #28
0x1B3E	0xB2D2    UXTB	R2, R2
0x1B40	0x0881    LSRS	R1, R0, #2
0x1B42	0xB2C9    UXTB	R1, R1
0x1B44	0xF0010103  AND	R1, R1, #3
0x1B48	0xB2C9    UXTB	R1, R1
0x1B4A	0xEA420101  ORR	R1, R2, R1, LSL #0
; stay start address is: 28 (R7)
0x1B4E	0xB2CF    UXTB	R7, R1
;clicker_2_STM32.c, 127 :: 		staz = ((rdz >> 3) & 0x1C) | ((rda >> 0) & 0x03);
0x1B50	0x08E1    LSRS	R1, R4, #3
0x1B52	0xB2C9    UXTB	R1, R1
; rdz end address is: 16 (R4)
0x1B54	0xF001011C  AND	R1, R1, #28
0x1B58	0xB2C9    UXTB	R1, R1
0x1B5A	0xF0000003  AND	R0, R0, #3
0x1B5E	0xB2C0    UXTB	R0, R0
0x1B60	0xEA410000  ORR	R0, R1, R0, LSL #0
; staz start address is: 32 (R8)
0x1B64	0xFA5FF880  UXTB	R8, R0
;clicker_2_STM32.c, 130 :: 		stgx = rdx & 0x1F;
0x1B68	0xF00C001F  AND	R0, R12, #31
; rdx end address is: 48 (R12)
; stgx start address is: 36 (R9)
0x1B6C	0xFA5FF980  UXTB	R9, R0
;clicker_2_STM32.c, 131 :: 		stgy = rdy & 0x1F;
0x1B70	0xF00B001F  AND	R0, R11, #31
; rdy end address is: 44 (R11)
; stgy start address is: 40 (R10)
0x1B74	0xFA5FFA80  UXTB	R10, R0
;clicker_2_STM32.c, 132 :: 		stgz = rdy & 0x1F;
; stgz start address is: 44 (R11)
0x1B78	0xFA5FFB80  UXTB	R11, R0
;clicker_2_STM32.c, 135 :: 		ftax = (4096.0*0.34)*(pow((0.92/0.34), (((float)stax - 1.0)/30.0)));
0x1B7C	0xEE003A90  VMOV	S1, R3
0x1B80	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1B84	0xEEB70A00  VMOV.F32	S0, #1
0x1B88	0xEE700AC0  VSUB.F32	S1, S1, S0
0x1B8C	0xEEB30A0E  VMOV.F32	S0, #30
0x1B90	0xEE800A80  VDIV.F32	S0, S1, S0
0x1B94	0x489C    LDR	R0, [PC, #624]
0x1B96	0xEEF00A40  VMOV.F32	S1, S0
0x1B9A	0xEE000A10  VMOV	S0, R0
0x1B9E	0xF7FFFA11  BL	_pow+0
0x1BA2	0x489A    LDR	R0, [PC, #616]
0x1BA4	0xEE000A90  VMOV	S1, R0
0x1BA8	0xEE200A80  VMUL.F32	S0, S1, S0
; ftax start address is: 28 (S7)
0x1BAC	0xEEF03A40  VMOV.F32	S7, S0
;clicker_2_STM32.c, 136 :: 		ftay = (4096.0*0.34)*(pow((0.92/0.34), (((float)stay - 1.0)/30.0)));
0x1BB0	0xEE007A90  VMOV	S1, R7
0x1BB4	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1BB8	0xEEB70A00  VMOV.F32	S0, #1
0x1BBC	0xEE700AC0  VSUB.F32	S1, S1, S0
0x1BC0	0xEEB30A0E  VMOV.F32	S0, #30
0x1BC4	0xEE800A80  VDIV.F32	S0, S1, S0
0x1BC8	0x488F    LDR	R0, [PC, #572]
0x1BCA	0xEEF00A40  VMOV.F32	S1, S0
0x1BCE	0xEE000A10  VMOV	S0, R0
0x1BD2	0xF7FFF9F7  BL	_pow+0
0x1BD6	0x488D    LDR	R0, [PC, #564]
0x1BD8	0xEE000A90  VMOV	S1, R0
0x1BDC	0xEE200A80  VMUL.F32	S0, S1, S0
; ftay start address is: 24 (S6)
0x1BE0	0xEEB03A40  VMOV.F32	S6, S0
;clicker_2_STM32.c, 137 :: 		ftaz = (4096.0*0.34)*(pow((0.92/0.34), (((float)staz - 1.0)/30.0)));
0x1BE4	0xEE008A90  VMOV	S1, R8
0x1BE8	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1BEC	0xEEB70A00  VMOV.F32	S0, #1
0x1BF0	0xEE700AC0  VSUB.F32	S1, S1, S0
0x1BF4	0xEEB30A0E  VMOV.F32	S0, #30
0x1BF8	0xEE800A80  VDIV.F32	S0, S1, S0
0x1BFC	0x4882    LDR	R0, [PC, #520]
0x1BFE	0xEEF00A40  VMOV.F32	S1, S0
0x1C02	0xEE000A10  VMOV	S0, R0
0x1C06	0xF7FFF9DD  BL	_pow+0
0x1C0A	0x4880    LDR	R0, [PC, #512]
0x1C0C	0xEE000A90  VMOV	S1, R0
0x1C10	0xEE200A80  VMUL.F32	S0, S1, S0
; ftaz start address is: 40 (S10)
0x1C14	0xEEB05A40  VMOV.F32	S10, S0
;clicker_2_STM32.c, 140 :: 		ftgx =  ( 25.0*131.0)*(pow(1.046, ((float)stgx - 1.0)));
0x1C18	0xEE009A90  VMOV	S1, R9
0x1C1C	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1C20	0xEEB70A00  VMOV.F32	S0, #1
0x1C24	0xEE300AC0  VSUB.F32	S0, S1, S0
0x1C28	0x4879    LDR	R0, [PC, #484]
0x1C2A	0xEEF00A40  VMOV.F32	S1, S0
0x1C2E	0xEE000A10  VMOV	S0, R0
0x1C32	0xF7FFF9C7  BL	_pow+0
0x1C36	0x4877    LDR	R0, [PC, #476]
0x1C38	0xEE000A90  VMOV	S1, R0
0x1C3C	0xEE200A80  VMUL.F32	S0, S1, S0
; ftgx start address is: 36 (S9)
0x1C40	0xEEF04A40  VMOV.F32	S9, S0
;clicker_2_STM32.c, 141 :: 		ftgy =  (-25.0*131.0)*(pow(1.046, ((float)stgy - 1.0)));
0x1C44	0xEE00AA90  VMOV	S1, R10
0x1C48	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1C4C	0xEEB70A00  VMOV.F32	S0, #1
0x1C50	0xEE300AC0  VSUB.F32	S0, S1, S0
0x1C54	0x486E    LDR	R0, [PC, #440]
0x1C56	0xEEF00A40  VMOV.F32	S1, S0
0x1C5A	0xEE000A10  VMOV	S0, R0
0x1C5E	0xF7FFF9B1  BL	_pow+0
0x1C62	0x486D    LDR	R0, [PC, #436]
0x1C64	0xEE000A90  VMOV	S1, R0
0x1C68	0xEE200A80  VMUL.F32	S0, S1, S0
; ftgy start address is: 32 (S8)
0x1C6C	0xEEB04A40  VMOV.F32	S8, S0
;clicker_2_STM32.c, 142 :: 		ftgz =  ( 25.0*131.0)*(pow(1.046, ((float)stgz - 1.0)));
0x1C70	0xEE00BA90  VMOV	S1, R11
0x1C74	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1C78	0xEEB70A00  VMOV.F32	S0, #1
0x1C7C	0xEE300AC0  VSUB.F32	S0, S1, S0
0x1C80	0x4863    LDR	R0, [PC, #396]
0x1C82	0xEEF00A40  VMOV.F32	S1, S0
0x1C86	0xEE000A10  VMOV	S0, R0
0x1C8A	0xF7FFF99B  BL	_pow+0
0x1C8E	0x4861    LDR	R0, [PC, #388]
0x1C90	0xEE000A90  VMOV	S1, R0
0x1C94	0xEE201A80  VMUL.F32	S2, S1, S0
;clicker_2_STM32.c, 145 :: 		dpax = 100.0 + 100.0*((float)stax - ftax)/ftax;
0x1C98	0xEE006A10  VMOV	S0, R6
0x1C9C	0xEEB80A40  VCVT.F32.U32	S0, S0
; stax end address is: 24 (R6)
0x1CA0	0xEE700A63  VSUB.F32	S1, S0, S7
0x1CA4	0x485D    LDR	R0, [PC, #372]
0x1CA6	0xEE000A10  VMOV	S0, R0
0x1CAA	0xEE200A20  VMUL.F32	S0, S0, S1
0x1CAE	0xEEC00A23  VDIV.F32	S1, S0, S7
; ftax end address is: 28 (S7)
0x1CB2	0x485A    LDR	R0, [PC, #360]
0x1CB4	0xEE000A10  VMOV	S0, R0
0x1CB8	0xEE703A20  VADD.F32	S7, S0, S1
;clicker_2_STM32.c, 146 :: 		dpay = 100.0 + 100.0*((float)stay - ftay)/ftay;
0x1CBC	0xEE007A10  VMOV	S0, R7
0x1CC0	0xEEB80A40  VCVT.F32.U32	S0, S0
; stay end address is: 28 (R7)
0x1CC4	0xEE700A43  VSUB.F32	S1, S0, S6
0x1CC8	0x4854    LDR	R0, [PC, #336]
0x1CCA	0xEE000A10  VMOV	S0, R0
0x1CCE	0xEE200A20  VMUL.F32	S0, S0, S1
0x1CD2	0xEEC00A03  VDIV.F32	S1, S0, S6
; ftay end address is: 24 (S6)
0x1CD6	0x4851    LDR	R0, [PC, #324]
0x1CD8	0xEE000A10  VMOV	S0, R0
0x1CDC	0xEE303A20  VADD.F32	S6, S0, S1
;clicker_2_STM32.c, 147 :: 		dpaz = 100.0 + 100.0*((float)staz - ftaz)/ftaz;
0x1CE0	0xEE008A10  VMOV	S0, R8
0x1CE4	0xEEB80A40  VCVT.F32.U32	S0, S0
; staz end address is: 32 (R8)
0x1CE8	0xEE700A45  VSUB.F32	S1, S0, S10
0x1CEC	0x484B    LDR	R0, [PC, #300]
0x1CEE	0xEE000A10  VMOV	S0, R0
0x1CF2	0xEE200A20  VMUL.F32	S0, S0, S1
0x1CF6	0xEEC00A05  VDIV.F32	S1, S0, S10
; ftaz end address is: 40 (S10)
0x1CFA	0x4848    LDR	R0, [PC, #288]
0x1CFC	0xEE000A10  VMOV	S0, R0
0x1D00	0xEE702A20  VADD.F32	S5, S0, S1
;clicker_2_STM32.c, 148 :: 		dpgx = 100.0 + 100.0*((float)stgx - ftgx)/ftgx;
0x1D04	0xEE009A10  VMOV	S0, R9
0x1D08	0xEEB80A40  VCVT.F32.U32	S0, S0
; stgx end address is: 36 (R9)
0x1D0C	0xEE700A64  VSUB.F32	S1, S0, S9
0x1D10	0x4842    LDR	R0, [PC, #264]
0x1D12	0xEE000A10  VMOV	S0, R0
0x1D16	0xEE200A20  VMUL.F32	S0, S0, S1
0x1D1A	0xEEC00A24  VDIV.F32	S1, S0, S9
; ftgx end address is: 36 (S9)
0x1D1E	0x483F    LDR	R0, [PC, #252]
0x1D20	0xEE000A10  VMOV	S0, R0
0x1D24	0xEE302A20  VADD.F32	S4, S0, S1
;clicker_2_STM32.c, 149 :: 		dpgy = 100.0 + 100.0*((float)stgy - ftgy)/ftgy;
0x1D28	0xEE00AA10  VMOV	S0, R10
0x1D2C	0xEEB80A40  VCVT.F32.U32	S0, S0
; stgy end address is: 40 (R10)
0x1D30	0xEE700A44  VSUB.F32	S1, S0, S8
0x1D34	0x4839    LDR	R0, [PC, #228]
0x1D36	0xEE000A10  VMOV	S0, R0
0x1D3A	0xEE200A20  VMUL.F32	S0, S0, S1
0x1D3E	0xEEC00A04  VDIV.F32	S1, S0, S8
; ftgy end address is: 32 (S8)
0x1D42	0x4836    LDR	R0, [PC, #216]
0x1D44	0xEE000A10  VMOV	S0, R0
0x1D48	0xEE701A20  VADD.F32	S3, S0, S1
;clicker_2_STM32.c, 150 :: 		dpgz = 100.0 + 100.0*((float)stgz - ftgz)/ftgz;
0x1D4C	0xEE00BA10  VMOV	S0, R11
0x1D50	0xEEB80A40  VCVT.F32.U32	S0, S0
; stgz end address is: 44 (R11)
0x1D54	0xEE700A41  VSUB.F32	S1, S0, S2
0x1D58	0x4830    LDR	R0, [PC, #192]
0x1D5A	0xEE000A10  VMOV	S0, R0
0x1D5E	0xEE200A20  VMUL.F32	S0, S0, S1
0x1D62	0xEEC00A01  VDIV.F32	S1, S0, S2
0x1D66	0x482D    LDR	R0, [PC, #180]
0x1D68	0xEE000A10  VMOV	S0, R0
0x1D6C	0xEE700A20  VADD.F32	S1, S0, S1
;clicker_2_STM32.c, 153 :: 		if (dpax > 1f | dpay > 1f | dpaz > 1f | dpgx > 1f | dpgy > 1f | dpgz > 1f) {
0x1D70	0xEEB70A00  VMOV.F32	S0, #1
0x1D74	0xEEF43AC0  VCMPE.F32	S7, S0
0x1D78	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1D7C	0xF2400100  MOVW	R1, #0
0x1D80	0xDD00    BLE	L__selfTestMPU605034
0x1D82	0x2101    MOVS	R1, #1
L__selfTestMPU605034:
0x1D84	0xEEB70A00  VMOV.F32	S0, #1
0x1D88	0xEEB43AC0  VCMPE.F32	S6, S0
0x1D8C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1D90	0xF2400000  MOVW	R0, #0
0x1D94	0xDD00    BLE	L__selfTestMPU605035
0x1D96	0x2001    MOVS	R0, #1
L__selfTestMPU605035:
0x1D98	0x4301    ORRS	R1, R0
0x1D9A	0xEEB70A00  VMOV.F32	S0, #1
0x1D9E	0xEEF42AC0  VCMPE.F32	S5, S0
0x1DA2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1DA6	0xF2400000  MOVW	R0, #0
0x1DAA	0xDD00    BLE	L__selfTestMPU605036
0x1DAC	0x2001    MOVS	R0, #1
L__selfTestMPU605036:
0x1DAE	0x4301    ORRS	R1, R0
0x1DB0	0xEEB70A00  VMOV.F32	S0, #1
0x1DB4	0xEEB42AC0  VCMPE.F32	S4, S0
0x1DB8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1DBC	0xF2400000  MOVW	R0, #0
0x1DC0	0xDD00    BLE	L__selfTestMPU605037
0x1DC2	0x2001    MOVS	R0, #1
L__selfTestMPU605037:
0x1DC4	0x4301    ORRS	R1, R0
0x1DC6	0xEEB70A00  VMOV.F32	S0, #1
0x1DCA	0xEEF41AC0  VCMPE.F32	S3, S0
0x1DCE	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1DD2	0xF2400000  MOVW	R0, #0
0x1DD6	0xDD00    BLE	L__selfTestMPU605038
0x1DD8	0x2001    MOVS	R0, #1
L__selfTestMPU605038:
0x1DDA	0x4301    ORRS	R1, R0
0x1DDC	0xEEB70A00  VMOV.F32	S0, #1
0x1DE0	0xEEF40AC0  VCMPE.F32	S1, S0
0x1DE4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1DE8	0xF2400000  MOVW	R0, #0
0x1DEC	0xDD00    BLE	L__selfTestMPU605039
0x1DEE	0x2001    MOVS	R0, #1
L__selfTestMPU605039:
0x1DF0	0xEA410000  ORR	R0, R1, R0, LSL #0
0x1DF4	0xB110    CBZ	R0, L_selfTestMPU60505
;clicker_2_STM32.c, 154 :: 		return 1;
0x1DF6	0x2001    MOVS	R0, #1
0x1DF8	0xB200    SXTH	R0, R0
0x1DFA	0xE001    B	L_end_selfTestMPU6050
;clicker_2_STM32.c, 155 :: 		}
L_selfTestMPU60505:
;clicker_2_STM32.c, 157 :: 		return 0;
0x1DFC	0x2000    MOVS	R0, #0
0x1DFE	0xB200    SXTH	R0, R0
;clicker_2_STM32.c, 158 :: 		}
L_end_selfTestMPU6050:
0x1E00	0xF8DDE000  LDR	LR, [SP, #0]
0x1E04	0xB002    ADD	SP, SP, #8
0x1E06	0x4770    BX	LR
0x1E08	0x2D2D402D  	#1076702509
0x1E0C	0x147B44AE  	#1152259195
0x1E10	0xE3543F85  	#1065739092
0x1E14	0xB000454C  	#1162653696
0x1E18	0xB000C54C  	#-984829952
0x1E1C	0x000042C8  	#1120403456
; end of _selfTestMPU6050
_writeByte:
;clicker_2_STM32.c, 85 :: 		void writeByte(unsigned char registerAddress, unsigned char byte){
; byte start address is: 4 (R1)
; registerAddress start address is: 0 (R0)
0x106C	0xB082    SUB	SP, SP, #8
0x106E	0xF8CDE000  STR	LR, [SP, #0]
; byte end address is: 4 (R1)
; registerAddress end address is: 0 (R0)
; registerAddress start address is: 0 (R0)
; byte start address is: 4 (R1)
;clicker_2_STM32.c, 87 :: 		write_data[0] = registerAddress;
0x1072	0xAA01    ADD	R2, SP, #4
0x1074	0x7010    STRB	R0, [R2, #0]
; registerAddress end address is: 0 (R0)
;clicker_2_STM32.c, 88 :: 		write_data[1] = byte;
0x1076	0x1C52    ADDS	R2, R2, #1
0x1078	0x7011    STRB	R1, [R2, #0]
; byte end address is: 4 (R1)
;clicker_2_STM32.c, 90 :: 		I2C2_Start();
0x107A	0xF7FFFF97  BL	_I2C2_Start+0
;clicker_2_STM32.c, 91 :: 		I2C2_Write(MPU6050_ADDRESS, write_data, 2, END_MODE_STOP);
0x107E	0xAA01    ADD	R2, SP, #4
0x1080	0xF2400301  MOVW	R3, #1
0x1084	0x4611    MOV	R1, R2
0x1086	0x2202    MOVS	R2, #2
0x1088	0x2068    MOVS	R0, #104
0x108A	0xF7FFFD75  BL	_I2C2_Write+0
;clicker_2_STM32.c, 92 :: 		}
L_end_writeByte:
0x108E	0xF8DDE000  LDR	LR, [SP, #0]
0x1092	0xB002    ADD	SP, SP, #8
0x1094	0x4770    BX	LR
; end of _writeByte
_pow:
;__Lib_CMath.c, 397 :: 		
0x0FC4	0xB082    SUB	SP, SP, #8
0x0FC6	0xF8CDE000  STR	LR, [SP, #0]
; y start address is: 4 (S1)
; x start address is: 0 (S0)
0x0FCA	0xEEF02A40  VMOV.F32	S5, S0
0x0FCE	0xEEB02A60  VMOV.F32	S4, S1
; y end address is: 4 (S1)
; x end address is: 0 (S0)
; x start address is: 20 (S5)
; y start address is: 16 (S4)
;__Lib_CMath.c, 398 :: 		
; sign start address is: 0 (R0)
0x0FD2	0x2000    MOVS	R0, #0
;__Lib_CMath.c, 402 :: 		
0x0FD4	0xEEB52AC0  VCMPE.F32	S4, #0.0
0x0FD8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0FDC	0xD102    BNE	L_pow60
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__Lib_CMath.c, 403 :: 		
0x0FDE	0xEEB70A00  VMOV.F32	S0, #1
0x0FE2	0xE03E    B	L_end_pow
L_pow60:
;__Lib_CMath.c, 404 :: 		
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x0FE4	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x0FE8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0FEC	0xD104    BNE	L_pow61
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__Lib_CMath.c, 405 :: 		
0x0FEE	0xF04F0200  MOV	R2, #0
0x0FF2	0xEE002A10  VMOV	S0, R2
0x0FF6	0xE034    B	L_end_pow
L_pow61:
;__Lib_CMath.c, 406 :: 		
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x0FF8	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x0FFC	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1000	0xDA1B    BGE	L__pow80
; sign end address is: 0 (R0)
;__Lib_CMath.c, 407 :: 		
0x1002	0xEEBD0A42  VCVT.S32.F32	S0, S4
0x1006	0xEE102A10  VMOV	R2, S0
; yi start address is: 0 (R0)
0x100A	0x4610    MOV	R0, R2
;__Lib_CMath.c, 408 :: 		
0x100C	0xEE002A10  VMOV	S0, R2
0x1010	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1014	0xEEB40AC2  VCMPE.F32	S0, S4
0x1018	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x101C	0xD004    BEQ	L_pow63
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; yi end address is: 0 (R0)
;__Lib_CMath.c, 409 :: 		
0x101E	0xF04F0200  MOV	R2, #0
0x1022	0xEE002A10  VMOV	S0, R2
0x1026	0xE01C    B	L_end_pow
L_pow63:
;__Lib_CMath.c, 410 :: 		
; yi start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x1028	0xF0000201  AND	R2, R0, #1
; yi end address is: 0 (R0)
; sign start address is: 0 (R0)
0x102C	0xB2D0    UXTB	R0, R2
;__Lib_CMath.c, 411 :: 		
0x102E	0xEEF10A62  VNEG.F32	S1, S5
; x end address is: 20 (S5)
; x start address is: 4 (S1)
; sign end address is: 0 (R0)
; x end address is: 4 (S1)
0x1032	0xB2C5    UXTB	R5, R0
0x1034	0xEEB00A60  VMOV.F32	S0, S1
;__Lib_CMath.c, 412 :: 		
0x1038	0xE005    B	L_pow62
L__pow80:
;__Lib_CMath.c, 406 :: 		
0x103A	0xF88D0004  STRB	R0, [SP, #4]
0x103E	0xEEB00A62  VMOV.F32	S0, S5
0x1042	0xF89D5004  LDRB	R5, [SP, #4]
;__Lib_CMath.c, 412 :: 		
L_pow62:
;__Lib_CMath.c, 413 :: 		
; x start address is: 0 (S0)
; sign start address is: 20 (R5)
; x end address is: 0 (S0)
0x1046	0xF7FFFDC3  BL	_log+0
;__Lib_CMath.c, 414 :: 		
0x104A	0xEE200A02  VMUL.F32	S0, S0, S4
; y end address is: 16 (S4)
;__Lib_CMath.c, 415 :: 		
0x104E	0xF7FFFE4B  BL	_exp+0
; x start address is: 4 (S1)
0x1052	0xEEF00A40  VMOV.F32	S1, S0
;__Lib_CMath.c, 417 :: 		
0x1056	0xB115    CBZ	R5, L_pow64
; sign end address is: 20 (R5)
;__Lib_CMath.c, 418 :: 		
0x1058	0xEEB10A60  VNEG.F32	S0, S1
; x end address is: 4 (S1)
0x105C	0xE001    B	L_end_pow
L_pow64:
;__Lib_CMath.c, 419 :: 		
; x start address is: 4 (S1)
0x105E	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__Lib_CMath.c, 420 :: 		
L_end_pow:
0x1062	0xF8DDE000  LDR	LR, [SP, #0]
0x1066	0xB002    ADD	SP, SP, #8
0x1068	0x4770    BX	LR
; end of _pow
_log:
;__Lib_CMath.c, 365 :: 		
0x0BD0	0xB082    SUB	SP, SP, #8
0x0BD2	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
; x end address is: 0 (S0)
; x start address is: 0 (S0)
;__Lib_CMath.c, 381 :: 		
0x0BD6	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0BDA	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0BDE	0xDC04    BGT	L_log59
; x end address is: 0 (S0)
;__Lib_CMath.c, 382 :: 		
0x0BE0	0xF04F0100  MOV	R1, #0
0x0BE4	0xEE001A10  VMOV	S0, R1
0x0BE8	0xE022    B	L_end_log
L_log59:
;__Lib_CMath.c, 383 :: 		
; x start address is: 0 (S0)
0x0BEA	0xA901    ADD	R1, SP, #4
0x0BEC	0x4608    MOV	R0, R1
; x end address is: 0 (S0)
0x0BEE	0xF7FFFC3B  BL	_frexp+0
0x0BF2	0xEEF00A00  VMOV.F32	S1, #2
0x0BF6	0xEE600A20  VMUL.F32	S1, S0, S1
0x0BFA	0xEEB70A00  VMOV.F32	S0, #1
0x0BFE	0xEE300AC0  VSUB.F32	S0, S1, S0
;__Lib_CMath.c, 384 :: 		
0x0C02	0xF9BD1004  LDRSH	R1, [SP, #4]
0x0C06	0x1E49    SUBS	R1, R1, #1
0x0C08	0xF8AD1004  STRH	R1, [SP, #4]
;__Lib_CMath.c, 385 :: 		
0x0C0C	0x2108    MOVS	R1, #8
0x0C0E	0xB209    SXTH	R1, R1
0x0C10	0x4809    LDR	R0, [PC, #36]
0x0C12	0xF7FFFB99  BL	__Lib_CMath_eval_poly+0
;__Lib_CMath.c, 386 :: 		
0x0C16	0xF9BD1004  LDRSH	R1, [SP, #4]
0x0C1A	0xEE011A10  VMOV	S2, R1
0x0C1E	0xEEB81AC1  VCVT.F32.S32	S2, S2
0x0C22	0x4906    LDR	R1, [PC, #24]
0x0C24	0xEE001A90  VMOV	S1, R1
0x0C28	0xEE600A81  VMUL.F32	S1, S1, S2
0x0C2C	0xEE300A20  VADD.F32	S0, S0, S1
;__Lib_CMath.c, 388 :: 		
L_end_log:
0x0C30	0xF8DDE000  LDR	LR, [SP, #0]
0x0C34	0xB002    ADD	SP, SP, #8
0x0C36	0x4770    BX	LR
0x0C38	0x24180000  	log_coeff_L0+0
0x0C3C	0x72183F31  	#1060205080
; end of _log
_frexp:
;__Lib_CMath.c, 79 :: 		
; eptr start address is: 0 (R0)
0x0468	0xB082    SUB	SP, SP, #8
; value start address is: 0 (S0)
; eptr end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; eptr start address is: 0 (R0)
;__Lib_CMath.c, 83 :: 		
0x046A	0xED8D0A01  VSTR.32	S0, [SP, #4]
; value end address is: 0 (S0)
;__Lib_CMath.c, 84 :: 		
0x046E	0xF8BD1006  LDRH	R1, [SP, #6]
0x0472	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0476	0x397E    SUBS	R1, #126
; bb start address is: 4 (R1)
0x0478	0xB209    SXTH	R1, R1
;__Lib_CMath.c, 85 :: 		
0x047A	0x8001    STRH	R1, [R0, #0]
; eptr end address is: 0 (R0)
; bb end address is: 4 (R1)
;__Lib_CMath.c, 86 :: 		
0x047C	0x227E    MOVS	R2, #126
0x047E	0xF8BD1006  LDRH	R1, [SP, #6]
0x0482	0xF36211CE  BFI	R1, R2, #7, #8
0x0486	0xF8AD1006  STRH	R1, [SP, #6]
;__Lib_CMath.c, 87 :: 		
0x048A	0xED9D0A01  VLDR.32	S0, [SP, #4]
;__Lib_CMath.c, 94 :: 		
L_end_frexp:
0x048E	0xB002    ADD	SP, SP, #8
0x0490	0x4770    BX	LR
; end of _frexp
__Lib_CMath_eval_poly:
;__Lib_CMath.c, 117 :: 		
; n start address is: 4 (R1)
; d start address is: 0 (R0)
0x0348	0xB081    SUB	SP, SP, #4
; x start address is: 0 (S0)
0x034A	0xEEF00A40  VMOV.F32	S1, S0
; n end address is: 4 (R1)
; d end address is: 0 (R0)
; x end address is: 0 (S0)
; x start address is: 4 (S1)
; d start address is: 0 (R0)
; n start address is: 4 (R1)
;__Lib_CMath.c, 120 :: 		
0x034E	0x008A    LSLS	R2, R1, #2
0x0350	0x1882    ADDS	R2, R0, R2
0x0352	0xED120A00  VLDR.32	S0, [R2, #0]
; res start address is: 8 (S2)
0x0356	0xEEB01A40  VMOV.F32	S2, S0
; x end address is: 4 (S1)
; res end address is: 8 (S2)
; n end address is: 4 (R1)
0x035A	0xEEB00A41  VMOV.F32	S0, S2
0x035E	0xEEB01A60  VMOV.F32	S2, S1
;__Lib_CMath.c, 121 :: 		
L___Lib_CMath_eval_poly17:
; res start address is: 0 (S0)
; x start address is: 8 (S2)
; n start address is: 4 (R1)
; d start address is: 0 (R0)
; d end address is: 0 (R0)
; x start address is: 8 (S2)
; x end address is: 8 (S2)
0x0362	0xB179    CBZ	R1, L___Lib_CMath_eval_poly18
; d end address is: 0 (R0)
; x end address is: 8 (S2)
;__Lib_CMath.c, 122 :: 		
; x start address is: 8 (S2)
; d start address is: 0 (R0)
0x0364	0xEE610A00  VMUL.F32	S1, S2, S0
; res end address is: 0 (S0)
0x0368	0x1E4A    SUBS	R2, R1, #1
0x036A	0xB212    SXTH	R2, R2
0x036C	0xB211    SXTH	R1, R2
0x036E	0x0092    LSLS	R2, R2, #2
0x0370	0x1882    ADDS	R2, R0, R2
0x0372	0xED120A00  VLDR.32	S0, [R2, #0]
0x0376	0xEE300A80  VADD.F32	S0, S1, S0
; res start address is: 0 (S0)
0x037A	0xED0D0A00  VSTR.32	S0, [SP, #0]
; d end address is: 0 (R0)
; x end address is: 8 (S2)
; n end address is: 4 (R1)
0x037E	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0382	0xE7EE    B	L___Lib_CMath_eval_poly17
L___Lib_CMath_eval_poly18:
;__Lib_CMath.c, 124 :: 		
; res end address is: 0 (S0)
;__Lib_CMath.c, 125 :: 		
L_end_eval_poly:
0x0384	0xB001    ADD	SP, SP, #4
0x0386	0x4770    BX	LR
; end of __Lib_CMath_eval_poly
_exp:
;__Lib_CMath.c, 324 :: 		
0x0CE8	0xB081    SUB	SP, SP, #4
0x0CEA	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
0x0CEE	0xEEF01A40  VMOV.F32	S3, S0
; x end address is: 0 (S0)
; x start address is: 12 (S3)
;__Lib_CMath.c, 342 :: 		
0x0CF2	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x0CF6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0CFA	0xD102    BNE	L_exp53
; x end address is: 12 (S3)
;__Lib_CMath.c, 343 :: 		
0x0CFC	0xEEB70A00  VMOV.F32	S0, #1
0x0D00	0xE05C    B	L_end_exp
L_exp53:
;__Lib_CMath.c, 344 :: 		
; x start address is: 12 (S3)
0x0D02	0x4930    LDR	R1, [PC, #192]
0x0D04	0xEE001A10  VMOV	S0, R1
0x0D08	0xEEF41AC0  VCMPE.F32	S3, S0
0x0D0C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D10	0xDD03    BLE	L_exp54
; x end address is: 12 (S3)
;__Lib_CMath.c, 345 :: 		
0x0D12	0x492D    LDR	R1, [PC, #180]
0x0D14	0xEE001A10  VMOV	S0, R1
0x0D18	0xE050    B	L_end_exp
L_exp54:
;__Lib_CMath.c, 346 :: 		
; x start address is: 12 (S3)
0x0D1A	0x492C    LDR	R1, [PC, #176]
0x0D1C	0xEE001A10  VMOV	S0, R1
0x0D20	0xEEF41AC0  VCMPE.F32	S3, S0
0x0D24	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D28	0xDA04    BGE	L_exp55
; x end address is: 12 (S3)
;__Lib_CMath.c, 347 :: 		
0x0D2A	0xF04F0100  MOV	R1, #0
0x0D2E	0xEE001A10  VMOV	S0, R1
0x0D32	0xE043    B	L_end_exp
L_exp55:
;__Lib_CMath.c, 348 :: 		
; x start address is: 12 (S3)
0x0D34	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x0D38	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D3C	0xF2400100  MOVW	R1, #0
0x0D40	0xDA00    BGE	L__exp99
0x0D42	0x2101    MOVS	R1, #1
L__exp99:
; sign start address is: 12 (R3)
0x0D44	0xB2CB    UXTB	R3, R1
;__Lib_CMath.c, 349 :: 		
0x0D46	0xB2C9    UXTB	R1, R1
0x0D48	0xB111    CBZ	R1, L__exp79
;__Lib_CMath.c, 350 :: 		
0x0D4A	0xEEF10A61  VNEG.F32	S1, S3
; x end address is: 12 (S3)
; x start address is: 4 (S1)
; x end address is: 4 (S1)
0x0D4E	0xE001    B	L_exp56
L__exp79:
;__Lib_CMath.c, 349 :: 		
0x0D50	0xEEF00A61  VMOV.F32	S1, S3
;__Lib_CMath.c, 350 :: 		
L_exp56:
;__Lib_CMath.c, 351 :: 		
; x start address is: 4 (S1)
0x0D54	0x491E    LDR	R1, [PC, #120]
0x0D56	0xEE001A10  VMOV	S0, R1
0x0D5A	0xEE200A80  VMUL.F32	S0, S1, S0
; x end address is: 4 (S1)
; x start address is: 12 (S3)
0x0D5E	0xEEF01A40  VMOV.F32	S3, S0
;__Lib_CMath.c, 352 :: 		
0x0D62	0xF7FFFB11  BL	_floor+0
0x0D66	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x0D6A	0xEE101A10  VMOV	R1, S0
0x0D6E	0xB209    SXTH	R1, R1
; exp start address is: 16 (R4)
0x0D70	0xB20C    SXTH	R4, R1
;__Lib_CMath.c, 353 :: 		
0x0D72	0xEE001A10  VMOV	S0, R1
0x0D76	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x0D7A	0xEE310AC0  VSUB.F32	S0, S3, S0
; x end address is: 12 (S3)
;__Lib_CMath.c, 354 :: 		
0x0D7E	0x2109    MOVS	R1, #9
0x0D80	0xB209    SXTH	R1, R1
0x0D82	0x4814    LDR	R0, [PC, #80]
0x0D84	0xF7FFFAE0  BL	__Lib_CMath_eval_poly+0
0x0D88	0xB220    SXTH	R0, R4
; exp end address is: 16 (R4)
0x0D8A	0xF7FFFB3D  BL	_ldexp+0
; x start address is: 4 (S1)
0x0D8E	0xEEF00A40  VMOV.F32	S1, S0
;__Lib_CMath.c, 355 :: 		
0x0D92	0xB18B    CBZ	R3, L_exp57
; sign end address is: 12 (R3)
;__Lib_CMath.c, 356 :: 		
0x0D94	0x490C    LDR	R1, [PC, #48]
0x0D96	0xEE001A10  VMOV	S0, R1
0x0D9A	0xEEF40AC0  VCMPE.F32	S1, S0
0x0D9E	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0DA2	0xD104    BNE	L_exp58
; x end address is: 4 (S1)
;__Lib_CMath.c, 357 :: 		
0x0DA4	0xF04F0100  MOV	R1, #0
0x0DA8	0xEE001A10  VMOV	S0, R1
0x0DAC	0xE006    B	L_end_exp
L_exp58:
;__Lib_CMath.c, 358 :: 		
; x start address is: 4 (S1)
0x0DAE	0xEEB70A00  VMOV.F32	S0, #1
0x0DB2	0xEE800A20  VDIV.F32	S0, S0, S1
; x end address is: 4 (S1)
0x0DB6	0xE001    B	L_end_exp
;__Lib_CMath.c, 359 :: 		
L_exp57:
;__Lib_CMath.c, 360 :: 		
; x start address is: 4 (S1)
0x0DB8	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__Lib_CMath.c, 361 :: 		
L_end_exp:
0x0DBC	0xF8DDE000  LDR	LR, [SP, #0]
0x0DC0	0xB001    ADD	SP, SP, #4
0x0DC2	0x4770    BX	LR
0x0DC4	0xD4FE42B2  	#1119016190
0x0DC8	0xFFFF7F7F  	#2139095039
0x0DCC	0xAC50C2AE  	#-1028740016
0x0DD0	0xAA3B3FB8  	#1069066811
0x0DD4	0x23F00000  	exp_coeff_L0+0
; end of _exp
_floor:
;__Lib_CMath.c, 38 :: 		
0x0388	0xB082    SUB	SP, SP, #8
0x038A	0xED8D0A01  VSTR.32	S0, [SP, #4]
;__Lib_CMath.c, 42 :: 		
0x038E	0xA901    ADD	R1, SP, #4
0x0390	0x6809    LDR	R1, [R1, #0]
0x0392	0x0DC9    LSRS	R1, R1, #23
0x0394	0xF00101FF  AND	R1, R1, #255
;__Lib_CMath.c, 43 :: 		
0x0398	0xB209    SXTH	R1, R1
0x039A	0x397F    SUBS	R1, #127
0x039C	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x039E	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 44 :: 		
0x03A0	0x2900    CMP	R1, #0
0x03A2	0xDA0E    BGE	L_floor1
; expon end address is: 0 (R0)
;__Lib_CMath.c, 45 :: 		
0x03A4	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x03A8	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x03AC	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x03B0	0xDA02    BGE	L_floor2
;__Lib_CMath.c, 46 :: 		
0x03B2	0xEEBF0A00  VMOV.F32	S0, #-1
0x03B6	0xE024    B	L_end_floor
L_floor2:
;__Lib_CMath.c, 48 :: 		
0x03B8	0xF04F0100  MOV	R1, #0
0x03BC	0xEE001A10  VMOV	S0, R1
0x03C0	0xE01F    B	L_end_floor
L_floor1:
;__Lib_CMath.c, 49 :: 		
; expon start address is: 0 (R0)
0x03C2	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x03C4	0x2918    CMP	R1, #24
0x03C6	0xD902    BLS	L_floor4
;__Lib_CMath.c, 50 :: 		
0x03C8	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x03CC	0xE019    B	L_end_floor
L_floor4:
;__Lib_CMath.c, 51 :: 		
0x03CE	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x03D2	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x03D6	0xEE101A10  VMOV	R1, S0
0x03DA	0xEE001A90  VMOV	S1, R1
0x03DE	0xEEF80AE0  VCVT.F32.S32	S1, S1
; i start address is: 8 (S2)
0x03E2	0xEEB01A60  VMOV.F32	S2, S1
;__Lib_CMath.c, 53 :: 		
0x03E6	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x03EA	0xEEF40AC0  VCMPE.F32	S1, S0
0x03EE	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x03F2	0xDD04    BLE	L_floor5
;__Lib_CMath.c, 54 :: 		
0x03F4	0xEEB70A00  VMOV.F32	S0, #1
0x03F8	0xEE310A40  VSUB.F32	S0, S2, S0
; i end address is: 8 (S2)
0x03FC	0xE001    B	L_end_floor
L_floor5:
;__Lib_CMath.c, 55 :: 		
; i start address is: 8 (S2)
0x03FE	0xEEB00A41  VMOV.F32	S0, S2
; i end address is: 8 (S2)
;__Lib_CMath.c, 56 :: 		
L_end_floor:
0x0402	0xB002    ADD	SP, SP, #8
0x0404	0x4770    BX	LR
; end of _floor
_ldexp:
;__Lib_CMath.c, 97 :: 		
; newexp start address is: 0 (R0)
0x0408	0xB082    SUB	SP, SP, #8
; value start address is: 0 (S0)
; newexp end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; newexp start address is: 0 (R0)
;__Lib_CMath.c, 100 :: 		
0x040A	0xED8D0A01  VSTR.32	S0, [SP, #4]
;__Lib_CMath.c, 101 :: 		
0x040E	0xF8BD1006  LDRH	R1, [SP, #6]
0x0412	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0416	0x1841    ADDS	R1, R0, R1
0x0418	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 102 :: 		
0x041A	0xB209    SXTH	R1, R1
0x041C	0x2900    CMP	R1, #0
0x041E	0xDA04    BGE	L_ldexp11
; value end address is: 0 (S0)
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 103 :: 		
0x0420	0xF04F0100  MOV	R1, #0
0x0424	0xEE001A10  VMOV	S0, R1
0x0428	0xE019    B	L_end_ldexp
L_ldexp11:
;__Lib_CMath.c, 105 :: 		
; newexp start address is: 0 (R0)
; value start address is: 0 (S0)
0x042A	0xF1B00FFF  CMP	R0, #255
0x042E	0xDD0D    BLE	L_ldexp13
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 106 :: 		
0x0430	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0434	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0438	0xDA04    BGE	L_ldexp14
; value end address is: 0 (S0)
;__Lib_CMath.c, 107 :: 		
0x043A	0xF46F0100  MVN	R1, #8388608
0x043E	0xEE001A10  VMOV	S0, R1
0x0442	0xE00C    B	L_end_ldexp
L_ldexp14:
;__Lib_CMath.c, 109 :: 		
0x0444	0x4907    LDR	R1, [PC, #28]
0x0446	0xEE001A10  VMOV	S0, R1
0x044A	0xE008    B	L_end_ldexp
L_ldexp13:
;__Lib_CMath.c, 111 :: 		
; newexp start address is: 0 (R0)
0x044C	0xB282    UXTH	R2, R0
; newexp end address is: 0 (R0)
0x044E	0xF8BD1006  LDRH	R1, [SP, #6]
0x0452	0xF36211CE  BFI	R1, R2, #7, #8
0x0456	0xF8AD1006  STRH	R1, [SP, #6]
;__Lib_CMath.c, 112 :: 		
0x045A	0xED9D0A01  VLDR.32	S0, [SP, #4]
;__Lib_CMath.c, 114 :: 		
L_end_ldexp:
0x045E	0xB002    ADD	SP, SP, #8
0x0460	0x4770    BX	LR
0x0462	0xBF00    NOP
0x0464	0xFFFF7F7F  	#2139095039
; end of _ldexp
_calculateAccelAndGyroBiases:
;clicker_2_STM32.c, 160 :: 		void calculateAccelAndGyroBiases() {
0x1548	0xB096    SUB	SP, SP, #88
0x154A	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 163 :: 		int32_t gyro_bias[3] = {0, 0, 0}, accel_bias[3] = {0, 0, 0};
0x154E	0xF10D0B20  ADD	R11, SP, #32
0x1552	0xF10B0A2F  ADD	R10, R11, #47
0x1556	0xF8DFC3E4  LDR	R12, [PC, #996]
0x155A	0xF7FFFD9D  BL	___CC2DW+0
;clicker_2_STM32.c, 164 :: 		uint16_t  accelsensitivity = 16384;
;clicker_2_STM32.c, 165 :: 		uint16_t  gyrosensitivity  = 131;   // = 131 LSB/degrees/sec
;clicker_2_STM32.c, 166 :: 		int32_t accel_bias_reg[3] = {0, 0, 0}; // A place to hold the factory accelerometer trim biases
;clicker_2_STM32.c, 167 :: 		uint32_t mask = 1uL; // Define mask for temperature compensation bit 0 of lower byte of accelerometer bias registers
;clicker_2_STM32.c, 168 :: 		uint8_t mask_bit[3] = {0, 0, 0}; // Define array to hold mask bit for each accelerometer bias axis
;clicker_2_STM32.c, 171 :: 		writeByte(PWR_MGMT_1, 0x80);   // Reset MPU6050
0x155E	0x2180    MOVS	R1, #128
0x1560	0x206B    MOVS	R0, #107
0x1562	0xF7FFFD83  BL	_writeByte+0
;clicker_2_STM32.c, 172 :: 		Delay_ms(100);
0x1566	0xF64007FE  MOVW	R7, #2302
0x156A	0xF2C0073D  MOVT	R7, #61
0x156E	0xBF00    NOP
0x1570	0xBF00    NOP
L_calculateAccelAndGyroBiases6:
0x1572	0x1E7F    SUBS	R7, R7, #1
0x1574	0xD1FD    BNE	L_calculateAccelAndGyroBiases6
0x1576	0xBF00    NOP
0x1578	0xBF00    NOP
0x157A	0xBF00    NOP
;clicker_2_STM32.c, 174 :: 		writeByte(PWR_MGMT_1, 0x01);   // Set clock source to gyro x-axis
0x157C	0x2101    MOVS	R1, #1
0x157E	0x206B    MOVS	R0, #107
0x1580	0xF7FFFD74  BL	_writeByte+0
;clicker_2_STM32.c, 175 :: 		writeByte(PWR_MGMT_2, 0x00);   // Set low power sleep mode wake up frequency to 1.25Hz
0x1584	0x2100    MOVS	R1, #0
0x1586	0x206C    MOVS	R0, #108
0x1588	0xF7FFFD70  BL	_writeByte+0
;clicker_2_STM32.c, 176 :: 		Delay_ms(200);
0x158C	0xF24117FE  MOVW	R7, #4606
0x1590	0xF2C0077A  MOVT	R7, #122
0x1594	0xBF00    NOP
0x1596	0xBF00    NOP
L_calculateAccelAndGyroBiases8:
0x1598	0x1E7F    SUBS	R7, R7, #1
0x159A	0xD1FD    BNE	L_calculateAccelAndGyroBiases8
0x159C	0xBF00    NOP
0x159E	0xBF00    NOP
0x15A0	0xBF00    NOP
;clicker_2_STM32.c, 179 :: 		writeByte(INT_ENABLE, 0x00);   // Disable all interrupts
0x15A2	0x2100    MOVS	R1, #0
0x15A4	0x2038    MOVS	R0, #56
0x15A6	0xF7FFFD61  BL	_writeByte+0
;clicker_2_STM32.c, 180 :: 		writeByte(FIFO_EN, 0x00);      // Disable FIFO
0x15AA	0x2100    MOVS	R1, #0
0x15AC	0x2023    MOVS	R0, #35
0x15AE	0xF7FFFD5D  BL	_writeByte+0
;clicker_2_STM32.c, 181 :: 		writeByte(PWR_MGMT_1, 0x00);   // Turn on internal clock source
0x15B2	0x2100    MOVS	R1, #0
0x15B4	0x206B    MOVS	R0, #107
0x15B6	0xF7FFFD59  BL	_writeByte+0
;clicker_2_STM32.c, 182 :: 		writeByte(I2C_MST_CTRL, 0x00); // Disable I2C master
0x15BA	0x2100    MOVS	R1, #0
0x15BC	0x2024    MOVS	R0, #36
0x15BE	0xF7FFFD55  BL	_writeByte+0
;clicker_2_STM32.c, 183 :: 		writeByte(USER_CTRL, 0x00);    // Disable FIFO and I2C master modes
0x15C2	0x2100    MOVS	R1, #0
0x15C4	0x206A    MOVS	R0, #106
0x15C6	0xF7FFFD51  BL	_writeByte+0
;clicker_2_STM32.c, 184 :: 		writeByte(USER_CTRL, 0x0C);    // Reset FIFO and DMP
0x15CA	0x210C    MOVS	R1, #12
0x15CC	0x206A    MOVS	R0, #106
0x15CE	0xF7FFFD4D  BL	_writeByte+0
;clicker_2_STM32.c, 185 :: 		Delay_ms(15);
0x15D2	0xF24277BE  MOVW	R7, #10174
0x15D6	0xF2C00709  MOVT	R7, #9
L_calculateAccelAndGyroBiases10:
0x15DA	0x1E7F    SUBS	R7, R7, #1
0x15DC	0xD1FD    BNE	L_calculateAccelAndGyroBiases10
0x15DE	0xBF00    NOP
0x15E0	0xBF00    NOP
0x15E2	0xBF00    NOP
0x15E4	0xBF00    NOP
0x15E6	0xBF00    NOP
;clicker_2_STM32.c, 188 :: 		writeByte(CONFIG, 0x01);       // Set low-pass filter to 188 Hz
0x15E8	0x2101    MOVS	R1, #1
0x15EA	0x201A    MOVS	R0, #26
0x15EC	0xF7FFFD3E  BL	_writeByte+0
;clicker_2_STM32.c, 189 :: 		writeByte(SMPLRT_DIV, 0x00);   // Set sample rate to 1 kHz
0x15F0	0x2100    MOVS	R1, #0
0x15F2	0x2019    MOVS	R0, #25
0x15F4	0xF7FFFD3A  BL	_writeByte+0
;clicker_2_STM32.c, 190 :: 		writeByte(GYRO_CONFIG, 0x00);  // Set gyro full-scale to 250 degrees per second, maximum sensitivity
0x15F8	0x2100    MOVS	R1, #0
0x15FA	0x201B    MOVS	R0, #27
0x15FC	0xF7FFFD36  BL	_writeByte+0
;clicker_2_STM32.c, 191 :: 		writeByte(ACCEL_CONFIG, 0x00); // Set accelerometer full-scale to 2 g, maximum sensitivity
0x1600	0x2100    MOVS	R1, #0
0x1602	0x201C    MOVS	R0, #28
0x1604	0xF7FFFD32  BL	_writeByte+0
;clicker_2_STM32.c, 194 :: 		writeByte(USER_CTRL, 0x40);    // Enable FIFO
0x1608	0x2140    MOVS	R1, #64
0x160A	0x206A    MOVS	R0, #106
0x160C	0xF7FFFD2E  BL	_writeByte+0
;clicker_2_STM32.c, 195 :: 		writeByte(FIFO_EN, 0x78);      // Enable gyro and accelerometer sensors for FIFO  (max size 1024 bytes in MPU-6050)
0x1610	0x2178    MOVS	R1, #120
0x1612	0x2023    MOVS	R0, #35
0x1614	0xF7FFFD2A  BL	_writeByte+0
;clicker_2_STM32.c, 196 :: 		Delay_ms(80);                  // Capture 80 samples
0x1618	0xF24D37FE  MOVW	R7, #54270
0x161C	0xF2C00730  MOVT	R7, #48
L_calculateAccelAndGyroBiases12:
0x1620	0x1E7F    SUBS	R7, R7, #1
0x1622	0xD1FD    BNE	L_calculateAccelAndGyroBiases12
0x1624	0xBF00    NOP
0x1626	0xBF00    NOP
0x1628	0xBF00    NOP
0x162A	0xBF00    NOP
0x162C	0xBF00    NOP
;clicker_2_STM32.c, 199 :: 		writeByte(FIFO_EN, 0x00);             // Disable gyro and accelerometer sensors for FIFO
0x162E	0x2100    MOVS	R1, #0
0x1630	0x2023    MOVS	R0, #35
0x1632	0xF7FFFD1B  BL	_writeByte+0
;clicker_2_STM32.c, 200 :: 		readBytes(FIFO_COUNTH, 2, &data_[0]); // read FIFO sample count
0x1636	0xA802    ADD	R0, SP, #8
0x1638	0x4602    MOV	R2, R0
0x163A	0x2102    MOVS	R1, #2
0x163C	0xB209    SXTH	R1, R1
0x163E	0x2072    MOVS	R0, #114
0x1640	0xF7FFFE4C  BL	_readBytes+0
;clicker_2_STM32.c, 201 :: 		fifo_count = ((uint16_t)data_[0] << 8) | data_[1];
0x1644	0xAA02    ADD	R2, SP, #8
0x1646	0x7810    LDRB	R0, [R2, #0]
0x1648	0x0201    LSLS	R1, R0, #8
0x164A	0xB289    UXTH	R1, R1
0x164C	0x1C50    ADDS	R0, R2, #1
0x164E	0x7800    LDRB	R0, [R0, #0]
0x1650	0x4301    ORRS	R1, R0
0x1652	0xB289    UXTH	R1, R1
;clicker_2_STM32.c, 202 :: 		packet_count = fifo_count/12;          // How many sets of full gyro and accelerometer data for averaging
0x1654	0x200C    MOVS	R0, #12
0x1656	0xFBB1F0F0  UDIV	R0, R1, R0
; packet_count start address is: 32 (R8)
0x165A	0xFA1FF880  UXTH	R8, R0
;clicker_2_STM32.c, 204 :: 		for (ii = 0; ii < packet_count; ii++) {
; ii start address is: 40 (R10)
0x165E	0xF2400A00  MOVW	R10, #0
; packet_count end address is: 32 (R8)
; ii end address is: 40 (R10)
0x1662	0xFA1FF788  UXTH	R7, R8
0x1666	0xFA1FF68A  UXTH	R6, R10
L_calculateAccelAndGyroBiases14:
; ii start address is: 24 (R6)
; packet_count start address is: 28 (R7)
0x166A	0x42BE    CMP	R6, R7
0x166C	0xF0808090  BCS	L_calculateAccelAndGyroBiases15
;clicker_2_STM32.c, 205 :: 		int16_t accel_temp[3] = {0, 0, 0}, gyro_temp[3] = {0, 0, 0};
0x1670	0xF10D0B14  ADD	R11, SP, #20
0x1674	0xF10B0A0C  ADD	R10, R11, #12
0x1678	0xF8DFC2C4  LDR	R12, [PC, #708]
0x167C	0xF7FFFD0C  BL	___CC2DW+0
;clicker_2_STM32.c, 207 :: 		readBytes(FIFO_R_W, 12, &data_[0]); // read data for averaging
0x1680	0xA802    ADD	R0, SP, #8
0x1682	0x9015    STR	R0, [SP, #84]
0x1684	0xF8AD7004  STRH	R7, [SP, #4]
0x1688	0xF8AD6006  STRH	R6, [SP, #6]
0x168C	0x4602    MOV	R2, R0
0x168E	0x210C    MOVS	R1, #12
0x1690	0xB209    SXTH	R1, R1
0x1692	0x2074    MOVS	R0, #116
0x1694	0xF7FFFE22  BL	_readBytes+0
0x1698	0xF8BD6006  LDRH	R6, [SP, #6]
0x169C	0xF8BD7004  LDRH	R7, [SP, #4]
;clicker_2_STM32.c, 209 :: 		accel_temp[0] = (int16_t) (((int16_t)data_[0] << 8) | data_[1]  ) ;  // Form signed 16-bit integer for each sample in FIFO
0x16A0	0xAD05    ADD	R5, SP, #20
0x16A2	0xAA02    ADD	R2, SP, #8
0x16A4	0x7810    LDRB	R0, [R2, #0]
0x16A6	0x0201    LSLS	R1, R0, #8
0x16A8	0xB209    SXTH	R1, R1
0x16AA	0x1C50    ADDS	R0, R2, #1
0x16AC	0x7800    LDRB	R0, [R0, #0]
0x16AE	0xEA410000  ORR	R0, R1, R0, LSL #0
0x16B2	0x8028    STRH	R0, [R5, #0]
;clicker_2_STM32.c, 210 :: 		accel_temp[1] = (int16_t) (((int16_t)data_[2] << 8) | data_[3]  ) ;
0x16B4	0x1CAA    ADDS	R2, R5, #2
0x16B6	0x9B15    LDR	R3, [SP, #84]
0x16B8	0x1C98    ADDS	R0, R3, #2
0x16BA	0x7800    LDRB	R0, [R0, #0]
0x16BC	0x0201    LSLS	R1, R0, #8
0x16BE	0xB209    SXTH	R1, R1
0x16C0	0x1CD8    ADDS	R0, R3, #3
0x16C2	0x7800    LDRB	R0, [R0, #0]
0x16C4	0xEA410000  ORR	R0, R1, R0, LSL #0
0x16C8	0x8010    STRH	R0, [R2, #0]
;clicker_2_STM32.c, 211 :: 		accel_temp[2] = (int16_t) (((int16_t)data_[4] << 8) | data_[5]  ) ;
0x16CA	0x1D2A    ADDS	R2, R5, #4
0x16CC	0x1D18    ADDS	R0, R3, #4
0x16CE	0x7800    LDRB	R0, [R0, #0]
0x16D0	0x0201    LSLS	R1, R0, #8
0x16D2	0xB209    SXTH	R1, R1
0x16D4	0x1D58    ADDS	R0, R3, #5
0x16D6	0x7800    LDRB	R0, [R0, #0]
0x16D8	0xEA410000  ORR	R0, R1, R0, LSL #0
0x16DC	0x8010    STRH	R0, [R2, #0]
;clicker_2_STM32.c, 212 :: 		gyro_temp[0]  = (int16_t) (((int16_t)data_[6] << 8) | data_[7]  ) ;
0x16DE	0xF10D041A  ADD	R4, SP, #26
0x16E2	0x1D98    ADDS	R0, R3, #6
0x16E4	0x7800    LDRB	R0, [R0, #0]
0x16E6	0x0201    LSLS	R1, R0, #8
0x16E8	0xB209    SXTH	R1, R1
0x16EA	0x1DD8    ADDS	R0, R3, #7
0x16EC	0x7800    LDRB	R0, [R0, #0]
0x16EE	0xEA410000  ORR	R0, R1, R0, LSL #0
0x16F2	0x8020    STRH	R0, [R4, #0]
;clicker_2_STM32.c, 213 :: 		gyro_temp[1]  = (int16_t) (((int16_t)data_[8] << 8) | data_[9]  ) ;
0x16F4	0x1CA2    ADDS	R2, R4, #2
0x16F6	0xF2030008  ADDW	R0, R3, #8
0x16FA	0x7800    LDRB	R0, [R0, #0]
0x16FC	0x0201    LSLS	R1, R0, #8
0x16FE	0xB209    SXTH	R1, R1
0x1700	0xF2030009  ADDW	R0, R3, #9
0x1704	0x7800    LDRB	R0, [R0, #0]
0x1706	0xEA410000  ORR	R0, R1, R0, LSL #0
0x170A	0x8010    STRH	R0, [R2, #0]
;clicker_2_STM32.c, 214 :: 		gyro_temp[2]  = (int16_t) (((int16_t)data_[10] << 8) | data_[11]) ;
0x170C	0x1D22    ADDS	R2, R4, #4
0x170E	0xF203000A  ADDW	R0, R3, #10
0x1712	0x7800    LDRB	R0, [R0, #0]
0x1714	0x0201    LSLS	R1, R0, #8
0x1716	0xB209    SXTH	R1, R1
0x1718	0xF203000B  ADDW	R0, R3, #11
0x171C	0x7800    LDRB	R0, [R0, #0]
0x171E	0xEA410000  ORR	R0, R1, R0, LSL #0
0x1722	0x8010    STRH	R0, [R2, #0]
;clicker_2_STM32.c, 216 :: 		accel_bias[0] += (int32_t) accel_temp[0]; // Sum individual signed 16-bit biases to get accumulated signed 32-bit biases
0x1724	0xAB0B    ADD	R3, SP, #44
0x1726	0xF9B50000  LDRSH	R0, [R5, #0]
0x172A	0xB201    SXTH	R1, R0
0x172C	0x6818    LDR	R0, [R3, #0]
0x172E	0x1840    ADDS	R0, R0, R1
0x1730	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 217 :: 		accel_bias[1] += (int32_t) accel_temp[1];
0x1732	0x1D1A    ADDS	R2, R3, #4
0x1734	0x1CA8    ADDS	R0, R5, #2
0x1736	0xF9B00000  LDRSH	R0, [R0, #0]
0x173A	0xB201    SXTH	R1, R0
0x173C	0x6810    LDR	R0, [R2, #0]
0x173E	0x1840    ADDS	R0, R0, R1
0x1740	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 218 :: 		accel_bias[2] += (int32_t) accel_temp[2];
0x1742	0xF2030208  ADDW	R2, R3, #8
0x1746	0x1D28    ADDS	R0, R5, #4
0x1748	0xF9B00000  LDRSH	R0, [R0, #0]
0x174C	0xB201    SXTH	R1, R0
0x174E	0x6810    LDR	R0, [R2, #0]
0x1750	0x1840    ADDS	R0, R0, R1
0x1752	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 219 :: 		gyro_bias[0]  += (int32_t) gyro_temp[0];
0x1754	0xAB08    ADD	R3, SP, #32
0x1756	0xF9B40000  LDRSH	R0, [R4, #0]
0x175A	0xB201    SXTH	R1, R0
0x175C	0x6818    LDR	R0, [R3, #0]
0x175E	0x1840    ADDS	R0, R0, R1
0x1760	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 220 :: 		gyro_bias[1]  += (int32_t) gyro_temp[1];
0x1762	0x1D1A    ADDS	R2, R3, #4
0x1764	0x1CA0    ADDS	R0, R4, #2
0x1766	0xF9B00000  LDRSH	R0, [R0, #0]
0x176A	0xB201    SXTH	R1, R0
0x176C	0x6810    LDR	R0, [R2, #0]
0x176E	0x1840    ADDS	R0, R0, R1
0x1770	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 221 :: 		gyro_bias[2]  += (int32_t) gyro_temp[2];
0x1772	0xF2030208  ADDW	R2, R3, #8
0x1776	0x1D20    ADDS	R0, R4, #4
0x1778	0xF9B00000  LDRSH	R0, [R0, #0]
0x177C	0xB201    SXTH	R1, R0
0x177E	0x6810    LDR	R0, [R2, #0]
0x1780	0x1840    ADDS	R0, R0, R1
0x1782	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 204 :: 		for (ii = 0; ii < packet_count; ii++) {
0x1784	0x1C70    ADDS	R0, R6, #1
; ii end address is: 24 (R6)
; ii start address is: 40 (R10)
0x1786	0xFA1FFA80  UXTH	R10, R0
;clicker_2_STM32.c, 222 :: 		}
; ii end address is: 40 (R10)
0x178A	0xFA1FF68A  UXTH	R6, R10
0x178E	0xE76C    B	L_calculateAccelAndGyroBiases14
L_calculateAccelAndGyroBiases15:
;clicker_2_STM32.c, 224 :: 		accel_bias[0] /= (int32_t) packet_count; // Normalize sums to get average count biases
0x1790	0xAC0B    ADD	R4, SP, #44
0x1792	0xB2B9    UXTH	R1, R7
0x1794	0x6820    LDR	R0, [R4, #0]
0x1796	0xFB90F0F1  SDIV	R0, R0, R1
0x179A	0x6020    STR	R0, [R4, #0]
;clicker_2_STM32.c, 225 :: 		accel_bias[1] /= (int32_t) packet_count;
0x179C	0x1D22    ADDS	R2, R4, #4
0x179E	0xB2B9    UXTH	R1, R7
0x17A0	0x6810    LDR	R0, [R2, #0]
0x17A2	0xFB90F0F1  SDIV	R0, R0, R1
0x17A6	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 226 :: 		accel_bias[2] /= (int32_t) packet_count;
0x17A8	0xF2040208  ADDW	R2, R4, #8
0x17AC	0xB2B9    UXTH	R1, R7
0x17AE	0x6810    LDR	R0, [R2, #0]
0x17B0	0xFB90F0F1  SDIV	R0, R0, R1
0x17B4	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 227 :: 		gyro_bias[0]  /= (int32_t) packet_count;
0x17B6	0xAB08    ADD	R3, SP, #32
0x17B8	0xB2B9    UXTH	R1, R7
0x17BA	0x6818    LDR	R0, [R3, #0]
0x17BC	0xFB90F0F1  SDIV	R0, R0, R1
0x17C0	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 228 :: 		gyro_bias[1]  /= (int32_t) packet_count;
0x17C2	0x1D1A    ADDS	R2, R3, #4
0x17C4	0xB2B9    UXTH	R1, R7
0x17C6	0x6810    LDR	R0, [R2, #0]
0x17C8	0xFB90F0F1  SDIV	R0, R0, R1
0x17CC	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 229 :: 		gyro_bias[2]  /= (int32_t) packet_count;
0x17CE	0xF2030208  ADDW	R2, R3, #8
0x17D2	0xB2B9    UXTH	R1, R7
; packet_count end address is: 28 (R7)
0x17D4	0x6810    LDR	R0, [R2, #0]
0x17D6	0xFB90F0F1  SDIV	R0, R0, R1
0x17DA	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 231 :: 		if(accel_bias[2] > 0L) {accel_bias[2] -= (int32_t) accelsensitivity;}  // Remove gravity from the z-axis accelerometer bias calculation
0x17DC	0xF2040008  ADDW	R0, R4, #8
0x17E0	0x6800    LDR	R0, [R0, #0]
0x17E2	0x2800    CMP	R0, #0
0x17E4	0xDD08    BLE	L_calculateAccelAndGyroBiases17
0x17E6	0xA80B    ADD	R0, SP, #44
0x17E8	0xF2000208  ADDW	R2, R0, #8
0x17EC	0xF8BD1038  LDRH	R1, [SP, #56]
0x17F0	0x6810    LDR	R0, [R2, #0]
0x17F2	0x1A40    SUB	R0, R0, R1
0x17F4	0x6010    STR	R0, [R2, #0]
0x17F6	0xE007    B	L_calculateAccelAndGyroBiases18
L_calculateAccelAndGyroBiases17:
;clicker_2_STM32.c, 232 :: 		else {accel_bias[2] += (int32_t) accelsensitivity;}
0x17F8	0xA80B    ADD	R0, SP, #44
0x17FA	0xF2000208  ADDW	R2, R0, #8
0x17FE	0xF8BD1038  LDRH	R1, [SP, #56]
0x1802	0x6810    LDR	R0, [R2, #0]
0x1804	0x1840    ADDS	R0, R0, R1
0x1806	0x6010    STR	R0, [R2, #0]
L_calculateAccelAndGyroBiases18:
;clicker_2_STM32.c, 235 :: 		data_[0] = (-gyro_bias[0]/4  >> 8) & 0xFF; // Divide by 4 to get 32.9 LSB per deg/s to conform to expected bias input format
0x1808	0xAB02    ADD	R3, SP, #8
0x180A	0x9315    STR	R3, [SP, #84]
0x180C	0xAA08    ADD	R2, SP, #32
0x180E	0x6810    LDR	R0, [R2, #0]
0x1810	0x4240    RSBS	R0, R0, #0
0x1812	0x1080    ASRS	R0, R0, #2
0x1814	0x1200    ASRS	R0, R0, #8
0x1816	0xF00000FF  AND	R0, R0, #255
0x181A	0x7018    STRB	R0, [R3, #0]
;clicker_2_STM32.c, 236 :: 		data_[1] = (-gyro_bias[0]/4)       & 0xFF; // Biases are additive, so change sign on calculated average gyro biases
0x181C	0x1C59    ADDS	R1, R3, #1
0x181E	0x6810    LDR	R0, [R2, #0]
0x1820	0x4240    RSBS	R0, R0, #0
0x1822	0x1080    ASRS	R0, R0, #2
0x1824	0xF00000FF  AND	R0, R0, #255
0x1828	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 237 :: 		data_[2] = (-gyro_bias[1]/4  >> 8) & 0xFF;
0x182A	0x1C99    ADDS	R1, R3, #2
0x182C	0x1D10    ADDS	R0, R2, #4
0x182E	0x6800    LDR	R0, [R0, #0]
0x1830	0x4240    RSBS	R0, R0, #0
0x1832	0x1080    ASRS	R0, R0, #2
0x1834	0x1200    ASRS	R0, R0, #8
0x1836	0xF00000FF  AND	R0, R0, #255
0x183A	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 238 :: 		data_[3] = (-gyro_bias[1]/4)       & 0xFF;
0x183C	0x1CD9    ADDS	R1, R3, #3
0x183E	0x1D10    ADDS	R0, R2, #4
0x1840	0x6800    LDR	R0, [R0, #0]
0x1842	0x4240    RSBS	R0, R0, #0
0x1844	0x1080    ASRS	R0, R0, #2
0x1846	0xF00000FF  AND	R0, R0, #255
0x184A	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 239 :: 		data_[4] = (-gyro_bias[2]/4  >> 8) & 0xFF;
0x184C	0x1D19    ADDS	R1, R3, #4
0x184E	0xF2020008  ADDW	R0, R2, #8
0x1852	0x6800    LDR	R0, [R0, #0]
0x1854	0x4240    RSBS	R0, R0, #0
0x1856	0x1080    ASRS	R0, R0, #2
0x1858	0x1200    ASRS	R0, R0, #8
0x185A	0xF00000FF  AND	R0, R0, #255
0x185E	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 240 :: 		data_[5] = (-gyro_bias[2]/4)       & 0xFF;
0x1860	0x1D59    ADDS	R1, R3, #5
0x1862	0xF2020008  ADDW	R0, R2, #8
0x1866	0x6800    LDR	R0, [R0, #0]
0x1868	0x4240    RSBS	R0, R0, #0
0x186A	0x1080    ASRS	R0, R0, #2
0x186C	0xF00000FF  AND	R0, R0, #255
0x1870	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 242 :: 		bgx = (float) gyro_bias[0]/(float) gyrosensitivity; // construct gyro bias in deg/s for later manual subtraction
0x1872	0x6810    LDR	R0, [R2, #0]
0x1874	0xEE000A10  VMOV	S0, R0
0x1878	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x187C	0xF8BD003A  LDRH	R0, [SP, #58]
0x1880	0xEE000A90  VMOV	S1, R0
0x1884	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1888	0xEE800A20  VDIV.F32	S0, S0, S1
0x188C	0x482D    LDR	R0, [PC, #180]
0x188E	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 243 :: 		bgy = (float) gyro_bias[1]/(float) gyrosensitivity;
0x1892	0x1D10    ADDS	R0, R2, #4
0x1894	0x6800    LDR	R0, [R0, #0]
0x1896	0xEE000A10  VMOV	S0, R0
0x189A	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x189E	0xEE800A20  VDIV.F32	S0, S0, S1
0x18A2	0x4829    LDR	R0, [PC, #164]
0x18A4	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 244 :: 		bgz = (float) gyro_bias[2]/(float) gyrosensitivity;
0x18A8	0xF2020008  ADDW	R0, R2, #8
0x18AC	0x6800    LDR	R0, [R0, #0]
0x18AE	0xEE000A10  VMOV	S0, R0
0x18B2	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x18B6	0xEE800A20  VDIV.F32	S0, S0, S1
0x18BA	0x4824    LDR	R0, [PC, #144]
0x18BC	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 253 :: 		readBytes(XA_OFFSET_H, 2, &data_[0]); // Read factory accelerometer trim values
0x18C0	0x461A    MOV	R2, R3
0x18C2	0x2102    MOVS	R1, #2
0x18C4	0xB209    SXTH	R1, R1
0x18C6	0x2006    MOVS	R0, #6
0x18C8	0xF7FFFD08  BL	_readBytes+0
;clicker_2_STM32.c, 254 :: 		accel_bias_reg[0] = (int16_t) ((int16_t)data_[0] << 8) | data_[1];
0x18CC	0xAB0F    ADD	R3, SP, #60
0x18CE	0xAA02    ADD	R2, SP, #8
0x18D0	0x7810    LDRB	R0, [R2, #0]
0x18D2	0x0201    LSLS	R1, R0, #8
0x18D4	0xB209    SXTH	R1, R1
0x18D6	0x1C50    ADDS	R0, R2, #1
0x18D8	0x7800    LDRB	R0, [R0, #0]
0x18DA	0xEA410000  ORR	R0, R1, R0, LSL #0
0x18DE	0xB200    SXTH	R0, R0
0x18E0	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 255 :: 		readBytes(YA_OFFSET_H, 2, &data_[0]);
0x18E2	0x9815    LDR	R0, [SP, #84]
0x18E4	0x4602    MOV	R2, R0
0x18E6	0x2102    MOVS	R1, #2
0x18E8	0xB209    SXTH	R1, R1
0x18EA	0x2008    MOVS	R0, #8
0x18EC	0xF7FFFCF6  BL	_readBytes+0
;clicker_2_STM32.c, 256 :: 		accel_bias_reg[1] = (int16_t) ((int16_t)data_[0] << 8) | data_[1];
0x18F0	0xA80F    ADD	R0, SP, #60
0x18F2	0x1D03    ADDS	R3, R0, #4
0x18F4	0xAA02    ADD	R2, SP, #8
0x18F6	0x7810    LDRB	R0, [R2, #0]
0x18F8	0x0201    LSLS	R1, R0, #8
0x18FA	0xB209    SXTH	R1, R1
0x18FC	0x1C50    ADDS	R0, R2, #1
0x18FE	0x7800    LDRB	R0, [R0, #0]
0x1900	0xEA410000  ORR	R0, R1, R0, LSL #0
0x1904	0xB200    SXTH	R0, R0
0x1906	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 257 :: 		readBytes(ZA_OFFSET_H, 2, &data_[0]);
0x1908	0x9815    LDR	R0, [SP, #84]
0x190A	0x4602    MOV	R2, R0
0x190C	0x2102    MOVS	R1, #2
0x190E	0xB209    SXTH	R1, R1
0x1910	0x200A    MOVS	R0, #10
0x1912	0xF7FFFCE3  BL	_readBytes+0
;clicker_2_STM32.c, 258 :: 		accel_bias_reg[2] = (int16_t) ((int16_t)data_[0] << 8) | data_[1];
0x1916	0xA80F    ADD	R0, SP, #60
0x1918	0xF2000308  ADDW	R3, R0, #8
0x191C	0xAA02    ADD	R2, SP, #8
0x191E	0x7810    LDRB	R0, [R2, #0]
0x1920	0x0201    LSLS	R1, R0, #8
0x1922	0xB209    SXTH	R1, R1
0x1924	0x1C50    ADDS	R0, R2, #1
0x1926	0x7800    LDRB	R0, [R0, #0]
0x1928	0xEA410000  ORR	R0, R1, R0, LSL #0
0x192C	0xB200    SXTH	R0, R0
0x192E	0x6018    STR	R0, [R3, #0]
;clicker_2_STM32.c, 260 :: 		for(ii = 0; ii < 3; ii++) {
; ii start address is: 12 (R3)
0x1930	0x2300    MOVS	R3, #0
; ii end address is: 12 (R3)
0x1932	0xB29A    UXTH	R2, R3
L_calculateAccelAndGyroBiases19:
; ii start address is: 8 (R2)
0x1934	0x2A03    CMP	R2, #3
0x1936	0xD21A    BCS	L_calculateAccelAndGyroBiases20
;clicker_2_STM32.c, 261 :: 		if(accel_bias_reg[ii] & mask) mask_bit[ii] = 0x01; // If temperature compensation bit is set, record that fact in mask_bit
0x1938	0xA90F    ADD	R1, SP, #60
0x193A	0xE009    B	#18
0x193C	0x23C00000  	?ICScalculateAccelAndGyroBiases_gyro_bias_L0+0
0x1940	0x23B40000  	?ICScalculateAccelAndGyroBiases_accel_temp_L1+0
0x1944	0x005C2000  	_bgx+0
0x1948	0x00602000  	_bgy+0
0x194C	0x00642000  	_bgz+0
0x1950	0x0090    LSLS	R0, R2, #2
0x1952	0x1808    ADDS	R0, R1, R0
0x1954	0x6801    LDR	R1, [R0, #0]
0x1956	0x9812    LDR	R0, [SP, #72]
0x1958	0xEA010000  AND	R0, R1, R0, LSL #0
0x195C	0xB118    CBZ	R0, L_calculateAccelAndGyroBiases22
0x195E	0xA813    ADD	R0, SP, #76
0x1960	0x1881    ADDS	R1, R0, R2
0x1962	0x2001    MOVS	R0, #1
0x1964	0x7008    STRB	R0, [R1, #0]
L_calculateAccelAndGyroBiases22:
;clicker_2_STM32.c, 260 :: 		for(ii = 0; ii < 3; ii++) {
0x1966	0x1C50    ADDS	R0, R2, #1
; ii end address is: 8 (R2)
; ii start address is: 12 (R3)
0x1968	0xB283    UXTH	R3, R0
;clicker_2_STM32.c, 262 :: 		}
0x196A	0xB29A    UXTH	R2, R3
; ii end address is: 12 (R3)
0x196C	0xE7E2    B	L_calculateAccelAndGyroBiases19
L_calculateAccelAndGyroBiases20:
;clicker_2_STM32.c, 265 :: 		accel_bias_reg[0] -= (accel_bias[0]/8); // Subtract calculated averaged accelerometer bias scaled to 2048 LSB/g (16 g full scale)
0x196E	0xAE0F    ADD	R6, SP, #60
0x1970	0xAD0B    ADD	R5, SP, #44
0x1972	0x6828    LDR	R0, [R5, #0]
0x1974	0x10C1    ASRS	R1, R0, #3
0x1976	0x6830    LDR	R0, [R6, #0]
0x1978	0x1A40    SUB	R0, R0, R1
0x197A	0x6030    STR	R0, [R6, #0]
;clicker_2_STM32.c, 266 :: 		accel_bias_reg[1] -= (accel_bias[1]/8);
0x197C	0x1D32    ADDS	R2, R6, #4
0x197E	0x1D28    ADDS	R0, R5, #4
0x1980	0x6800    LDR	R0, [R0, #0]
0x1982	0x10C1    ASRS	R1, R0, #3
0x1984	0x6810    LDR	R0, [R2, #0]
0x1986	0x1A40    SUB	R0, R0, R1
0x1988	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 267 :: 		accel_bias_reg[2] -= (accel_bias[2]/8);
0x198A	0xF2060208  ADDW	R2, R6, #8
0x198E	0xF2050008  ADDW	R0, R5, #8
0x1992	0x6800    LDR	R0, [R0, #0]
0x1994	0x10C1    ASRS	R1, R0, #3
0x1996	0x6810    LDR	R0, [R2, #0]
0x1998	0x1A40    SUB	R0, R0, R1
0x199A	0x6010    STR	R0, [R2, #0]
;clicker_2_STM32.c, 269 :: 		data_[0] = (accel_bias_reg[0] >> 8) & 0xFF;
0x199C	0xAC02    ADD	R4, SP, #8
0x199E	0x6830    LDR	R0, [R6, #0]
0x19A0	0x1200    ASRS	R0, R0, #8
0x19A2	0xF00000FF  AND	R0, R0, #255
0x19A6	0x7020    STRB	R0, [R4, #0]
;clicker_2_STM32.c, 270 :: 		data_[1] = (accel_bias_reg[0])      & 0xFF;
0x19A8	0x1C61    ADDS	R1, R4, #1
0x19AA	0x6830    LDR	R0, [R6, #0]
0x19AC	0xF00000FF  AND	R0, R0, #255
0x19B0	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 271 :: 		data_[1] = data_[1] | mask_bit[0]; // preserve temperature compensation bit when writing back to accelerometer bias registers
0x19B2	0x1C62    ADDS	R2, R4, #1
0x19B4	0x7811    LDRB	R1, [R2, #0]
0x19B6	0xAB13    ADD	R3, SP, #76
0x19B8	0x7818    LDRB	R0, [R3, #0]
0x19BA	0xEA410000  ORR	R0, R1, R0, LSL #0
0x19BE	0x7010    STRB	R0, [R2, #0]
;clicker_2_STM32.c, 272 :: 		data_[2] = (accel_bias_reg[1] >> 8) & 0xFF;
0x19C0	0x1CA1    ADDS	R1, R4, #2
0x19C2	0x1D30    ADDS	R0, R6, #4
0x19C4	0x6800    LDR	R0, [R0, #0]
0x19C6	0x1200    ASRS	R0, R0, #8
0x19C8	0xF00000FF  AND	R0, R0, #255
0x19CC	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 273 :: 		data_[3] = (accel_bias_reg[1])      & 0xFF;
0x19CE	0x1CE1    ADDS	R1, R4, #3
0x19D0	0x1D30    ADDS	R0, R6, #4
0x19D2	0x6800    LDR	R0, [R0, #0]
0x19D4	0xF00000FF  AND	R0, R0, #255
0x19D8	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 274 :: 		data_[3] = data_[3] | mask_bit[1]; // preserve temperature compensation bit when writing back to accelerometer bias registers
0x19DA	0x1CE2    ADDS	R2, R4, #3
0x19DC	0x7811    LDRB	R1, [R2, #0]
0x19DE	0x1C58    ADDS	R0, R3, #1
0x19E0	0x7800    LDRB	R0, [R0, #0]
0x19E2	0xEA410000  ORR	R0, R1, R0, LSL #0
0x19E6	0x7010    STRB	R0, [R2, #0]
;clicker_2_STM32.c, 275 :: 		data_[4] = (accel_bias_reg[2] >> 8) & 0xFF;
0x19E8	0x1D21    ADDS	R1, R4, #4
0x19EA	0xF2060008  ADDW	R0, R6, #8
0x19EE	0x6800    LDR	R0, [R0, #0]
0x19F0	0x1200    ASRS	R0, R0, #8
0x19F2	0xF00000FF  AND	R0, R0, #255
0x19F6	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 276 :: 		data_[5] = (accel_bias_reg[2])      & 0xFF;
0x19F8	0x1D61    ADDS	R1, R4, #5
0x19FA	0xF2060008  ADDW	R0, R6, #8
0x19FE	0x6800    LDR	R0, [R0, #0]
0x1A00	0xF00000FF  AND	R0, R0, #255
0x1A04	0x7008    STRB	R0, [R1, #0]
;clicker_2_STM32.c, 277 :: 		data_[5] = data_[5] | mask_bit[2]; // preserve temperature compensation bit when writing back to accelerometer bias registers
0x1A06	0x1D62    ADDS	R2, R4, #5
0x1A08	0x7811    LDRB	R1, [R2, #0]
0x1A0A	0x1C98    ADDS	R0, R3, #2
0x1A0C	0x7800    LDRB	R0, [R0, #0]
0x1A0E	0xEA410000  ORR	R0, R1, R0, LSL #0
0x1A12	0x7010    STRB	R0, [R2, #0]
;clicker_2_STM32.c, 281 :: 		bax = (float)accel_bias[0]/(float)accelsensitivity;
0x1A14	0x6828    LDR	R0, [R5, #0]
0x1A16	0xEE000A10  VMOV	S0, R0
0x1A1A	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1A1E	0xF8BD0038  LDRH	R0, [SP, #56]
0x1A22	0xEE000A90  VMOV	S1, R0
0x1A26	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1A2A	0xEE800A20  VDIV.F32	S0, S0, S1
0x1A2E	0x480F    LDR	R0, [PC, #60]
0x1A30	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 282 :: 		bay = (float)accel_bias[1]/(float)accelsensitivity;
0x1A34	0x1D28    ADDS	R0, R5, #4
0x1A36	0x6800    LDR	R0, [R0, #0]
0x1A38	0xEE000A10  VMOV	S0, R0
0x1A3C	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1A40	0xEE800A20  VDIV.F32	S0, S0, S1
0x1A44	0x480A    LDR	R0, [PC, #40]
0x1A46	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 283 :: 		baz = (float)accel_bias[2]/(float)accelsensitivity;
0x1A4A	0xF2050008  ADDW	R0, R5, #8
0x1A4E	0x6800    LDR	R0, [R0, #0]
0x1A50	0xEE000A10  VMOV	S0, R0
0x1A54	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1A58	0xEE800A20  VDIV.F32	S0, S0, S1
0x1A5C	0x4805    LDR	R0, [PC, #20]
0x1A5E	0xED000A00  VSTR.32	S0, [R0, #0]
;clicker_2_STM32.c, 284 :: 		}
L_end_calculateAccelAndGyroBiases:
0x1A62	0xF8DDE000  LDR	LR, [SP, #0]
0x1A66	0xB016    ADD	SP, SP, #88
0x1A68	0x4770    BX	LR
0x1A6A	0xBF00    NOP
0x1A6C	0x00682000  	_bax+0
0x1A70	0x006C2000  	_bay+0
0x1A74	0x00702000  	_baz+0
; end of _calculateAccelAndGyroBiases
_readBytes:
;clicker_2_STM32.c, 77 :: 		void readBytes(unsigned char registerAddress, int count, unsigned char *buffer) {
; buffer start address is: 8 (R2)
; count start address is: 4 (R1)
; registerAddress start address is: 0 (R0)
0x12DC	0xB081    SUB	SP, SP, #4
0x12DE	0xF8CDE000  STR	LR, [SP, #0]
0x12E2	0xFA0FFA81  SXTH	R10, R1
0x12E6	0x4693    MOV	R11, R2
; buffer end address is: 8 (R2)
; count end address is: 4 (R1)
; registerAddress end address is: 0 (R0)
; registerAddress start address is: 0 (R0)
; count start address is: 40 (R10)
; buffer start address is: 44 (R11)
;clicker_2_STM32.c, 78 :: 		buffer[0] = registerAddress;
0x12E8	0xF88B0000  STRB	R0, [R11, #0]
; registerAddress end address is: 0 (R0)
;clicker_2_STM32.c, 80 :: 		I2C2_Start();
0x12EC	0xF7FFFE5E  BL	_I2C2_Start+0
;clicker_2_STM32.c, 81 :: 		I2C2_Write(MPU6050_ADDRESS, buffer, 1, END_MODE_RESTART);
0x12F0	0xF2400300  MOVW	R3, #0
0x12F4	0x2201    MOVS	R2, #1
0x12F6	0x4659    MOV	R1, R11
0x12F8	0x2068    MOVS	R0, #104
0x12FA	0xF7FFFC3D  BL	_I2C2_Write+0
;clicker_2_STM32.c, 82 :: 		I2C2_Read(MPU6050_ADDRESS, buffer, count, END_MODE_STOP);
0x12FE	0xF2400301  MOVW	R3, #1
0x1302	0xFA0FF28A  SXTH	R2, R10
; count end address is: 40 (R10)
0x1306	0x4659    MOV	R1, R11
; buffer end address is: 44 (R11)
0x1308	0x2068    MOVS	R0, #104
0x130A	0xF7FFFAD9  BL	_I2C2_Read+0
;clicker_2_STM32.c, 83 :: 		}
L_end_readBytes:
0x130E	0xF8DDE000  LDR	LR, [SP, #0]
0x1312	0xB001    ADD	SP, SP, #4
0x1314	0x4770    BX	LR
; end of _readBytes
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x1098	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x109A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x109E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x10A2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x10A6	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x10A8	0xB001    ADD	SP, SP, #4
0x10AA	0x4770    BX	LR
; end of ___CC2DW
_initMPU6050:
;clicker_2_STM32.c, 286 :: 		void initMPU6050() {
0x1434	0xB081    SUB	SP, SP, #4
0x1436	0xF8CDE000  STR	LR, [SP, #0]
;clicker_2_STM32.c, 288 :: 		writeByte(PWR_MGMT_1, 0x09);              // also disable temperature sensor
0x143A	0x2109    MOVS	R1, #9
0x143C	0x206B    MOVS	R0, #107
0x143E	0xF7FFFE15  BL	_writeByte+0
;clicker_2_STM32.c, 289 :: 		writeByte(CONFIG, 0x06);
0x1442	0x2106    MOVS	R1, #6
0x1444	0x201A    MOVS	R0, #26
0x1446	0xF7FFFE11  BL	_writeByte+0
;clicker_2_STM32.c, 290 :: 		writeByte(SMPLRT_DIV, 0x04);
0x144A	0x2104    MOVS	R1, #4
0x144C	0x2019    MOVS	R0, #25
0x144E	0xF7FFFE0D  BL	_writeByte+0
;clicker_2_STM32.c, 291 :: 		c =  readByte(GYRO_CONFIG);
0x1452	0x201B    MOVS	R0, #27
0x1454	0xF7FFFF82  BL	_readByte+0
; c start address is: 40 (R10)
0x1458	0xFA5FFA80  UXTB	R10, R0
;clicker_2_STM32.c, 292 :: 		writeByte(GYRO_CONFIG, c & ~0xE0);        // Clear self-test bits [7:5]
0x145C	0xF000001F  AND	R0, R0, #31
0x1460	0xB2C1    UXTB	R1, R0
0x1462	0x201B    MOVS	R0, #27
0x1464	0xF7FFFE02  BL	_writeByte+0
;clicker_2_STM32.c, 293 :: 		writeByte(GYRO_CONFIG, c & ~0x18);        // Clear AFS bits [4:3]
0x1468	0xF64F70E7  MOVW	R0, #65511
0x146C	0xB200    SXTH	R0, R0
0x146E	0xEA0A0000  AND	R0, R10, R0, LSL #0
0x1472	0xB2C1    UXTB	R1, R0
0x1474	0x201B    MOVS	R0, #27
0x1476	0xF7FFFDF9  BL	_writeByte+0
;clicker_2_STM32.c, 294 :: 		writeByte(GYRO_CONFIG, c | Gscale << 3);  // Set full scale range for the gyro
0x147A	0x4821    LDR	R0, [PC, #132]
0x147C	0xF9B00000  LDRSH	R0, [R0, #0]
0x1480	0x00C0    LSLS	R0, R0, #3
0x1482	0xB200    SXTH	R0, R0
0x1484	0xEA4A0000  ORR	R0, R10, R0, LSL #0
; c end address is: 40 (R10)
0x1488	0xB2C1    UXTB	R1, R0
0x148A	0x201B    MOVS	R0, #27
0x148C	0xF7FFFDEE  BL	_writeByte+0
;clicker_2_STM32.c, 296 :: 		c =  readByte(ACCEL_CONFIG);
0x1490	0x201C    MOVS	R0, #28
0x1492	0xF7FFFF63  BL	_readByte+0
; c start address is: 40 (R10)
0x1496	0xFA5FFA80  UXTB	R10, R0
;clicker_2_STM32.c, 297 :: 		writeByte(ACCEL_CONFIG, c & ~0xE0);       // Clear self-test bits [7:5]
0x149A	0xF000001F  AND	R0, R0, #31
0x149E	0xB2C1    UXTB	R1, R0
0x14A0	0x201C    MOVS	R0, #28
0x14A2	0xF7FFFDE3  BL	_writeByte+0
;clicker_2_STM32.c, 298 :: 		writeByte(ACCEL_CONFIG, c & ~0x18);       // Clear AFS bits [4:3]
0x14A6	0xF64F70E7  MOVW	R0, #65511
0x14AA	0xB200    SXTH	R0, R0
0x14AC	0xEA0A0000  AND	R0, R10, R0, LSL #0
0x14B0	0xB2C1    UXTB	R1, R0
0x14B2	0x201C    MOVS	R0, #28
0x14B4	0xF7FFFDDA  BL	_writeByte+0
;clicker_2_STM32.c, 299 :: 		writeByte(ACCEL_CONFIG, c | Ascale << 3); // Set full scale range for the accelerometer
0x14B8	0x4812    LDR	R0, [PC, #72]
0x14BA	0xF9B00000  LDRSH	R0, [R0, #0]
0x14BE	0x00C0    LSLS	R0, R0, #3
0x14C0	0xB200    SXTH	R0, R0
0x14C2	0xEA4A0000  ORR	R0, R10, R0, LSL #0
; c end address is: 40 (R10)
0x14C6	0xB2C1    UXTB	R1, R0
0x14C8	0x201C    MOVS	R0, #28
0x14CA	0xF7FFFDCF  BL	_writeByte+0
;clicker_2_STM32.c, 301 :: 		writeByte(INT_PIN_CFG, 0xA0);
0x14CE	0x21A0    MOVS	R1, #160
0x14D0	0x2037    MOVS	R0, #55
0x14D2	0xF7FFFDCB  BL	_writeByte+0
;clicker_2_STM32.c, 302 :: 		writeByte(MOT_THR, 0x14);
0x14D6	0x2114    MOVS	R1, #20
0x14D8	0x201F    MOVS	R0, #31
0x14DA	0xF7FFFDC7  BL	_writeByte+0
;clicker_2_STM32.c, 303 :: 		writeByte(MOT_DUR, 0x28);
0x14DE	0x2128    MOVS	R1, #40
0x14E0	0x2020    MOVS	R0, #32
0x14E2	0xF7FFFDC3  BL	_writeByte+0
;clicker_2_STM32.c, 304 :: 		writeByte(MOT_DETECT_CTRL, 0x15);
0x14E6	0x2115    MOVS	R1, #21
0x14E8	0x2069    MOVS	R0, #105
0x14EA	0xF7FFFDBF  BL	_writeByte+0
;clicker_2_STM32.c, 305 :: 		writeByte(INT_ENABLE, 0x40);
0x14EE	0x2140    MOVS	R1, #64
0x14F0	0x2038    MOVS	R0, #56
0x14F2	0xF7FFFDBB  BL	_writeByte+0
;clicker_2_STM32.c, 306 :: 		}
L_end_initMPU6050:
0x14F6	0xF8DDE000  LDR	LR, [SP, #0]
0x14FA	0xB001    ADD	SP, SP, #4
0x14FC	0x4770    BX	LR
0x14FE	0xBF00    NOP
0x1500	0x00482000  	_Gscale+0
0x1504	0x004A2000  	_Ascale+0
; end of _initMPU6050
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x1508	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x150A	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x150E	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x1512	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x1516	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x1518	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x151C	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x151E	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x1520	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x1522	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x1526	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x152A	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x152C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x1530	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x1532	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x1534	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x1538	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x153C	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x153E	0xB001    ADD	SP, SP, #4
0x1540	0x4770    BX	LR
; end of ___FillZeros
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1F20	0xB082    SUB	SP, SP, #8
0x1F22	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1F26	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x1F28	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x1F2A	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1F2C	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F2E	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x1F30	0x2803    CMP	R0, #3
0x1F32	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x1F36	0x4893    LDR	R0, [PC, #588]
0x1F38	0x4281    CMP	R1, R0
0x1F3A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x1F3C	0x4892    LDR	R0, [PC, #584]
0x1F3E	0x6800    LDR	R0, [R0, #0]
0x1F40	0xF0400105  ORR	R1, R0, #5
0x1F44	0x4890    LDR	R0, [PC, #576]
0x1F46	0x6001    STR	R1, [R0, #0]
0x1F48	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F4A	0x4890    LDR	R0, [PC, #576]
0x1F4C	0x4281    CMP	R1, R0
0x1F4E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x1F50	0x488D    LDR	R0, [PC, #564]
0x1F52	0x6800    LDR	R0, [R0, #0]
0x1F54	0xF0400104  ORR	R1, R0, #4
0x1F58	0x488B    LDR	R0, [PC, #556]
0x1F5A	0x6001    STR	R1, [R0, #0]
0x1F5C	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F5E	0x488C    LDR	R0, [PC, #560]
0x1F60	0x4281    CMP	R1, R0
0x1F62	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x1F64	0x4888    LDR	R0, [PC, #544]
0x1F66	0x6800    LDR	R0, [R0, #0]
0x1F68	0xF0400103  ORR	R1, R0, #3
0x1F6C	0x4886    LDR	R0, [PC, #536]
0x1F6E	0x6001    STR	R1, [R0, #0]
0x1F70	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F72	0xF64E2060  MOVW	R0, #60000
0x1F76	0x4281    CMP	R1, R0
0x1F78	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x1F7A	0x4883    LDR	R0, [PC, #524]
0x1F7C	0x6800    LDR	R0, [R0, #0]
0x1F7E	0xF0400102  ORR	R1, R0, #2
0x1F82	0x4881    LDR	R0, [PC, #516]
0x1F84	0x6001    STR	R1, [R0, #0]
0x1F86	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F88	0xF2475030  MOVW	R0, #30000
0x1F8C	0x4281    CMP	R1, R0
0x1F8E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1F90	0x487D    LDR	R0, [PC, #500]
0x1F92	0x6800    LDR	R0, [R0, #0]
0x1F94	0xF0400101  ORR	R1, R0, #1
0x1F98	0x487B    LDR	R0, [PC, #492]
0x1F9A	0x6001    STR	R1, [R0, #0]
0x1F9C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1F9E	0x487A    LDR	R0, [PC, #488]
0x1FA0	0x6801    LDR	R1, [R0, #0]
0x1FA2	0xF06F0007  MVN	R0, #7
0x1FA6	0x4001    ANDS	R1, R0
0x1FA8	0x4877    LDR	R0, [PC, #476]
0x1FAA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x1FAC	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1FAE	0x2802    CMP	R0, #2
0x1FB0	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x1FB4	0x4877    LDR	R0, [PC, #476]
0x1FB6	0x4281    CMP	R1, R0
0x1FB8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x1FBA	0x4873    LDR	R0, [PC, #460]
0x1FBC	0x6800    LDR	R0, [R0, #0]
0x1FBE	0xF0400106  ORR	R1, R0, #6
0x1FC2	0x4871    LDR	R0, [PC, #452]
0x1FC4	0x6001    STR	R1, [R0, #0]
0x1FC6	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FC8	0x4870    LDR	R0, [PC, #448]
0x1FCA	0x4281    CMP	R1, R0
0x1FCC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x1FCE	0x486E    LDR	R0, [PC, #440]
0x1FD0	0x6800    LDR	R0, [R0, #0]
0x1FD2	0xF0400105  ORR	R1, R0, #5
0x1FD6	0x486C    LDR	R0, [PC, #432]
0x1FD8	0x6001    STR	R1, [R0, #0]
0x1FDA	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FDC	0x486E    LDR	R0, [PC, #440]
0x1FDE	0x4281    CMP	R1, R0
0x1FE0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x1FE2	0x4869    LDR	R0, [PC, #420]
0x1FE4	0x6800    LDR	R0, [R0, #0]
0x1FE6	0xF0400104  ORR	R1, R0, #4
0x1FEA	0x4867    LDR	R0, [PC, #412]
0x1FEC	0x6001    STR	R1, [R0, #0]
0x1FEE	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FF0	0x486A    LDR	R0, [PC, #424]
0x1FF2	0x4281    CMP	R1, R0
0x1FF4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x1FF6	0x4864    LDR	R0, [PC, #400]
0x1FF8	0x6800    LDR	R0, [R0, #0]
0x1FFA	0xF0400103  ORR	R1, R0, #3
0x1FFE	0x4862    LDR	R0, [PC, #392]
0x2000	0x6001    STR	R1, [R0, #0]
0x2002	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2004	0xF64B3080  MOVW	R0, #48000
0x2008	0x4281    CMP	R1, R0
0x200A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x200C	0x485E    LDR	R0, [PC, #376]
0x200E	0x6800    LDR	R0, [R0, #0]
0x2010	0xF0400102  ORR	R1, R0, #2
0x2014	0x485C    LDR	R0, [PC, #368]
0x2016	0x6001    STR	R1, [R0, #0]
0x2018	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x201A	0xF64550C0  MOVW	R0, #24000
0x201E	0x4281    CMP	R1, R0
0x2020	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x2022	0x4859    LDR	R0, [PC, #356]
0x2024	0x6800    LDR	R0, [R0, #0]
0x2026	0xF0400101  ORR	R1, R0, #1
0x202A	0x4857    LDR	R0, [PC, #348]
0x202C	0x6001    STR	R1, [R0, #0]
0x202E	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x2030	0x4855    LDR	R0, [PC, #340]
0x2032	0x6801    LDR	R1, [R0, #0]
0x2034	0xF06F0007  MVN	R0, #7
0x2038	0x4001    ANDS	R1, R0
0x203A	0x4853    LDR	R0, [PC, #332]
0x203C	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x203E	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2040	0x2801    CMP	R0, #1
0x2042	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x2046	0x4851    LDR	R0, [PC, #324]
0x2048	0x4281    CMP	R1, R0
0x204A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x204C	0x484E    LDR	R0, [PC, #312]
0x204E	0x6800    LDR	R0, [R0, #0]
0x2050	0xF0400107  ORR	R1, R0, #7
0x2054	0x484C    LDR	R0, [PC, #304]
0x2056	0x6001    STR	R1, [R0, #0]
0x2058	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x205A	0x4851    LDR	R0, [PC, #324]
0x205C	0x4281    CMP	R1, R0
0x205E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x2060	0x4849    LDR	R0, [PC, #292]
0x2062	0x6800    LDR	R0, [R0, #0]
0x2064	0xF0400106  ORR	R1, R0, #6
0x2068	0x4847    LDR	R0, [PC, #284]
0x206A	0x6001    STR	R1, [R0, #0]
0x206C	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x206E	0x4848    LDR	R0, [PC, #288]
0x2070	0x4281    CMP	R1, R0
0x2072	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x2074	0x4844    LDR	R0, [PC, #272]
0x2076	0x6800    LDR	R0, [R0, #0]
0x2078	0xF0400105  ORR	R1, R0, #5
0x207C	0x4842    LDR	R0, [PC, #264]
0x207E	0x6001    STR	R1, [R0, #0]
0x2080	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2082	0x4846    LDR	R0, [PC, #280]
0x2084	0x4281    CMP	R1, R0
0x2086	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x2088	0x483F    LDR	R0, [PC, #252]
0x208A	0x6800    LDR	R0, [R0, #0]
0x208C	0xF0400104  ORR	R1, R0, #4
0x2090	0x483D    LDR	R0, [PC, #244]
0x2092	0x6001    STR	R1, [R0, #0]
0x2094	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2096	0xF24D20F0  MOVW	R0, #54000
0x209A	0x4281    CMP	R1, R0
0x209C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x209E	0x483A    LDR	R0, [PC, #232]
0x20A0	0x6800    LDR	R0, [R0, #0]
0x20A2	0xF0400103  ORR	R1, R0, #3
0x20A6	0x4838    LDR	R0, [PC, #224]
0x20A8	0x6001    STR	R1, [R0, #0]
0x20AA	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x20AC	0xF64840A0  MOVW	R0, #36000
0x20B0	0x4281    CMP	R1, R0
0x20B2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x20B4	0x4834    LDR	R0, [PC, #208]
0x20B6	0x6800    LDR	R0, [R0, #0]
0x20B8	0xF0400102  ORR	R1, R0, #2
0x20BC	0x4832    LDR	R0, [PC, #200]
0x20BE	0x6001    STR	R1, [R0, #0]
0x20C0	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x20C2	0xF2446050  MOVW	R0, #18000
0x20C6	0x4281    CMP	R1, R0
0x20C8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x20CA	0x482F    LDR	R0, [PC, #188]
0x20CC	0x6800    LDR	R0, [R0, #0]
0x20CE	0xF0400101  ORR	R1, R0, #1
0x20D2	0x482D    LDR	R0, [PC, #180]
0x20D4	0x6001    STR	R1, [R0, #0]
0x20D6	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x20D8	0x482B    LDR	R0, [PC, #172]
0x20DA	0x6801    LDR	R1, [R0, #0]
0x20DC	0xF06F0007  MVN	R0, #7
0x20E0	0x4001    ANDS	R1, R0
0x20E2	0x4829    LDR	R0, [PC, #164]
0x20E4	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x20E6	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x20E8	0x2800    CMP	R0, #0
0x20EA	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x20EE	0x482D    LDR	R0, [PC, #180]
0x20F0	0x4281    CMP	R1, R0
0x20F2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x20F4	0x4824    LDR	R0, [PC, #144]
0x20F6	0x6800    LDR	R0, [R0, #0]
0x20F8	0xF0400107  ORR	R1, R0, #7
0x20FC	0x4822    LDR	R0, [PC, #136]
0x20FE	0x6001    STR	R1, [R0, #0]
0x2100	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2102	0x4825    LDR	R0, [PC, #148]
0x2104	0x4281    CMP	R1, R0
0x2106	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x2108	0x481F    LDR	R0, [PC, #124]
0x210A	0x6800    LDR	R0, [R0, #0]
0x210C	0xF0400106  ORR	R1, R0, #6
0x2110	0x481D    LDR	R0, [PC, #116]
0x2112	0x6001    STR	R1, [R0, #0]
0x2114	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2116	0x4824    LDR	R0, [PC, #144]
0x2118	0x4281    CMP	R1, R0
0x211A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x211C	0x481A    LDR	R0, [PC, #104]
0x211E	0x6800    LDR	R0, [R0, #0]
0x2120	0xF0400105  ORR	R1, R0, #5
0x2124	0x4818    LDR	R0, [PC, #96]
0x2126	0x6001    STR	R1, [R0, #0]
0x2128	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x212A	0xF5B14F7A  CMP	R1, #64000
0x212E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x2130	0x4815    LDR	R0, [PC, #84]
0x2132	0x6800    LDR	R0, [R0, #0]
0x2134	0xF0400104  ORR	R1, R0, #4
0x2138	0x4813    LDR	R0, [PC, #76]
0x213A	0x6001    STR	R1, [R0, #0]
0x213C	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x213E	0xF64B3080  MOVW	R0, #48000
0x2142	0x4281    CMP	R1, R0
0x2144	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x2146	0x4810    LDR	R0, [PC, #64]
0x2148	0x6800    LDR	R0, [R0, #0]
0x214A	0xF0400103  ORR	R1, R0, #3
0x214E	0x480E    LDR	R0, [PC, #56]
0x2150	0x6001    STR	R1, [R0, #0]
0x2152	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2154	0xF5B14FFA  CMP	R1, #32000
0x2158	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x215A	0x480B    LDR	R0, [PC, #44]
0x215C	0x6800    LDR	R0, [R0, #0]
0x215E	0xF0400102  ORR	R1, R0, #2
0x2162	0x4809    LDR	R0, [PC, #36]
0x2164	0x6001    STR	R1, [R0, #0]
0x2166	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2168	0xF5B15F7A  CMP	R1, #16000
0x216C	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x216E	0xE01D    B	#58
0x2170	0x00810100  	#16777345
0x2174	0x1E080500  	#83893768
0x2178	0x94020000  	#37890
0x217C	0x00030000  	#3
0x2180	0xD4C00001  	#120000
0x2184	0x49F00002  	#150000
0x2188	0x3C004002  	FLASH_ACR+0
0x218C	0xD4C00001  	#120000
0x2190	0x5F900001  	#90000
0x2194	0x32800002  	#144000
0x2198	0x77000001  	#96000
0x219C	0x19400001  	#72000
0x21A0	0xA5E00001  	#108000
0x21A4	0xB5800001  	#112000
0x21A8	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x21AC	0x482D    LDR	R0, [PC, #180]
0x21AE	0x6800    LDR	R0, [R0, #0]
0x21B0	0xF0400101  ORR	R1, R0, #1
0x21B4	0x482B    LDR	R0, [PC, #172]
0x21B6	0x6001    STR	R1, [R0, #0]
0x21B8	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x21BA	0x482A    LDR	R0, [PC, #168]
0x21BC	0x6801    LDR	R1, [R0, #0]
0x21BE	0xF06F0007  MVN	R0, #7
0x21C2	0x4001    ANDS	R1, R0
0x21C4	0x4827    LDR	R0, [PC, #156]
0x21C6	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x21C8	0x2101    MOVS	R1, #1
0x21CA	0xB249    SXTB	R1, R1
0x21CC	0x4826    LDR	R0, [PC, #152]
0x21CE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x21D0	0x4826    LDR	R0, [PC, #152]
0x21D2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x21D4	0xF7FFF908  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x21D8	0x4825    LDR	R0, [PC, #148]
0x21DA	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x21DC	0x4825    LDR	R0, [PC, #148]
0x21DE	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x21E0	0x4825    LDR	R0, [PC, #148]
0x21E2	0xEA020100  AND	R1, R2, R0, LSL #0
0x21E6	0x4825    LDR	R0, [PC, #148]
0x21E8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x21EA	0xF0020001  AND	R0, R2, #1
0x21EE	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x21F0	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x21F2	0x4822    LDR	R0, [PC, #136]
0x21F4	0x6800    LDR	R0, [R0, #0]
0x21F6	0xF0000002  AND	R0, R0, #2
0x21FA	0x2800    CMP	R0, #0
0x21FC	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x21FE	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2200	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x2202	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2204	0xF4023080  AND	R0, R2, #65536
0x2208	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x220A	0x481C    LDR	R0, [PC, #112]
0x220C	0x6800    LDR	R0, [R0, #0]
0x220E	0xF4003000  AND	R0, R0, #131072
0x2212	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x2214	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x2216	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2218	0x460A    MOV	R2, R1
0x221A	0x9901    LDR	R1, [SP, #4]
0x221C	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x221E	0x9101    STR	R1, [SP, #4]
0x2220	0x4611    MOV	R1, R2
0x2222	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2224	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2228	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x222A	0x4814    LDR	R0, [PC, #80]
0x222C	0x6800    LDR	R0, [R0, #0]
0x222E	0xF0407180  ORR	R1, R0, #16777216
0x2232	0x4812    LDR	R0, [PC, #72]
0x2234	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x2236	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x2238	0x4810    LDR	R0, [PC, #64]
0x223A	0x6800    LDR	R0, [R0, #0]
0x223C	0xF0007000  AND	R0, R0, #33554432
0x2240	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x2242	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x2244	0x460A    MOV	R2, R1
0x2246	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x2248	0x480A    LDR	R0, [PC, #40]
0x224A	0x6800    LDR	R0, [R0, #0]
0x224C	0xF000010C  AND	R1, R0, #12
0x2250	0x0090    LSLS	R0, R2, #2
0x2252	0xF000000C  AND	R0, R0, #12
0x2256	0x4281    CMP	R1, R0
0x2258	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x225A	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x225C	0xF8DDE000  LDR	LR, [SP, #0]
0x2260	0xB002    ADD	SP, SP, #8
0x2262	0x4770    BX	LR
0x2264	0x3C004002  	FLASH_ACR+0
0x2268	0x80204247  	FLASH_ACR+0
0x226C	0x80244247  	FLASH_ACR+0
0x2270	0x38044002  	RCC_PLLCFGR+0
0x2274	0x38084002  	RCC_CFGR+0
0x2278	0xFFFF000F  	#1048575
0x227C	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x13E8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x13EA	0x480D    LDR	R0, [PC, #52]
0x13EC	0x6800    LDR	R0, [R0, #0]
0x13EE	0xF0400101  ORR	R1, R0, #1
0x13F2	0x480B    LDR	R0, [PC, #44]
0x13F4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x13F6	0x2100    MOVS	R1, #0
0x13F8	0x480A    LDR	R0, [PC, #40]
0x13FA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x13FC	0x4808    LDR	R0, [PC, #32]
0x13FE	0x6801    LDR	R1, [R0, #0]
0x1400	0x4809    LDR	R0, [PC, #36]
0x1402	0x4001    ANDS	R1, R0
0x1404	0x4806    LDR	R0, [PC, #24]
0x1406	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x1408	0x4908    LDR	R1, [PC, #32]
0x140A	0x4809    LDR	R0, [PC, #36]
0x140C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x140E	0x4804    LDR	R0, [PC, #16]
0x1410	0x6801    LDR	R1, [R0, #0]
0x1412	0xF46F2080  MVN	R0, #262144
0x1416	0x4001    ANDS	R1, R0
0x1418	0x4801    LDR	R0, [PC, #4]
0x141A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x141C	0xB001    ADD	SP, SP, #4
0x141E	0x4770    BX	LR
0x1420	0x38004002  	RCC_CR+0
0x1424	0x38084002  	RCC_CFGR+0
0x1428	0xFFFFFEF6  	#-17367041
0x142C	0x30102400  	#603992080
0x1430	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x1E90	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x1E92	0x4904    LDR	R1, [PC, #16]
0x1E94	0x4804    LDR	R0, [PC, #16]
0x1E96	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x1E98	0x4904    LDR	R1, [PC, #16]
0x1E9A	0x4805    LDR	R0, [PC, #20]
0x1E9C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x1E9E	0xB001    ADD	SP, SP, #4
0x1EA0	0x4770    BX	LR
0x1EA2	0xBF00    NOP
0x1EA4	0xD4C00001  	#120000
0x1EA8	0x00742000  	___System_CLOCK_IN_KHZ+0
0x1EAC	0x00030000  	#3
0x1EB0	0x00842000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x1E88	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x1E8A	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x1E8C	0xB001    ADD	SP, SP, #4
0x1E8E	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x1E5C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x1E5E	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x1E62	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x1E66	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x1E68	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x1E6C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x1E6E	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1E70	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x1E72	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x1E74	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x1E76	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x1E7A	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x1E7E	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x1E82	0xB001    ADD	SP, SP, #4
0x1E84	0x4770    BX	LR
; end of ___EnableFPU
0x243C	0xB500    PUSH	(R14)
0x243E	0xF8DFB014  LDR	R11, [PC, #20]
0x2442	0xF8DFA014  LDR	R10, [PC, #20]
0x2446	0xF8DFC014  LDR	R12, [PC, #20]
0x244A	0xF7FEFE25  BL	4248
0x244E	0xBD00    POP	(R15)
0x2450	0x4770    BX	LR
0x2452	0xBF00    NOP
0x2454	0x00002000  	#536870912
0x2458	0x005C2000  	#536871004
0x245C	0x23580000  	#9048
0x24BC	0xB500    PUSH	(R14)
0x24BE	0xF8DFB010  LDR	R11, [PC, #16]
0x24C2	0xF8DFA010  LDR	R10, [PC, #16]
0x24C6	0xF7FFF81F  BL	5384
0x24CA	0xBD00    POP	(R15)
0x24CC	0x4770    BX	LR
0x24CE	0xBF00    NOP
0x24D0	0x00002000  	#536870912
0x24D4	0x00982000  	#536871064
;__Lib_GPIO_32F4xx_Defs.c,821 :: __GPIO_MODULE_UART4_PA01 [108]
0x2280	0x00000800 ;__GPIO_MODULE_UART4_PA01+0
0x2284	0x00000801 ;__GPIO_MODULE_UART4_PA01+4
0x2288	0xFFFFFFFF ;__GPIO_MODULE_UART4_PA01+8
0x228C	0x00000000 ;__GPIO_MODULE_UART4_PA01+12
0x2290	0x00000000 ;__GPIO_MODULE_UART4_PA01+16
0x2294	0x00000000 ;__GPIO_MODULE_UART4_PA01+20
0x2298	0x00000000 ;__GPIO_MODULE_UART4_PA01+24
0x229C	0x00000000 ;__GPIO_MODULE_UART4_PA01+28
0x22A0	0x00000000 ;__GPIO_MODULE_UART4_PA01+32
0x22A4	0x00000000 ;__GPIO_MODULE_UART4_PA01+36
0x22A8	0x00000000 ;__GPIO_MODULE_UART4_PA01+40
0x22AC	0x00000000 ;__GPIO_MODULE_UART4_PA01+44
0x22B0	0x00000000 ;__GPIO_MODULE_UART4_PA01+48
0x22B4	0x00001018 ;__GPIO_MODULE_UART4_PA01+52
0x22B8	0x00001018 ;__GPIO_MODULE_UART4_PA01+56
0x22BC	0x00000000 ;__GPIO_MODULE_UART4_PA01+60
0x22C0	0x00000000 ;__GPIO_MODULE_UART4_PA01+64
0x22C4	0x00000000 ;__GPIO_MODULE_UART4_PA01+68
0x22C8	0x00000000 ;__GPIO_MODULE_UART4_PA01+72
0x22CC	0x00000000 ;__GPIO_MODULE_UART4_PA01+76
0x22D0	0x00000000 ;__GPIO_MODULE_UART4_PA01+80
0x22D4	0x00000000 ;__GPIO_MODULE_UART4_PA01+84
0x22D8	0x00000000 ;__GPIO_MODULE_UART4_PA01+88
0x22DC	0x00000000 ;__GPIO_MODULE_UART4_PA01+92
0x22E0	0x00000000 ;__GPIO_MODULE_UART4_PA01+96
0x22E4	0x00000000 ;__GPIO_MODULE_UART4_PA01+100
0x22E8	0x00000000 ;__GPIO_MODULE_UART4_PA01+104
; end of __GPIO_MODULE_UART4_PA01
;__Lib_GPIO_32F4xx_Defs.c,769 :: __GPIO_MODULE_I2C2_PB10_11 [108]
0x22EC	0x0000041A ;__GPIO_MODULE_I2C2_PB10_11+0
0x22F0	0x0000041B ;__GPIO_MODULE_I2C2_PB10_11+4
0x22F4	0xFFFFFFFF ;__GPIO_MODULE_I2C2_PB10_11+8
0x22F8	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+12
0x22FC	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+16
0x2300	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+20
0x2304	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+24
0x2308	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+28
0x230C	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+32
0x2310	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+36
0x2314	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+40
0x2318	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+44
0x231C	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+48
0x2320	0x00001028 ;__GPIO_MODULE_I2C2_PB10_11+52
0x2324	0x00001028 ;__GPIO_MODULE_I2C2_PB10_11+56
0x2328	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+60
0x232C	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+64
0x2330	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+68
0x2334	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+72
0x2338	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+76
0x233C	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+80
0x2340	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+84
0x2344	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+88
0x2348	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+92
0x234C	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+96
0x2350	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+100
0x2354	0x00000000 ;__GPIO_MODULE_I2C2_PB10_11+104
; end of __GPIO_MODULE_I2C2_PB10_11
;,0 :: _initBlock_2 [72]
; Containing: ?ICS?lstr1_clicker_2_STM32 [41]
;             ?ICS?lstr2_clicker_2_STM32 [31]
0x2358	0x6C696146 ;_initBlock_2+0 : ?ICS?lstr1_clicker_2_STM32 at 0x2358
0x235C	0x74206465 ;_initBlock_2+4
0x2360	0x6572206F ;_initBlock_2+8
0x2364	0x27206461 ;_initBlock_2+12
0x2368	0x204F4857 ;_initBlock_2+16
0x236C	0x49204D41 ;_initBlock_2+20
0x2370	0x72662027 ;_initBlock_2+24
0x2374	0x4D206D6F ;_initBlock_2+28
0x2378	0x30365550 ;_initBlock_2+32
0x237C	0x0A0D3035 ;_initBlock_2+36
0x2380	0x61655200 ;_initBlock_2+40 : ?ICS?lstr2_clicker_2_STM32 at 0x2381
0x2384	0x57272064 ;_initBlock_2+44
0x2388	0x41204F48 ;_initBlock_2+48
0x238C	0x2749204D ;_initBlock_2+52
0x2390	0x6F726620 ;_initBlock_2+56
0x2394	0x504D206D ;_initBlock_2+60
0x2398	0x35303655 ;_initBlock_2+64
0x239C	0x000A0D30 ;_initBlock_2+68
; end of _initBlock_2
;clicker_2_STM32.c,0 :: ?ICS_Gscale [2]
0x23A0	0x0000 ;?ICS_Gscale+0
; end of ?ICS_Gscale
;clicker_2_STM32.c,0 :: ?ICS_Ascale [2]
0x23A2	0x0000 ;?ICS_Ascale+0
; end of ?ICS_Ascale
;__Lib_System_4XX.c,0 :: ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x23A4	0x00000000 ;?ICS__Lib_System_4XX_APBAHBPrescTable+0
0x23A8	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+4
0x23AC	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+8
0x23B0	0x09080706 ;?ICS__Lib_System_4XX_APBAHBPrescTable+12
; end of ?ICS__Lib_System_4XX_APBAHBPrescTable
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_accel_temp_L1 [6]
0x23B4	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_temp_L1+0
0x23B8	0x0000 ;?ICScalculateAccelAndGyroBiases_accel_temp_L1+4
; end of ?ICScalculateAccelAndGyroBiases_accel_temp_L1
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_gyro_temp_L1 [6]
0x23BA	0x00000000 ;?ICScalculateAccelAndGyroBiases_gyro_temp_L1+0
0x23BE	0x0000 ;?ICScalculateAccelAndGyroBiases_gyro_temp_L1+4
; end of ?ICScalculateAccelAndGyroBiases_gyro_temp_L1
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_gyro_bias_L0 [12]
0x23C0	0x00000000 ;?ICScalculateAccelAndGyroBiases_gyro_bias_L0+0
0x23C4	0x00000000 ;?ICScalculateAccelAndGyroBiases_gyro_bias_L0+4
0x23C8	0x00000000 ;?ICScalculateAccelAndGyroBiases_gyro_bias_L0+8
; end of ?ICScalculateAccelAndGyroBiases_gyro_bias_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_accel_bias_L0 [12]
0x23CC	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_L0+0
0x23D0	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_L0+4
0x23D4	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_L0+8
; end of ?ICScalculateAccelAndGyroBiases_accel_bias_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_accelsensitivity_L0 [2]
0x23D8	0x4000 ;?ICScalculateAccelAndGyroBiases_accelsensitivity_L0+0
; end of ?ICScalculateAccelAndGyroBiases_accelsensitivity_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_gyrosensitivity_L0 [2]
0x23DA	0x0083 ;?ICScalculateAccelAndGyroBiases_gyrosensitivity_L0+0
; end of ?ICScalculateAccelAndGyroBiases_gyrosensitivity_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0 [12]
0x23DC	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0+0
0x23E0	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0+4
0x23E4	0x00000000 ;?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0+8
; end of ?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_mask_L0 [4]
0x23E8	0x00000001 ;?ICScalculateAccelAndGyroBiases_mask_L0+0
; end of ?ICScalculateAccelAndGyroBiases_mask_L0
;clicker_2_STM32.c,0 :: ?ICScalculateAccelAndGyroBiases_mask_bit_L0 [3]
0x23EC	0x000000 ;?ICScalculateAccelAndGyroBiases_mask_bit_L0+0
; end of ?ICScalculateAccelAndGyroBiases_mask_bit_L0
;__Lib_CMath.c,329 :: exp_coeff_L0 [40]
0x23F0	0x3F800000 ;exp_coeff_L0+0
0x23F4	0x3F317218 ;exp_coeff_L0+4
0x23F8	0x3E75FDF0 ;exp_coeff_L0+8
0x23FC	0x3D635847 ;exp_coeff_L0+12
0x2400	0x3C1D9558 ;exp_coeff_L0+16
0x2404	0x3AAEC482 ;exp_coeff_L0+20
0x2408	0x392178A8 ;exp_coeff_L0+24
0x240C	0x378093EF ;exp_coeff_L0+28
0x2410	0x35A792A0 ;exp_coeff_L0+32
0x2414	0x34155646 ;exp_coeff_L0+36
; end of exp_coeff_L0
;__Lib_CMath.c,367 :: log_coeff_L0 [36]
0x2418	0x2EDBE6FF ;log_coeff_L0+0
0x241C	0x3F7FFFC4 ;log_coeff_L0+4
0x2420	0xBEFFEF80 ;log_coeff_L0+8
0x2424	0x3EA9E190 ;log_coeff_L0+12
0x2428	0xBE7682EC ;log_coeff_L0+16
0x242C	0x3E2BAD82 ;log_coeff_L0+20
0x2430	0xBDC33C0E ;log_coeff_L0+24
0x2434	0x3D13D187 ;log_coeff_L0+28
0x2438	0xBBD37841 ;log_coeff_L0+32
; end of log_coeff_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [24]    _I2Cx_Is_Idle
0x01A0      [26]    _I2Cx_Get_Status
0x01BC      [36]    _ChekXForEvent
0x01E0      [12]    _Get_Fosc_kHz
0x01EC      [26]    __Lib_I2C_123_I2Cx_Wait_For_Idle
0x0208     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0304      [68]    _I2Cx_Start
0x0348      [64]    __Lib_CMath_eval_poly
0x0388     [126]    _floor
0x0408      [96]    _ldexp
0x0468      [42]    _frexp
0x0494     [180]    _I2Cx_Write
0x0548     [652]    _I2Cx_Read
0x07D4      [30]    __Lib_UART_123_45_6_UARTx_Write
0x07F4      [70]    _GPIO_Alternate_Function_Enable
0x083C     [132]    _RCC_GetClocksFrequency
0x08C0      [36]    _I2C2_Read
0x08E4     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x0B78      [36]    _I2C2_Write
0x0B9C      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x0BD0     [112]    _log
0x0C40     [168]    _GPIO_Clk_Enable
0x0CE8     [240]    _exp
0x0DD8     [468]    _I2Cx_Init_Advanced
0x0FAC      [24]    _I2C2_Start
0x0FC4     [166]    _pow
0x106C      [42]    _writeByte
0x1098      [20]    ___CC2DW
0x10AC     [560]    _GPIO_Config
0x12DC      [58]    _readBytes
0x1318      [40]    _UART4_Init_Advanced
0x1340      [28]    _I2C2_Init_Advanced
0x135C      [56]    _readByte
0x1394      [28]    _UART4_Write_Text
0x13B0      [56]    _checkMPU6050
0x13E8      [76]    __Lib_System_4XX_SystemClockSetDefault
0x1434     [212]    _initMPU6050
0x1508      [58]    ___FillZeros
0x1548    [1328]    _calculateAccelAndGyroBiases
0x1A78      [68]    _init_uart4
0x1AC0     [864]    _selfTestMPU6050
0x1E20      [32]    _init_i2c2
0x1E40      [28]    _GPIO_Digital_Output
0x1E5C      [42]    ___EnableFPU
0x1E88       [8]    ___GenExcept
0x1E90      [36]    __Lib_System_4XX_InitialSetUpFosc
0x1EB4     [108]    _main
0x1F20     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_exp_x
0x0004       [4]    FARG_atan2_x
0x0004       [4]    FARG_pow_y
0x20000000      [41]    ?lstr1_clicker_2_STM32
0x20000029      [31]    ?lstr2_clicker_2_STM32
0x20000048       [2]    _Gscale
0x2000004A       [2]    _Ascale
0x2000004C      [16]    __Lib_System_4XX_APBAHBPrescTable
0x2000005C       [4]    _bgx
0x20000060       [4]    _bgy
0x20000064       [4]    _bgz
0x20000068       [4]    _bax
0x2000006C       [4]    _bay
0x20000070       [4]    _baz
0x20000074       [4]    ___System_CLOCK_IN_KHZ
0x20000078       [4]    _I2C_Start_Ptr
0x2000007C       [4]    _I2C_Read_Ptr
0x20000080       [4]    _I2C_Write_Ptr
0x20000084       [4]    __VOLTAGE_RANGE
0x20000088       [4]    _UART_Wr_Ptr
0x2000008C       [4]    _UART_Rd_Ptr
0x20000090       [4]    _UART_Rdy_Ptr
0x20000094       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2280     [108]    __GPIO_MODULE_UART4_PA01
0x22EC     [108]    __GPIO_MODULE_I2C2_PB10_11
0x2358      [41]    ?ICS?lstr1_clicker_2_STM32
0x2381      [31]    ?ICS?lstr2_clicker_2_STM32
0x23A0       [2]    ?ICS_Gscale
0x23A2       [2]    ?ICS_Ascale
0x23A4      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x23B4       [6]    ?ICScalculateAccelAndGyroBiases_accel_temp_L1
0x23BA       [6]    ?ICScalculateAccelAndGyroBiases_gyro_temp_L1
0x23C0      [12]    ?ICScalculateAccelAndGyroBiases_gyro_bias_L0
0x23CC      [12]    ?ICScalculateAccelAndGyroBiases_accel_bias_L0
0x23D8       [2]    ?ICScalculateAccelAndGyroBiases_accelsensitivity_L0
0x23DA       [2]    ?ICScalculateAccelAndGyroBiases_gyrosensitivity_L0
0x23DC      [12]    ?ICScalculateAccelAndGyroBiases_accel_bias_reg_L0
0x23E8       [4]    ?ICScalculateAccelAndGyroBiases_mask_L0
0x23EC       [3]    ?ICScalculateAccelAndGyroBiases_mask_bit_L0
0x23F0      [40]    exp_coeff_L0
0x2418      [36]    log_coeff_L0
